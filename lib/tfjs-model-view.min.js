!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("tfjs-model-view",[],n):"object"==typeof exports?exports["tfjs-model-view"]=n():t["tfjs-model-view"]=n()}("undefined"!=typeof self?self:this,function(){return function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=2)}([function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,n){var e=[],r=!0,i=!1,u=void 0;try{for(var o,a=t[Symbol.iterator]();!(r=(o=a.next()).done)&&(e.push(o.value),!n||e.length!==n);r=!0);}catch(t){i=!0,u=t}finally{try{!r&&a.return&&a.return()}finally{if(i)throw u}}return e}(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function t(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(n,e,r){return e&&t(n.prototype,e),r&&t(n,r),n}}();var u=function(){function t(){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,t)}return i(t,[{key:"updateLayers",value:function(t,n){var e=this,r=t.activations,i=t.weights,u=t.renderData,o=t.previousColumn;u&&u.updatePrevious&&t.renderData.updatePrevious({weights:i,values:n}),o&&o.length>0&&o.forEach(function(t){e.updateLayers(t,r)})}},{key:"update",value:function(t){if(t){var n=t.model,e=t.output;this.updateLayers(n,e)}}},{key:"layerUpdate",value:function(t){t.name;var n=t.activations,e=t.weights,r=t.renderData;r&&r.updatePrevious&&t.renderData.updatePrevious({weights:e,previousValues:n})}},{key:"parseLayer",value:function(t){var n=this,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=t.shape,u=t.name,o=t.weights,a=t.activations,c=t.previousColumn,f=(t.mapPosition,this.groupIndex++),s=e.values,l=e.rightsideNodes,h=e.rightsideWeights,d=e.layerIndex,p=e.offset,v=e.line,y=[],g=[],b=r(i,4),_=(b[0],b[1]),m=b[2],x=void 0===m?1:m,w=b[3],M=void 0===w?1:w,k=h&&h[1]?h[1].values:void 0;h&&h[2]&&h[2].values;this.columnSizes[d]||(this.columnSizes[d]=0);for(var S=0;S<_*x*M;S++){var N=u+"-node-"+S,A={id:N,layerName:u,groupIndex:f,layerIndex:d,indexInLayer:y.length,indexInColumn:this.columnSizes[d],value:s?s[S]:void 0,bias:k?k[S]:"",line:v||0};this.columnSizes[d]++,this.nodesMap[N]=A,y.push(A)}var E=[],T=[];if(c&&c.length>0){var C=0;c.forEach(function(t,e){var r=n.parseLayer(t,{layerIndex:d-1,rightsideNodes:y,rightsideWeights:o,values:a,offset:C,line:e}),i=r.nodes,u=r.links;C+=i.length,E=E.concat(i),T=T.concat(u)})}if(this.config.renderLinks&&h){var P=h[2];l.forEach(function(t,e){y.forEach(function(r,i){if(P||e===i+p){var u={id:n.links.length,source:r,target:t,weight:P?P.values[i*e]:1};n.links.push(u),g.push(u)}})})}return t.renderData={nodes:y,updatePrevious:function(t){var e=t.previousValues,r=t.weights,i=t.values,u=r[1],o=r[2];u&&y.forEach(function(t,e){t.bias=u.values[e],n.updateBias(t)}),o&&T.forEach(function(t,e){n.updateLink(t,o.values[e])}),e&&E.forEach(function(t,r){n.updateNode(t,e[r])}),i&&y.forEach(function(t,e){n.updateNode(t,i[e])}),o&&T.forEach(function(t,n){t.weight=o.values[n]})}},{nodes:y,links:g}}},{key:"updateNode",value:function(t,n){}},{key:"updateBias",value:function(t){}},{key:"updateLink",value:function(t,n){}},{key:"initialize",value:function(t){var n=t.layerMap,e=t.model,r=t.output;this.groupIndex=0,this.nodesMap={},this.columnSizes={},this.links=[];var i=Object.keys(n).length;this.parseLayer(e,{layerIndex:i,values:r})}}]),t}();n.default=u,t.exports=n.default},function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return r(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)<0?r=u+1:i=u}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)>0?i=u:r=u+1}return r}}};var u=i(r),o=u.right,a=u.left,c=o,f=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],u=new Array(r<0?0:r);e<r;)u[e]=n(i,i=t[++e]);return u};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,u,o,a=t.length,c=n.length,f=new Array(a*c);for(null==e&&(e=s),r=u=0;r<a;++r)for(o=t[r],i=0;i<c;++i,++u)f[u]=e(o,n[i]);return f},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,u=0,o=-1,a=0,c=0;if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||(c+=(r=e-a)*(e-(a+=r/++u)));else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||(c+=(r=e-a)*(e-(a+=r/++u)));if(u>1)return c/(u-1)},v=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},y=function(t,n){var e,r,i,u=t.length,o=-1;if(null==n){for(;++o<u;)if(null!=(e=t[o])&&e>=e)for(r=i=e;++o<u;)null!=(e=t[o])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++o<u;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=i=e;++o<u;)null!=(e=n(t[o],o,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},g=Array.prototype,b=g.slice,_=g.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(i);++r<i;)u[r]=t+r*e;return u},M=Math.sqrt(50),k=Math.sqrt(10),S=Math.sqrt(2),N=function(t,n,e){var r,i,u,o,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=A(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(t-a)/o;return r&&u.reverse(),u};function A(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=M?10:u>=k?5:u>=S?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=M?10:u>=k?5:u>=S?2:1)}function E(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=M?i*=10:u>=k?i*=5:u>=S&&(i*=2),n<t?-i:i}var T=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},C=function(){var t=x,n=y,e=T;function r(r){var i,u,o=r.length,a=new Array(o);for(i=0;i<o;++i)a[i]=t(r[i],i,r);var f=n(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=E(s,l,h),h=w(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<o;++i)s<=(u=a[i])&&u<=l&&v[c(h,u,0,d)].push(r[i]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?m(b.call(t)):m(t),r):e},r},P=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,u=Math.floor(i),o=+e(t[u],u,t);return o+(+e(t[u+1],u+1,t)-o)*(i-u)}},z=function(t,n,e){return t=_.call(t,d).sort(r),Math.ceil((e-n)/(2*(P(t,.75)-P(t,.25))*Math.pow(t.length,-1/3)))},O=function(t,n,e){return Math.ceil((e-n)/(3.5*v(t)*Math.pow(t.length,-1/3)))},R=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&e>r&&(r=e);return r},L=function(t,n){var e,r=t.length,i=r,u=-1,o=0;if(null==n)for(;++u<r;)isNaN(e=d(t[u]))?--i:o+=e;else for(;++u<r;)isNaN(e=d(n(t[u],u,t)))?--i:o+=e;if(i)return o/i},D=function(t,n){var e,i=t.length,u=-1,o=[];if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||o.push(e);else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||o.push(e);return P(o.sort(r),.5)},q=function(t){for(var n,e,r,i=t.length,u=-1,o=0;++u<i;)o+=t[u].length;for(e=new Array(o);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--o]=r[n];return e},j=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&r>e&&(r=e);return r},I=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},U=function(t,n){if(e=t.length){var e,i,u=0,o=0,a=t[o];for(null==n&&(n=r);++u<e;)(n(i=t[u],a)<0||0!==n(a,a))&&(a=i,o=u);return 0===n(a,a)?o:void 0}},F=function(t,n,e){for(var r,i,u=(null==e?t.length:e)-(n=null==n?0:+n);u;)i=Math.random()*u--|0,r=t[u+n],t[u+n]=t[i+n],t[i+n]=r;return t},B=function(t,n){var e,r=t.length,i=-1,u=0;if(null==n)for(;++i<r;)(e=+t[i])&&(u+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(u+=e);return u},Y=function(t){if(!(i=t.length))return[];for(var n=-1,e=j(t,H),r=new Array(e);++n<e;)for(var i,u=-1,o=r[n]=new Array(i);++u<i;)o[u]=t[u][n];return r};function H(t){return t.length}var X=function(){return Y(arguments)},G=Array.prototype.slice,V=function(t){return t},W=1,$=2,Z=3,Q=4,J=1e-6;function K(t){return"translate("+(t+.5)+",0)"}function tt(t){return"translate(0,"+(t+.5)+")"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,u=6,o=6,a=3,c=t===W||t===Q?-1:1,f=t===Q||t===$?"x":"y",s=t===W||t===Z?K:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):V:i,p=Math.max(u,0)+a,v=n.range(),y=+v[0]+.5,g=+v[v.length-1]+.5,b=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),_=l.selection?l.selection():l,m=_.selectAll(".domain").data([null]),x=_.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),k=x.select("line"),S=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),x=x.merge(M),k=k.merge(M.append("line").attr("stroke","currentColor").attr(f+"2",c*u)),S=S.merge(M.append("text").attr("fill","currentColor").attr(f,c*p).attr("dy",t===W?"0em":t===Z?"0.71em":"0.32em")),l!==_&&(m=m.transition(l),x=x.transition(l),k=k.transition(l),S=S.transition(l),w=w.transition(l).attr("opacity",J).attr("transform",function(t){return isFinite(t=b(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",J).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:b(t))})),w.remove(),m.attr("d",t===Q||t==$?o?"M"+c*o+","+y+"H0.5V"+g+"H"+c*o:"M0.5,"+y+"V"+g:o?"M"+y+","+c*o+"V0.5H"+g+"V"+c*o:"M"+y+",0.5H"+g),x.attr("opacity",1).attr("transform",function(t){return s(b(t))}),k.attr(f+"2",c*u),S.attr(f,c*p).text(d),_.filter(nt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===$?"start":t===Q?"end":"middle"),_.each(function(){this.__axis=b})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=G.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:G.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:G.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(u=o=+t,l):u},l.tickSizeInner=function(t){return arguments.length?(u=+t,l):u},l.tickSizeOuter=function(t){return arguments.length?(o=+t,l):o},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et(W,t)}function it(t){return et($,t)}function ut(t){return et(Z,t)}function ot(t){return et(Q,t)}var at={value:function(){}};function ct(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ft(r)}function ft(t){this._=t}function st(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function lt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ft.prototype=ct.prototype={constructor:ft,on:function(t,n){var e,r,i=this._,u=(r=i,(t+"").trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}})),o=-1,a=u.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<a;)if(e=(t=u[o]).type)i[e]=lt(i[e],t.name,n);else if(null==n)for(e in i)i[e]=lt(i[e],t.name,null);return this}for(;++o<a;)if((e=(t=u[o]).type)&&(e=st(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ft(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=0,e=(r=this._[t]).length;u<e;++u)r[u].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,u=r.length;i<u;++i)r[i].value.apply(n,e)}};var ht=ct,dt="http://www.w3.org/1999/xhtml",pt={svg:"http://www.w3.org/2000/svg",xhtml:dt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},vt=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),pt.hasOwnProperty(n)?{space:pt[n],local:t}:t};var yt=function(t){var n=vt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===dt&&n.documentElement.namespaceURI===dt?n.createElement(t):n.createElementNS(e,t)}})(n)};function gt(){}var bt=function(t){return null==t?gt:function(){return this.querySelector(t)}};function _t(){return[]}var mt=function(t){return null==t?_t:function(){return this.querySelectorAll(t)}},xt=function(t){return function(){return this.matches(t)}},wt=function(t){return new Array(t.length)};function Mt(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}Mt.prototype={constructor:Mt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var kt="$";function St(t,n,e,r,i,u){for(var o,a=0,c=n.length,f=u.length;a<f;++a)(o=n[a])?(o.__data__=u[a],r[a]=o):e[a]=new Mt(t,u[a]);for(;a<c;++a)(o=n[a])&&(i[a]=o)}function Nt(t,n,e,r,i,u,o){var a,c,f,s={},l=n.length,h=u.length,d=new Array(l);for(a=0;a<l;++a)(c=n[a])&&(d[a]=f=kt+o.call(c,c.__data__,a,n),f in s?i[a]=c:s[f]=c);for(a=0;a<h;++a)(c=s[f=kt+o.call(t,u[a],a,u)])?(r[a]=c,c.__data__=u[a],s[f]=null):e[a]=new Mt(t,u[a]);for(a=0;a<l;++a)(c=n[a])&&s[d[a]]===c&&(i[a]=c)}function At(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var Et=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function Tt(t,n){return t.style.getPropertyValue(n)||Et(t).getComputedStyle(t,null).getPropertyValue(n)}function Ct(t){return t.trim().split(/^|\s+/)}function Pt(t){return t.classList||new zt(t)}function zt(t){this._node=t,this._names=Ct(t.getAttribute("class")||"")}function Ot(t,n){for(var e=Pt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function Rt(t,n){for(var e=Pt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}zt.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Lt(){this.textContent=""}function Dt(){this.innerHTML=""}function qt(){this.nextSibling&&this.parentNode.appendChild(this)}function jt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function It(){return null}function Ut(){var t=this.parentNode;t&&t.removeChild(this)}function Ft(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function Bt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Yt={},Ht=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Yt={mouseenter:"mouseover",mouseleave:"mouseout"}));function Xt(t,n,e){return t=Gt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Gt(t,n,e){return function(r){var i=Ht;Ht=r;try{t.call(this,this.__data__,n,e)}finally{Ht=i}}}function Vt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Wt(t,n,e){var r=Yt.hasOwnProperty(t.type)?Xt:Gt;return function(i,u,o){var a,c=this.__on,f=r(n,u,o);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=n);this.addEventListener(t.type,f,e),a={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function $t(t,n,e,r){var i=Ht;t.sourceEvent=Ht,Ht=t;try{return n.apply(e,r)}finally{Ht=i}}function Zt(t,n,e){var r=Et(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var Qt=[null];function Jt(t,n){this._groups=t,this._parents=n}function Kt(){return new Jt([[document.documentElement]],Qt)}Jt.prototype=Kt.prototype={constructor:Jt,select:function(t){"function"!=typeof t&&(t=bt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o,a=n[i],c=a.length,f=r[i]=new Array(c),s=0;s<c;++s)(u=a[s])&&(o=t.call(u,u.__data__,s,a))&&("__data__"in u&&(o.__data__=u.__data__),f[s]=o);return new Jt(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var n=this._groups,e=n.length,r=[],i=[],u=0;u<e;++u)for(var o,a=n[u],c=a.length,f=0;f<c;++f)(o=a[f])&&(r.push(t.call(o,o.__data__,f,a)),i.push(o));return new Jt(r,i)},filter:function(t){"function"!=typeof t&&(t=xt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&c.push(u);return new Jt(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each(function(t){p[++s]=t}),p;var e,r=n?Nt:St,i=this._parents,u=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var o=u.length,a=new Array(o),c=new Array(o),f=new Array(o),s=0;s<o;++s){var l=i[s],h=u[s],d=h.length,p=t.call(l,l&&l.__data__,s,i),v=p.length,y=c[s]=new Array(v),g=a[s]=new Array(v);r(l,h,y,g,f[s]=new Array(d),p,n);for(var b,_,m=0,x=0;m<v;++m)if(b=y[m]){for(m>=x&&(x=m+1);!(_=g[x])&&++x<v;);b._next=_||null}}return(a=new Jt(a,i))._enter=c,a._exit=f,a},enter:function(){return new Jt(this._enter||this._groups.map(wt),this._parents)},exit:function(){return new Jt(this._exit||this._groups.map(wt),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,u=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?u.remove():e(u),r&&i?r.merge(i).order():i},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=n[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=n[a];return new Jt(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&4^r.compareDocumentPosition(o)&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=At);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],c=a.length,f=i[u]=new Array(c),s=0;s<c;++s)(o=a[s])&&(f[s]=o);f.sort(n)}return new Jt(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],o=0,a=u.length;o<a;++o)(i=u[o])&&t.call(i,i.__data__,o,u);return this},attr:function(t,n){var e=vt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):Tt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Ct(t+"");if(arguments.length<2){for(var r=Pt(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?Ot:Rt)(this,t)}}:n?function(t){return function(){Ot(this,t)}}:function(t){return function(){Rt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?Lt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Dt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(qt)},lower:function(){return this.each(jt)},append:function(t){var n="function"==typeof t?t:yt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:yt(t),r=null==n?It:"function"==typeof n?n:bt(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Ut)},clone:function(t){return this.select(t?Bt:Ft)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,u=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),o=u.length;if(!(arguments.length<2)){for(a=n?Wt:Vt,null==e&&(e=!1),r=0;r<o;++r)this.each(a(u[r],n,e));return this}var a=this.node().__on;if(a)for(var c,f=0,s=a.length;f<s;++f)for(r=0,c=a[f];r<o;++r)if((i=u[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Zt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Zt(this,t,n)}})(t,n))}};var tn=Kt,nn=function(t){return"string"==typeof t?new Jt([[document.querySelector(t)]],[document.documentElement]):new Jt([[t]],Qt)},en=function(t){return nn(yt(t).call(document.documentElement))},rn=0;function un(){return new on}function on(){this._="@"+(++rn).toString(36)}on.prototype=un.prototype={constructor:on,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var an=function(){for(var t,n=Ht;t=n.sourceEvent;)n=t;return n},cn=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},fn=function(t){var n=an();return n.changedTouches&&(n=n.changedTouches[0]),cn(t,n)},sn=function(t){return"string"==typeof t?new Jt([document.querySelectorAll(t)],[document.documentElement]):new Jt([null==t?[]:t],Qt)},ln=function(t,n,e){arguments.length<3&&(e=n,n=an().changedTouches);for(var r,i=0,u=n?n.length:0;i<u;++i)if((r=n[i]).identifier===e)return cn(t,r);return null},hn=function(t,n){null==n&&(n=an().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=cn(t,n[e]);return i};function dn(){Ht.stopImmediatePropagation()}var pn=function(){Ht.preventDefault(),Ht.stopImmediatePropagation()},vn=function(t){var n=t.document.documentElement,e=nn(t).on("dragstart.drag",pn,!0);"onselectstart"in n?e.on("selectstart.drag",pn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function yn(t,n){var e=t.document.documentElement,r=nn(t).on("dragstart.drag",null);n&&(r.on("click.drag",pn,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var gn=function(t){return function(){return t}};function bn(t,n,e,r,i,u,o,a,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=o,this.dx=a,this.dy=c,this._=f}function _n(){return!Ht.button}function mn(){return this.parentNode}function xn(t){return null==t?{x:Ht.x,y:Ht.y}:t}function wn(){return"ontouchstart"in this}bn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Mn=function(){var t,n,e,r,i=_n,u=mn,o=xn,a=wn,c={},f=ht("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(a).on("touchstart.drag",y).on("touchmove.drag",g).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(){if(!r&&i.apply(this,arguments)){var o=_("mouse",u.apply(this,arguments),fn,this,arguments);o&&(nn(Ht.view).on("mousemove.drag",p,!0).on("mouseup.drag",v,!0),vn(Ht.view),dn(),e=!1,t=Ht.clientX,n=Ht.clientY,o("start"))}}function p(){if(pn(),!e){var r=Ht.clientX-t,i=Ht.clientY-n;e=r*r+i*i>l}c.mouse("drag")}function v(){nn(Ht.view).on("mousemove.drag mouseup.drag",null),yn(Ht.view,e),pn(),c.mouse("end")}function y(){if(i.apply(this,arguments)){var t,n,e=Ht.changedTouches,r=u.apply(this,arguments),o=e.length;for(t=0;t<o;++t)(n=_(e[t].identifier,r,ln,this,arguments))&&(dn(),n("start"))}}function g(){var t,n,e=Ht.changedTouches,r=e.length;for(t=0;t<r;++t)(n=c[e[t].identifier])&&(pn(),n("drag"))}function b(){var t,n,e=Ht.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=c[e[t].identifier])&&(dn(),n("end"))}function _(t,n,e,r,i){var u,a,l,d=e(n,t),p=f.copy();if($t(new bn(h,"beforestart",u,t,s,d[0],d[1],0,0,p),function(){return null!=(Ht.subject=u=o.apply(r,i))&&(a=u.x-d[0]||0,l=u.y-d[1]||0,!0)}))return function o(f){var v,y=d;switch(f){case"start":c[t]=o,v=s++;break;case"end":delete c[t],--s;case"drag":d=e(n,t),v=s}$t(new bn(h,f,u,t,v,d[0]+a,d[1]+l,d[0]-y[0],d[1]-y[1],p),p.apply,p,[f,r,i])}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:gn(!!t),h):i},h.container=function(t){return arguments.length?(u="function"==typeof t?t:gn(t),h):u},h.subject=function(t){return arguments.length?(o="function"==typeof t?t:gn(t),h):o},h.touchable=function(t){return arguments.length?(a="function"==typeof t?t:gn(!!t),h):a},h.on=function(){var t=f.on.apply(f,arguments);return t===f?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},kn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function Sn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Nn(){}var An="\\s*([+-]?\\d+)\\s*",En="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Tn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Cn=/^#([0-9a-f]{3})$/,Pn=/^#([0-9a-f]{6})$/,zn=new RegExp("^rgb\\("+[An,An,An]+"\\)$"),On=new RegExp("^rgb\\("+[Tn,Tn,Tn]+"\\)$"),Rn=new RegExp("^rgba\\("+[An,An,An,En]+"\\)$"),Ln=new RegExp("^rgba\\("+[Tn,Tn,Tn,En]+"\\)$"),Dn=new RegExp("^hsl\\("+[En,Tn,Tn]+"\\)$"),qn=new RegExp("^hsla\\("+[En,Tn,Tn,En]+"\\)$"),jn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function In(t){var n;return t=(t+"").trim().toLowerCase(),(n=Cn.exec(t))?new Hn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Pn.exec(t))?Un(parseInt(n[1],16)):(n=zn.exec(t))?new Hn(n[1],n[2],n[3],1):(n=On.exec(t))?new Hn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Rn.exec(t))?Fn(n[1],n[2],n[3],n[4]):(n=Ln.exec(t))?Fn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Dn.exec(t))?Gn(n[1],n[2]/100,n[3]/100,1):(n=qn.exec(t))?Gn(n[1],n[2]/100,n[3]/100,n[4]):jn.hasOwnProperty(t)?Un(jn[t]):"transparent"===t?new Hn(NaN,NaN,NaN,0):null}function Un(t){return new Hn(t>>16&255,t>>8&255,255&t,1)}function Fn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Hn(t,n,e,r)}function Bn(t){return t instanceof Nn||(t=In(t)),t?new Hn((t=t.rgb()).r,t.g,t.b,t.opacity):new Hn}function Yn(t,n,e,r){return 1===arguments.length?Bn(t):new Hn(t,n,e,null==r?1:r)}function Hn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Xn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Gn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Wn(t,n,e,r)}function Vn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Wn)return new Wn(t.h,t.s,t.l,t.opacity);if(t instanceof Nn||(t=In(t)),!t)return new Wn;if(t instanceof Wn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),o=NaN,a=u-i,c=(u+i)/2;return a?(o=n===u?(e-r)/a+6*(e<r):e===u?(r-n)/a+2:(n-e)/a+4,a/=c<.5?u+i:2-u-i,o*=60):a=c>0&&c<1?0:o,new Wn(o,a,c,t.opacity)}(t):new Wn(t,n,e,null==r?1:r)}function Wn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function $n(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}kn(Nn,In,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),kn(Hn,Yn,Sn(Nn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Hn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Hn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+Xn(this.r)+Xn(this.g)+Xn(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),kn(Wn,Vn,Sn(Nn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Wn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Wn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Hn($n(t>=240?t-240:t+120,i,r),$n(t,i,r),$n(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Zn=Math.PI/180,Qn=180/Math.PI,Jn=.96422,Kn=1,te=.82521,ne=4/29,ee=6/29,re=3*ee*ee,ie=ee*ee*ee;function ue(t){if(t instanceof ce)return new ce(t.l,t.a,t.b,t.opacity);if(t instanceof ye){if(isNaN(t.h))return new ce(t.l,0,0,t.opacity);var n=t.h*Zn;return new ce(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Hn||(t=Bn(t));var e,r,i=he(t.r),u=he(t.g),o=he(t.b),a=fe((.2225045*i+.7168786*u+.0606169*o)/Kn);return i===u&&u===o?e=r=a:(e=fe((.4360747*i+.3850649*u+.1430804*o)/Jn),r=fe((.0139322*i+.0971045*u+.7141733*o)/te)),new ce(116*a-16,500*(e-a),200*(a-r),t.opacity)}function oe(t,n){return new ce(t,0,0,null==n?1:n)}function ae(t,n,e,r){return 1===arguments.length?ue(t):new ce(t,n,e,null==r?1:r)}function ce(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function fe(t){return t>ie?Math.pow(t,1/3):t/re+ne}function se(t){return t>ee?t*t*t:re*(t-ne)}function le(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function he(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function de(t){if(t instanceof ye)return new ye(t.h,t.c,t.l,t.opacity);if(t instanceof ce||(t=ue(t)),0===t.a&&0===t.b)return new ye(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*Qn;return new ye(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function pe(t,n,e,r){return 1===arguments.length?de(t):new ye(e,n,t,null==r?1:r)}function ve(t,n,e,r){return 1===arguments.length?de(t):new ye(t,n,e,null==r?1:r)}function ye(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}kn(ce,ae,Sn(Nn,{brighter:function(t){return new ce(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new ce(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new Hn(le(3.1338561*(n=Jn*se(n))-1.6168667*(t=Kn*se(t))-.4906146*(e=te*se(e))),le(-.9787684*n+1.9161415*t+.033454*e),le(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),kn(ye,ve,Sn(Nn,{brighter:function(t){return new ye(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new ye(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return ue(this).rgb()}}));var ge=-.29227,be=-.90649,_e=1.97294,me=_e*be,xe=1.78277*_e,we=1.78277*ge- -.14861*be;function Me(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof ke)return new ke(t.h,t.s,t.l,t.opacity);t instanceof Hn||(t=Bn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(we*r+me*n-xe*e)/(we+me-xe),u=r-i,o=(_e*(e-i)-ge*u)/be,a=Math.sqrt(o*o+u*u)/(_e*i*(1-i)),c=a?Math.atan2(o,u)*Qn-120:NaN;return new ke(c<0?c+360:c,a,i,t.opacity)}(t):new ke(t,n,e,null==r?1:r)}function ke(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Se(t,n,e,r,i){var u=t*t,o=u*t;return((1-3*t+3*u-o)*n+(4-6*u+3*o)*e+(1+3*t+3*u-3*o)*r+o*i)/6}kn(ke,Me,Sn(Nn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new ke(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new ke(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Zn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Hn(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(ge*r+be*i)),255*(n+e*(_e*r)),this.opacity)}}));var Ne=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],u=t[r+1],o=r>0?t[r-1]:2*i-u,a=r<n-1?t[r+2]:2*u-i;return Se((e-r/n)*n,o,i,u,a)}},Ae=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],u=t[r%n],o=t[(r+1)%n],a=t[(r+2)%n];return Se((e-r/n)*n,i,u,o,a)}},Ee=function(t){return function(){return t}};function Te(t,n){return function(e){return t+e*n}}function Ce(t,n){var e=n-t;return e?Te(t,e>180||e<-180?e-360*Math.round(e/360):e):Ee(isNaN(t)?n:t)}function Pe(t){return 1==(t=+t)?ze:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Ee(isNaN(n)?e:n)}}function ze(t,n){var e=n-t;return e?Te(t,e):Ee(isNaN(t)?n:t)}var Oe=function t(n){var e=Pe(n);function r(t,n){var r=e((t=Yn(t)).r,(n=Yn(n)).r),i=e(t.g,n.g),u=e(t.b,n.b),o=ze(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=u(n),t.opacity=o(n),t+""}}return r.gamma=t,r}(1);function Re(t){return function(n){var e,r,i=n.length,u=new Array(i),o=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Yn(n[e]),u[e]=r.r||0,o[e]=r.g||0,a[e]=r.b||0;return u=t(u),o=t(o),a=t(a),r.opacity=1,function(t){return r.r=u(t),r.g=o(t),r.b=a(t),r+""}}}var Le=Re(Ne),De=Re(Ae),qe=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=We(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=u[e](t);return o}},je=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},Ie=function(t,n){return n-=t=+t,function(e){return t+n*e}},Ue=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=We(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},Fe=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Be=new RegExp(Fe.source,"g");var Ye,He,Xe,Ge,Ve=function(t,n){var e,r,i,u=Fe.lastIndex=Be.lastIndex=0,o=-1,a=[],c=[];for(t+="",n+="";(e=Fe.exec(t))&&(r=Be.exec(n));)(i=r.index)>u&&(i=n.slice(u,i),a[o]?a[o]+=i:a[++o]=i),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,c.push({i:o,x:Ie(e,r)})),u=Be.lastIndex;return u<n.length&&(i=n.slice(u),a[o]?a[o]+=i:a[++o]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},We=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Ee(n):("number"===r?Ie:"string"===r?(e=In(n))?(n=e,Oe):Ve:n instanceof In?Oe:n instanceof Date?je:Array.isArray(n)?qe:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?Ue:Ie)(t,n)},$e=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},Ze=function(t,n){var e=Ce(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},Qe=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},Je=180/Math.PI,Ke={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},tr=function(t,n,e,r,i,u){var o,a,c;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,o=-o),{translateX:i,translateY:u,rotate:Math.atan2(n,t)*Je,skewX:Math.atan(c)*Je,scaleX:o,scaleY:a}};function nr(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(u,o){var a=[],c=[];return u=t(u),o=t(o),function(t,r,i,u,o,a){if(t!==i||r!==u){var c=o.push("translate(",null,n,null,e);a.push({i:c-4,x:Ie(t,i)},{i:c-2,x:Ie(r,u)})}else(i||u)&&o.push("translate("+i+n+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,c),function(t,n,e,u){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),u.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Ie(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(u.rotate,o.rotate,a,c),function(t,n,e,u){t!==n?u.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Ie(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(u.skewX,o.skewX,a,c),function(t,n,e,r,u,o){if(t!==e||n!==r){var a=u.push(i(u)+"scale(",null,",",null,")");o.push({i:a-4,x:Ie(t,e)},{i:a-2,x:Ie(n,r)})}else 1===e&&1===r||u.push(i(u)+"scale("+e+","+r+")")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,c),u=o=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var er=nr(function(t){return"none"===t?Ke:(Ye||(Ye=document.createElement("DIV"),He=document.documentElement,Xe=document.defaultView),Ye.style.transform=t,t=Xe.getComputedStyle(He.appendChild(Ye),null).getPropertyValue("transform"),He.removeChild(Ye),t=t.slice(7,-1).split(","),tr(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),rr=nr(function(t){return null==t?Ke:(Ge||(Ge=document.createElementNS("http://www.w3.org/2000/svg","g")),Ge.setAttribute("transform",t),(t=Ge.transform.baseVal.consolidate())?(t=t.matrix,tr(t.a,t.b,t.c,t.d,t.e,t.f)):Ke)},", ",")",")"),ir=Math.SQRT2;function ur(t){return((t=Math.exp(t))+1/t)/2}var or=function(t,n){var e,r,i=t[0],u=t[1],o=t[2],a=n[0],c=n[1],f=n[2],s=a-i,l=c-u,h=s*s+l*l;if(h<1e-12)r=Math.log(f/o)/ir,e=function(t){return[i+t*s,u+t*l,o*Math.exp(ir*t*r)]};else{var d=Math.sqrt(h),p=(f*f-o*o+4*h)/(2*o*2*d),v=(f*f-o*o-4*h)/(2*f*2*d),y=Math.log(Math.sqrt(p*p+1)-p),g=Math.log(Math.sqrt(v*v+1)-v);r=(g-y)/ir,e=function(t){var n,e=t*r,a=ur(y),c=o/(2*d)*(a*(n=ir*e+y,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(y));return[i+c*s,u+c*l,o*a/ur(ir*e+y)]}}return e.duration=1e3*r,e};function ar(t){return function(n,e){var r=t((n=Vn(n)).h,(e=Vn(e)).h),i=ze(n.s,e.s),u=ze(n.l,e.l),o=ze(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=u(t),n.opacity=o(t),n+""}}}var cr=ar(Ce),fr=ar(ze);function sr(t,n){var e=ze((t=ae(t)).l,(n=ae(n)).l),r=ze(t.a,n.a),i=ze(t.b,n.b),u=ze(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=u(n),t+""}}function lr(t){return function(n,e){var r=t((n=ve(n)).h,(e=ve(e)).h),i=ze(n.c,e.c),u=ze(n.l,e.l),o=ze(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=u(t),n.opacity=o(t),n+""}}}var hr=lr(Ce),dr=lr(ze);function pr(t){return function n(e){function r(n,r){var i=t((n=Me(n)).h,(r=Me(r)).h),u=ze(n.s,r.s),o=ze(n.l,r.l),a=ze(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=u(t),n.l=o(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}var vr=pr(Ce),yr=pr(ze);function gr(t,n){for(var e=0,r=n.length-1,i=n[0],u=new Array(r<0?0:r);e<r;)u[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return u[n](t-n)}}var br,_r,mr=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},xr=0,wr=0,Mr=0,kr=1e3,Sr=0,Nr=0,Ar=0,Er="object"==typeof performance&&performance.now?performance:Date,Tr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Cr(){return Nr||(Tr(Pr),Nr=Er.now()+Ar)}function Pr(){Nr=0}function zr(){this._call=this._time=this._next=null}function Or(t,n,e){var r=new zr;return r.restart(t,n,e),r}function Rr(){Cr(),++xr;for(var t,n=br;n;)(t=Nr-n._time)>=0&&n._call.call(null,t),n=n._next;--xr}function Lr(){Nr=(Sr=Er.now())+Ar,xr=wr=0;try{Rr()}finally{xr=0,function(){var t,n,e=br,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:br=n);_r=t,qr(r)}(),Nr=0}}function Dr(){var t=Er.now(),n=t-Sr;n>kr&&(Ar-=n,Sr=t)}function qr(t){xr||(wr&&(wr=clearTimeout(wr)),t-Nr>24?(t<1/0&&(wr=setTimeout(Lr,t-Er.now()-Ar)),Mr&&(Mr=clearInterval(Mr))):(Mr||(Sr=Er.now(),Mr=setInterval(Dr,kr)),xr=1,Tr(Lr)))}zr.prototype=Or.prototype={constructor:zr,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Cr():+e)+(null==n?0:+n),this._next||_r===this||(_r?_r._next=this:br=this,_r=this),this._call=t,this._time=e,qr()},stop:function(){this._call&&(this._call=null,this._time=1/0,qr())}};var jr=function(t,n,e){var r=new zr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Ir=function(t,n,e){var r=new zr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Cr():+e,r.restart(function u(o){o+=i,r.restart(u,i+=n,e),t(o)},n,e),r)},Ur=ht("start","end","cancel","interrupt"),Fr=[],Br=0,Yr=1,Hr=2,Xr=3,Gr=4,Vr=5,Wr=6,$r=function(t,n,e,r,i,u){var o=t.__transition;if(o){if(e in o)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function u(c){var f,s,l,h;if(e.state!==Yr)return a();for(f in i)if((h=i[f]).name===e.name){if(h.state===Xr)return jr(u);h.state===Gr?(h.state=Wr,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=Wr,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[f])}if(jr(function(){e.state===Xr&&(e.state=Gr,e.timer.restart(o,e.delay,e.time),o(c))}),e.state=Hr,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Hr){for(e.state=Xr,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=Vr,1),u=-1,o=r.length;++u<o;)r[u].call(t,i);e.state===Vr&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Wr,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Or(function(t){e.state=Yr,e.timer.restart(u,e.delay,e.time),e.delay<=t&&u(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Ur,tween:Fr,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:Br})};function Zr(t,n){var e=Jr(t,n);if(e.state>Br)throw new Error("too late; already scheduled");return e}function Qr(t,n){var e=Jr(t,n);if(e.state>Xr)throw new Error("too late; already running");return e}function Jr(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var Kr=function(t,n){var e,r,i,u=t.__transition,o=!0;if(u){for(i in n=null==n?null:n+"",u)(e=u[i]).name===n?(r=e.state>Hr&&e.state<Vr,e.state=Wr,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete u[i]):o=!1;o&&delete t.__transition}};function ti(t,n,e){var r=t._id;return t.each(function(){var t=Qr(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return Jr(t,r).value[n]}}var ni=function(t,n){var e;return("number"==typeof n?Ie:n instanceof In?Oe:(e=In(n))?(n=e,Oe):Ve)(t,n)};var ei=tn.prototype.constructor;function ri(t){return function(){this.style.removeProperty(t)}}var ii=0;function ui(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function oi(t){return tn().transition(t)}function ai(){return++ii}var ci=tn.prototype;function fi(t){return+t}function si(t){return t*t}function li(t){return t*(2-t)}function hi(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function di(t){return t*t*t}function pi(t){return--t*t*t+1}function vi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}ui.prototype=oi.prototype={constructor:ui,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=bt(t));for(var r=this._groups,i=r.length,u=new Array(i),o=0;o<i;++o)for(var a,c,f=r[o],s=f.length,l=u[o]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=t.call(a,a.__data__,h,f))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,$r(l[h],n,e,h,l,Jr(a,e)));return new ui(u,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,i=r.length,u=[],o=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=Jr(c,e),v=0,y=d.length;v<y;++v)(h=d[v])&&$r(h,n,e,v,d,p);u.push(d),o.push(c)}return new ui(u,o,n,e)},filter:function(t){"function"!=typeof t&&(t=xt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&c.push(u);return new ui(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=n[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=n[a];return new ui(o,this._parents,this._name,this._id)},selection:function(){return new ei(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=ai(),r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)if(o=a[f]){var s=Jr(o,n);$r(o,t,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ui(r,this._parents,t,e)},call:ci.call,nodes:ci.nodes,node:ci.node,size:ci.size,empty:ci.empty,each:ci.each,on:function(t,n){var e=this._id;return arguments.length<2?Jr(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,u=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Zr:Qr;return function(){var o=u(this,t),a=o.on;a!==r&&(i=(r=a).copy()).on(n,e),o.on=i}}(e,t,n))},attr:function(t,n){var e=vt(t),r="transform"===e?rr:ni;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttributeNS(t.space,t.local))===(a=c+"")?null:o===r&&a===i?u:(i=a,u=n(r=o,c));this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttribute(t))===(a=c+"")?null:o===r&&a===i?u:(i=a,u=n(r=o,c));this.removeAttribute(t)}})(e,r,ti(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i,u=e+"";return function(){var o=this.getAttributeNS(t.space,t.local);return o===u?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i,u=e+"";return function(){var o=this.getAttribute(t);return o===u?null:o===r?i:i=n(r=o,e)}})(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=vt(t);return this.tween(e,(r.local?function(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n(e))}}(t,i)),e}return i._value=n,i}:function(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n(e))}}(t,i)),e}return i._value=n,i})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?er:ni;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var u=Tt(this,t),o=(this.style.removeProperty(t),Tt(this,t));return u===o?null:u===e&&o===r?i:i=n(e=u,r=o)}}(t,r)).on("end.style."+t,ri(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,u;return function(){var o=Tt(this,t),a=e(this),c=a+"";return null==a&&(this.style.removeProperty(t),c=a=Tt(this,t)),o===c?null:o===r&&c===i?u:(i=c,u=n(r=o,a))}}(t,r,ti(this,"style."+t,n))).each(function(t,n){var e,r,i,u,o="style."+n,a="end."+o;return function(){var c=Qr(this,t),f=c.on,s=null==c.value[o]?u||(u=ri(n)):void 0;f===e&&i===s||(r=(e=f).copy()).on(a,i=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,u=e+"";return function(){var o=Tt(this,t);return o===u?null:o===r?i:i=n(r=o,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){var r,i;function u(){var u=n.apply(this,arguments);return u!==i&&(r=(i=u)&&function(t,n,e){return function(r){this.style.setProperty(t,n(r),e)}}(t,u,e)),r}return u._value=n,u}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(ti(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=Jr(this.node(),e).tween,u=0,o=i.length;u<o;++u)if((r=i[u]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=Qr(this,t),u=i.tween;if(u!==e)for(var o=0,a=(r=e=u).length;o<a;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var u=Qr(this,t),o=u.tween;if(o!==r){i=(r=o).slice();for(var a={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=a;break}c===f&&i.push(a)}u.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Zr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Zr(this,t).delay=n}})(n,t)):Jr(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Qr(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Qr(this,t).duration=n}})(n,t)):Jr(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){Qr(this,t).ease=n}}(n,t)):Jr(this.node(),n).ease},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise(function(u,o){var a={value:o},c={value:function(){0==--i&&u()}};e.each(function(){var e=Qr(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(a),n._.interrupt.push(a),n._.end.push(c)),e.on=n})})}};var yi=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),gi=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),bi=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),_i=Math.PI,mi=_i/2;function xi(t){return 1-Math.cos(t*mi)}function wi(t){return Math.sin(t*mi)}function Mi(t){return(1-Math.cos(_i*t))/2}function ki(t){return Math.pow(2,10*t-10)}function Si(t){return 1-Math.pow(2,-10*t)}function Ni(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function Ai(t){return 1-Math.sqrt(1-t*t)}function Ei(t){return Math.sqrt(1- --t*t)}function Ti(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Ci=4/11,Pi=6/11,zi=8/11,Oi=.75,Ri=9/11,Li=10/11,Di=.9375,qi=21/22,ji=63/64,Ii=1/Ci/Ci;function Ui(t){return 1-Fi(1-t)}function Fi(t){return(t=+t)<Ci?Ii*t*t:t<zi?Ii*(t-=Pi)*t+Oi:t<Li?Ii*(t-=Ri)*t+Di:Ii*(t-=qi)*t+ji}function Bi(t){return((t*=2)<=1?1-Fi(1-t):Fi(t-1)+1)/2}var Yi=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Hi=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Xi=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),Gi=2*Math.PI,Vi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Gi);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*Gi)},i.period=function(e){return t(n,e)},i}(1,.3),Wi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Gi);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*Gi)},i.period=function(e){return t(n,e)},i}(1,.3),$i=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Gi);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*Gi)},i.period=function(e){return t(n,e)},i}(1,.3),Zi={time:null,delay:0,duration:250,ease:vi};function Qi(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Zi.time=Cr(),Zi;return e}tn.prototype.interrupt=function(t){return this.each(function(){Kr(this,t)})},tn.prototype.transition=function(t){var n,e;t instanceof ui?(n=t._id,t=t._name):(n=ai(),(e=Zi).time=Cr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)(o=a[f])&&$r(o,t,n,f,a,e||Qi(o,n));return new ui(r,this._parents,t,n)};var Ji=[null],Ki=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>Yr&&e.name===n)return new ui([[t]],Ji,n,+r);return null},tu=function(t){return function(){return t}},nu=function(t,n,e){this.target=t,this.type=n,this.selection=e};function eu(){Ht.stopImmediatePropagation()}var ru=function(){Ht.preventDefault(),Ht.stopImmediatePropagation()},iu={name:"drag"},uu={name:"space"},ou={name:"handle"},au={name:"center"},cu={name:"x",handles:["e","w"].map(yu),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},fu={name:"y",handles:["n","s"].map(yu),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},su={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(yu),input:function(t){return t},output:function(t){return t}},lu={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},hu={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},du={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},pu={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},vu={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function yu(t){return{type:t}}function gu(){return!Ht.button}function bu(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function _u(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function mu(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function xu(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function wu(){return Su(cu)}function Mu(){return Su(fu)}var ku=function(){return Su(su)};function Su(t){var n,e=bu,r=gu,i=ht(o,"start","brush","end"),u=6;function o(n){var e=n.property("__brush",l).selectAll(".overlay").data([yu("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",lu.overlay).merge(e).each(function(){var t=_u(this).extent;nn(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([yu("selection")]).enter().append("rect").attr("class","selection").attr("cursor",lu.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return lu[t.type]}),n.each(a).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",s)}function a(){var t=nn(this),n=_u(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-u/2:n[0][0]-u/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-u/2:n[0][1]-u/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+u:u}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+u:u})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(t,n){return t.__brush.emitter||new f(t,n)}function f(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(Ht.touches){if(Ht.changedTouches.length<Ht.touches.length)return ru()}else if(n)return;if(r.apply(this,arguments)){var e,i,u,o,f,s,l,h,d,p,v,y,g,b=this,_=Ht.target.__data__.type,m="selection"===(Ht.metaKey?_="overlay":_)?iu:Ht.altKey?au:ou,x=t===fu?null:pu[_],w=t===cu?null:vu[_],M=_u(b),k=M.extent,S=M.selection,N=k[0][0],A=k[0][1],E=k[1][0],T=k[1][1],C=x&&w&&Ht.shiftKey,P=fn(b),z=P,O=c(b,arguments).beforestart();"overlay"===_?M.selection=S=[[e=t===fu?N:P[0],u=t===cu?A:P[1]],[f=t===fu?E:e,l=t===cu?T:u]]:(e=S[0][0],u=S[0][1],f=S[1][0],l=S[1][1]),i=e,o=u,s=f,h=l;var R=nn(b).attr("pointer-events","none"),L=R.selectAll(".overlay").attr("cursor",lu[_]);if(Ht.touches)R.on("touchmove.brush",q,!0).on("touchend.brush touchcancel.brush",I,!0);else{var D=nn(Ht.view).on("keydown.brush",function(){switch(Ht.keyCode){case 16:C=x&&w;break;case 18:m===ou&&(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=au,j());break;case 32:m!==ou&&m!==au||(x<0?f=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(u=o-p),m=uu,L.attr("cursor",lu.selection),j());break;default:return}ru()},!0).on("keyup.brush",function(){switch(Ht.keyCode){case 16:C&&(y=g=C=!1,j());break;case 18:m===au&&(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=ou,j());break;case 32:m===uu&&(Ht.altKey?(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=au):(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=ou),L.attr("cursor",lu[_]),j());break;default:return}ru()},!0).on("mousemove.brush",q,!0).on("mouseup.brush",I,!0);vn(Ht.view)}eu(),Kr(b),a.call(b),O.start()}function q(){var t=fn(b);!C||y||g||(Math.abs(t[0]-z[0])>Math.abs(t[1]-z[1])?g=!0:y=!0),z=t,v=!0,ru(),j()}function j(){var t;switch(d=z[0]-P[0],p=z[1]-P[1],m){case uu:case iu:x&&(d=Math.max(N-e,Math.min(E-f,d)),i=e+d,s=f+d),w&&(p=Math.max(A-u,Math.min(T-l,p)),o=u+p,h=l+p);break;case ou:x<0?(d=Math.max(N-e,Math.min(E-e,d)),i=e+d,s=f):x>0&&(d=Math.max(N-f,Math.min(E-f,d)),i=e,s=f+d),w<0?(p=Math.max(A-u,Math.min(T-u,p)),o=u+p,h=l):w>0&&(p=Math.max(A-l,Math.min(T-l,p)),o=u,h=l+p);break;case au:x&&(i=Math.max(N,Math.min(E,e-d*x)),s=Math.max(N,Math.min(E,f+d*x))),w&&(o=Math.max(A,Math.min(T,u-p*w)),h=Math.max(A,Math.min(T,l+p*w)))}s<i&&(x*=-1,t=e,e=f,f=t,t=i,i=s,s=t,_ in hu&&L.attr("cursor",lu[_=hu[_]])),h<o&&(w*=-1,t=u,u=l,l=t,t=o,o=h,h=t,_ in du&&L.attr("cursor",lu[_=du[_]])),M.selection&&(S=M.selection),y&&(i=S[0][0],s=S[1][0]),g&&(o=S[0][1],h=S[1][1]),S[0][0]===i&&S[0][1]===o&&S[1][0]===s&&S[1][1]===h||(M.selection=[[i,o],[s,h]],a.call(b),O.brush())}function I(){if(eu(),Ht.touches){if(Ht.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),R.on("touchmove.brush touchend.brush touchcancel.brush",null)}else yn(Ht.view,v),D.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);R.attr("pointer-events","all"),L.attr("cursor",lu.overlay),M.selection&&(S=M.selection),mu(S)&&(M.selection=null,a.call(b)),O.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return o.move=function(n,e){n.selection?n.on("start.brush",function(){c(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){c(this,arguments).end()}).tween("brush",function(){var n=this,r=n.__brush,i=c(n,arguments),u=r.selection,o=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),f=We(u,o);function s(t){r.selection=1===t&&mu(o)?null:f(t),a.call(n),i.brush()}return u&&o?s:s(1)}):n.each(function(){var n=arguments,r=this.__brush,i=t.input("function"==typeof e?e.apply(this,n):e,r.extent),u=c(this,n).beforestart();Kr(this),r.selection=null==i||mu(i)?null:i,a.call(this),u.start().brush().end()})},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(n){$t(new nu(o,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},o.extent=function(t){return arguments.length?(e="function"==typeof t?t:tu([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),o):e},o.filter=function(t){return arguments.length?(r="function"==typeof t?t:tu(!!t),o):r},o.handleSize=function(t){return arguments.length?(u=+t,o):u},o.on=function(){var t=i.on.apply(i,arguments);return t===i?o:t},o}var Nu=Math.cos,Au=Math.sin,Eu=Math.PI,Tu=Eu/2,Cu=2*Eu,Pu=Math.max;var zu=function(){var t=0,n=null,e=null,r=null;function i(i){var u,o,a,c,f,s,l=i.length,h=[],d=w(l),p=[],v=[],y=v.groups=new Array(l),g=new Array(l*l);for(u=0,f=-1;++f<l;){for(o=0,s=-1;++s<l;)o+=i[f][s];h.push(o),p.push(w(l)),u+=o}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),c=(u=Pu(0,Cu-t*l)/u)?t:Cu/l,o=0,f=-1;++f<l;){for(a=o,s=-1;++s<l;){var b=d[f],_=p[b][s],m=i[b][_],x=o,M=o+=m*u;g[_*l+b]={index:b,subindex:_,startAngle:x,endAngle:M,value:m}}y[b]={index:b,startAngle:a,endAngle:o,value:h[b]},o+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var k=g[s*l+f],S=g[f*l+s];(k.value||S.value)&&v.push(k.value<S.value?{source:S,target:k}:{source:k,target:S})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=Pu(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(n=t,r=function(t,e){return n(t.source.value+t.target.value,e.source.value+e.target.value)})._=t,i):r&&r._;var n},i},Ou=Array.prototype.slice,Ru=function(t){return function(){return t}},Lu=Math.PI,Du=2*Lu,qu=Du-1e-6;function ju(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Iu(){return new ju}ju.prototype=Iu.prototype={constructor:ju,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,u){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+u)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var u=this._x1,o=this._y1,a=e-t,c=r-n,f=u-t,s=o-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-c*f)>1e-6&&i){var h=e-u,d=r-o,p=a*a+c*c,v=h*h+d*d,y=Math.sqrt(p),g=Math.sqrt(l),b=i*Math.tan((Lu-Math.acos((p+l-v)/(2*y*g)))/2),_=b/g,m=b/y;Math.abs(_-1)>1e-6&&(this._+="L"+(t+_*f)+","+(n+_*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*a)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,u){t=+t,n=+n;var o=(e=+e)*Math.cos(r),a=e*Math.sin(r),c=t+o,f=n+a,s=1^u,l=u?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%Du+Du),l>qu?this._+="A"+e+","+e+",0,1,"+s+","+(t-o)+","+(n-a)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=Lu)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var Uu=Iu;function Fu(t){return t.source}function Bu(t){return t.target}function Yu(t){return t.radius}function Hu(t){return t.startAngle}function Xu(t){return t.endAngle}var Gu=function(){var t=Fu,n=Bu,e=Yu,r=Hu,i=Xu,u=null;function o(){var o,a=Ou.call(arguments),c=t.apply(this,a),f=n.apply(this,a),s=+e.apply(this,(a[0]=c,a)),l=r.apply(this,a)-Tu,h=i.apply(this,a)-Tu,d=s*Nu(l),p=s*Au(l),v=+e.apply(this,(a[0]=f,a)),y=r.apply(this,a)-Tu,g=i.apply(this,a)-Tu;if(u||(u=o=Uu()),u.moveTo(d,p),u.arc(0,0,s,l,h),l===y&&h===g||(u.quadraticCurveTo(0,0,v*Nu(y),v*Au(y)),u.arc(0,0,v,y,g)),u.quadraticCurveTo(0,0,d,p),u.closePath(),o)return u=null,o+""||null}return o.radius=function(t){return arguments.length?(e="function"==typeof t?t:Ru(+t),o):e},o.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Ru(+t),o):r},o.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Ru(+t),o):i},o.source=function(n){return arguments.length?(t=n,o):t},o.target=function(t){return arguments.length?(n=t,o):n},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o};function Vu(){}function Wu(t,n){var e=new Vu;if(t instanceof Vu)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,u=t.length;if(null==n)for(;++i<u;)e.set(i,t[i]);else for(;++i<u;)e.set(n(r=t[i],i,t),r)}else if(t)for(var o in t)e.set(o,t[o]);return e}Vu.prototype=Wu.prototype={constructor:Vu,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var $u=Wu,Zu=function(){var t,n,e,r=[],i=[];function u(e,i,o,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=$u(),v=o();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each(function(t,n){a(v,n,u(t,i,o,a))}),v}return e={object:function(t){return u(t,0,Qu,Ju)},map:function(t){return u(t,0,Ku,to)},entries:function(t){return function t(e,u){if(++u>r.length)return e;var o,a=i[u-1];return null!=n&&u>=r.length?o=e.entries():(o=[],e.each(function(n,e){o.push({key:e,values:t(n,u)})})),null!=a?o.sort(function(t,n){return a(t.key,n.key)}):o}(u(t,0,Ku,to),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function Qu(){return{}}function Ju(t,n,e){t[n]=e}function Ku(){return $u()}function to(t,n,e){t.set(n,e)}function no(){}var eo=$u.prototype;function ro(t,n){var e=new no;if(t instanceof no)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}no.prototype=ro.prototype={constructor:no,has:eo.has,add:function(t){return this["$"+(t+="")]=t,this},remove:eo.remove,clear:eo.clear,values:eo.keys,size:eo.size,empty:eo.empty,each:eo.each};var io=ro,uo=function(t){var n=[];for(var e in t)n.push(e);return n},oo=function(t){var n=[];for(var e in t)n.push(t[e]);return n},ao=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},co=Array.prototype.slice,fo=function(t,n){return t-n},so=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},lo=function(t){return function(){return t}},ho=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=po(t,n[r]))return e;return 0};function po(t,n){for(var e=n[0],r=n[1],i=-1,u=0,o=t.length,a=o-1;u<o;a=u++){var c=t[u],f=c[0],s=c[1],l=t[a],h=l[0],d=l[1];if(vo(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function vo(t,n,e){var r,i,u,o;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],u=e[r],o=n[r],i<=u&&u<=o||o<=u&&u<=i)}var yo=function(){},go=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],bo=function(){var t=1,n=1,e=T,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(fo);else{var r=y(t),i=r[0],o=r[1];n=E(i,o,n),n=w(Math.floor(i/n)*n,Math.floor(o/n)*n,n)}return n.map(function(n){return u(t,n)})}function u(e,i){var u=[],a=[];return function(e,r,i){var u,a,c,f,s,l,h=new Array,d=new Array;u=a=-1,f=e[0]>=r,go[f<<1].forEach(p);for(;++u<t-1;)c=f,f=e[u+1]>=r,go[c|f<<1].forEach(p);go[f<<0].forEach(p);for(;++a<n-1;){for(u=-1,f=e[a*t+t]>=r,s=e[a*t]>=r,go[f<<1|s<<2].forEach(p);++u<t-1;)c=f,f=e[a*t+t+u+1]>=r,l=s,s=e[a*t+u+1]>=r,go[c|f<<1|s<<2|l<<3].forEach(p);go[f|s<<3].forEach(p)}u=-1,s=e[a*t]>=r,go[s<<2].forEach(p);for(;++u<t-1;)l=s,s=e[a*t+u+1]>=r,go[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+u,t[0][1]+a],c=[t[1][0]+u,t[1][1]+a],f=o(r),s=o(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}go[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),so(t)>0?u.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=u.length;e<r;++e)if(-1!==ho((n=u[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:u}}function o(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var u,o=e[0],a=e[1],c=0|o,f=0|a,s=r[f*t+c];o>0&&o<t&&c===o&&(u=r[f*t+c-1],e[0]=o+(i-u)/(s-u)-.5),a>0&&a<n&&f===a&&(u=r[(f-1)*t+c],e[1]=a+(i-u)/(s-u)-.5)})}return i.contour=u,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),u=Math.ceil(e[1]);if(!(r>0&&u>0))throw new Error("invalid size");return t=r,n=u,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?lo(co.call(t)):lo(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:yo,i):r===a},i};function _o(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<i;++o)for(var a=0,c=0;a<r+e;++a)a<r&&(c+=t.data[a+o*r]),a>=e&&(a>=u&&(c-=t.data[a-u+o*r]),n.data[a-e+o*r]=c/Math.min(a+1,r-1+u-a,u))}function mo(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<r;++o)for(var a=0,c=0;a<i+e;++a)a<i&&(c+=t.data[o+a*r]),a>=e&&(a>=u&&(c-=t.data[o+(a-u)*r]),n.data[o+(a-e)*r]=c/Math.min(a+1,i-1+u-a,u))}function xo(t){return t[0]}function wo(t){return t[1]}function Mo(){return 1}var ko=function(){var t=xo,n=wo,e=Mo,r=960,i=500,u=20,o=2,a=3*u,c=r+2*a>>o,f=i+2*a>>o,s=lo(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach(function(r,u,s){var l=+t(r,u,s)+a>>o,h=+n(r,u,s)+a>>o,d=+e(r,u,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)}),_o({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),mo({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o),_o({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),mo({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o),_o({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),mo({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o);var d=s(i);if(!Array.isArray(d)){var p=R(i);d=E(0,p,d),(d=w(0,Math.floor(p/d)*d,d)).shift()}return bo().thresholds(d).size([c,f])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*o),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,o)-a,t[1]=t[1]*Math.pow(2,o)-a}function y(){return c=r+2*(a=3*u)>>o,f=i+2*a>>o,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:lo(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:lo(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:lo(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,y()},l.cellSize=function(t){if(!arguments.length)return 1<<o;if(!((t=+t)>=1))throw new Error("invalid cell size");return o=Math.floor(Math.log(t)/Math.LN2),y()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?lo(co.call(t)):lo(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(u*(u+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return u=Math.round((Math.sqrt(4*t*t+1)-1)/2),y()},l},So={},No={},Ao=34,Eo=10,To=13;function Co(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var Po=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],u=t.length,o=0,a=0,c=u<=0,f=!1;function s(){if(c)return No;if(f)return f=!1,So;var n,r,i=o;if(t.charCodeAt(i)===Ao){for(;o++<u&&t.charCodeAt(o)!==Ao||t.charCodeAt(++o)===Ao;);return(n=o)>=u?c=!0:(r=t.charCodeAt(o++))===Eo?f=!0:r===To&&(f=!0,t.charCodeAt(o)===Eo&&++o),t.slice(i+1,n-1).replace(/""/g,'"')}for(;o<u;){if((r=t.charCodeAt(n=o++))===Eo)f=!0;else if(r===To)f=!0,t.charCodeAt(o)===Eo&&++o;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,u)}for(t.charCodeAt(u-1)===Eo&&--u,t.charCodeAt(u-1)===To&&--u;(r=s())!==No;){for(var l=[];r!==So&&r!==No;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n){return n.map(u).join(t)}function u(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,u=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=Co(t);return function(r,i){return n(e(r),i,t)}}(t,n):Co(t)});return u.columns=i||[],u},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(u).join(t)].concat(n.map(function(n){return e.map(function(t){return u(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}},zo=Po(","),Oo=zo.parse,Ro=zo.parseRows,Lo=zo.format,Do=zo.formatRows,qo=Po("\t"),jo=qo.parse,Io=qo.parseRows,Uo=qo.format,Fo=qo.formatRows;function Bo(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var Yo=function(t,n){return fetch(t,n).then(Bo)};function Ho(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var Xo=function(t,n){return fetch(t,n).then(Ho)};function Go(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var Vo=function(t,n){return fetch(t,n).then(Go)};function Wo(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),Vo(n,e).then(function(n){return t(n,r)})}}function $o(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Po(t);return Vo(n,e).then(function(t){return i.parse(t,r)})}var Zo=Wo(Oo),Qo=Wo(jo),Jo=function(t,n){return new Promise(function(e,r){var i=new Image;for(var u in n)i[u]=n[u];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function Ko(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var ta=function(t,n){return fetch(t,n).then(Ko)};function na(t){return function(n,e){return Vo(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var ea=na("application/xml"),ra=na("text/html"),ia=na("image/svg+xml"),ua=function(t,n){var e;function r(){var r,i,u=e.length,o=0,a=0;for(r=0;r<u;++r)o+=(i=e[r]).x,a+=i.y;for(o=o/u-t,a=a/u-n,r=0;r<u;++r)(i=e[r]).x-=o,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},oa=function(t){return function(){return t}},aa=function(){return 1e-6*(Math.random()-.5)};function ca(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,u,o,a,c,f,s,l,h,d=t._root,p={data:r},v=t._x0,y=t._y0,g=t._x1,b=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(u=(v+g)/2))?v=u:g=u,(s=e>=(o=(y+b)/2))?y=o:b=o,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(a=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===a&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(u=(v+g)/2))?v=u:g=u,(s=e>=(o=(y+b)/2))?y=o:b=o}while((l=s<<1|f)==(h=(c>=o)<<1|a>=u));return i[h]=d,i[l]=p,t}var fa=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function sa(t){return t[0]}function la(t){return t[1]}function ha(t,n,e){var r=new da(null==n?sa:n,null==e?la:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function da(t,n,e,r,i,u){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=u,this._root=void 0}function pa(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var va=ha.prototype=da.prototype;function ya(t){return t.x+t.vx}function ga(t){return t.y+t.vy}va.copy=function(){var t,n,e=new da(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=pa(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=pa(n));return e},va.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return ca(this.cover(n,e),n,e,t)},va.addAll=function(t){var n,e,r,i,u=t.length,o=new Array(u),a=new Array(u),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<u;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(o[e]=r,a[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));for(s<c&&(c=this._x0,s=this._x1),l<f&&(f=this._y0,l=this._y1),this.cover(c,f).cover(s,l),e=0;e<u;++e)ca(this,o[e],a[e],t[e]);return this},va.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,u=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,u=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>u))return this;var o,a,c=i-e,f=this._root;switch(a=(n<(r+u)/2)<<1|t<(e+i)/2){case 0:do{(o=new Array(4))[a]=f,f=o}while(u=r+(c*=2),t>(i=e+c)||n>u);break;case 1:do{(o=new Array(4))[a]=f,f=o}while(u=r+(c*=2),(e=i-c)>t||n>u);break;case 2:do{(o=new Array(4))[a]=f,f=o}while(r=u-(c*=2),t>(i=e+c)||r>n);break;case 3:do{(o=new Array(4))[a]=f,f=o}while(r=u-(c*=2),(e=i-c)>t||r>n)}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=u,this},va.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},va.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},va.find=function(t,n,e){var r,i,u,o,a,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new fa(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(u=c.y0)>d||(o=c.x1)<s||(a=c.y1)<l))if(v.length){var y=(i+o)/2,g=(u+a)/2;p.push(new fa(v[3],y,g,o,a),new fa(v[2],i,g,y,a),new fa(v[1],y,u,o,g),new fa(v[0],i,u,y,g)),(f=(n>=g)<<1|t>=y)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var b=t-+this._x.call(null,v.data),_=n-+this._y.call(null,v.data),m=b*b+_*_;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},va.remove=function(t){if(isNaN(u=+this._x.call(null,t))||isNaN(o=+this._y.call(null,t)))return this;var n,e,r,i,u,o,a,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,y=this._x1,g=this._y1;if(!d)return this;if(d.length)for(;;){if((f=u>=(a=(p+y)/2))?p=a:y=a,(s=o>=(c=(v+g)/2))?v=c:g=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},va.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},va.root=function(){return this._root},va.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},va.visit=function(t){var n,e,r,i,u,o,a=[],c=this._root;for(c&&a.push(new fa(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,u=n.x1,o=n.y1)&&c.length){var f=(r+u)/2,s=(i+o)/2;(e=c[3])&&a.push(new fa(e,f,s,u,o)),(e=c[2])&&a.push(new fa(e,r,s,f,o)),(e=c[1])&&a.push(new fa(e,f,i,u,s)),(e=c[0])&&a.push(new fa(e,r,i,f,s))}return this},va.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new fa(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var u,o=n.x0,a=n.y0,c=n.x1,f=n.y1,s=(o+c)/2,l=(a+f)/2;(u=i[0])&&e.push(new fa(u,o,a,s,l)),(u=i[1])&&e.push(new fa(u,s,a,c,l)),(u=i[2])&&e.push(new fa(u,o,l,s,f)),(u=i[3])&&e.push(new fa(u,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},va.x=function(t){return arguments.length?(this._x=t,this):this._x},va.y=function(t){return arguments.length?(this._y=t,this):this._y};var ba=function(t){var n,e,r=1,i=1;function u(){for(var t,u,a,c,f,s,l,h=n.length,d=0;d<i;++d)for(u=ha(n,ya,ga).visitAfter(o),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,c=a.x+a.vx,f=a.y+a.vy,u.visit(p);function p(t,n,e,i,u){var o=t.data,h=t.r,d=s+h;if(!o)return n>c+d||i<c-d||e>f+d||u<f-d;if(o.index>a.index){var p=c-o.x-o.vx,v=f-o.y-o.vy,y=p*p+v*v;y<d*d&&(0===p&&(y+=(p=aa())*p),0===v&&(y+=(v=aa())*v),y=(d-(y=Math.sqrt(y)))/y*r,a.vx+=(p*=y)*(d=(h*=h)/(l+h)),a.vy+=(v*=y)*d,o.vx-=p*(d=1-d),o.vy-=v*d)}}}function o(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,u=n.length;for(e=new Array(u),r=0;r<u;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=oa(null==t?1:+t)),u.initialize=function(t){n=t,a()},u.iterations=function(t){return arguments.length?(i=+t,u):i},u.strength=function(t){return arguments.length?(r=+t,u):r},u.radius=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),a(),u):t},u};function _a(t){return t.index}function ma(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var xa=function(t){var n,e,r,i,u,o=_a,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=oa(30),f=1;function s(r){for(var i=0,o=t.length;i<f;++i)for(var a,c,s,l,h,d,p,v=0;v<o;++v)c=(a=t[v]).source,l=(s=a.target).x+s.vx-c.x-c.vx||aa(),h=s.y+s.vy-c.y-c.vy||aa(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=u[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var a,c,f=r.length,s=t.length,l=$u(r,o);for(a=0,i=new Array(f);a<s;++a)(c=t[a]).index=a,"object"!=typeof c.source&&(c.source=ma(l,c.source)),"object"!=typeof c.target&&(c.target=ma(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,u=new Array(s);a<s;++a)c=t[a],u[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(o=t,s):o},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(a="function"==typeof t?t:oa(+t),h(),s):a},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:oa(+t),d(),s):c},s};function wa(t){return t.x}function Ma(t){return t.y}var ka=10,Sa=Math.PI*(3-Math.sqrt(5)),Na=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),u=0,o=.6,a=$u(),c=Or(s),f=ht("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(r){var c,f,s=t.length;void 0===r&&(r=1);for(var l=0;l<r;++l)for(e+=(u-e)*i,a.each(function(t){t(e)}),c=0;c<s;++c)null==(f=t[c]).fx?f.x+=f.vx*=o:(f.x=f.fx,f.vx=0),null==f.fy?f.y+=f.vy*=o:(f.y=f.fy,f.vy=0);return n}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.fx)||(n.x=n.fx),isNaN(n.fy)||(n.y=n.fy),isNaN(n.x)||isNaN(n.y)){var i=ka*Math.sqrt(e),u=e*Sa;n.x=i*Math.cos(u),n.y=i*Math.sin(u)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(u=+t,n):u},velocityDecay:function(t){return arguments.length?(o=1-t,n):1-o},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,u,o,a,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(o=(i=n-(a=t[f]).x)*i+(u=e-a.y)*u)<r&&(c=a,r=o);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},Aa=function(){var t,n,e,r,i=oa(-30),u=1,o=1/0,a=.81;function c(r){var i,u=t.length,o=ha(t,wa,Ma).visitAfter(s);for(e=r,i=0;i<u;++i)n=t[i],o.visit(l)}function f(){if(t){var n,e,u=t.length;for(r=new Array(u),n=0;n<u;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,u,o,a=0,c=0;if(t.length){for(i=u=o=0;o<4;++o)(n=t[o])&&(e=Math.abs(n.value))&&(a+=n.value,c+=e,i+=e*n.x,u+=e*n.y);t.x=i/c,t.y=u/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/a<d)return d<o&&(0===s&&(d+=(s=aa())*s),0===l&&(d+=(l=aa())*l),d<u&&(d=Math.sqrt(u*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=o)){(t.data!==n||t.next)&&(0===s&&(d+=(s=aa())*s),0===l&&(d+=(l=aa())*l),d<u&&(d=Math.sqrt(u*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:oa(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c.distanceMax=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.theta=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c},Ea=function(t,n,e){var r,i,u,o=oa(.1);function a(t){for(var o=0,a=r.length;o<a;++o){var c=r[o],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(u[o]-l)*i[o]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),u=new Array(e),n=0;n<e;++n)u[n]=+t(r[n],n,r),i[n]=isNaN(u[n])?0:+o(r[n],n,r)}}return"function"!=typeof t&&(t=oa(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,c()},a.strength=function(t){return arguments.length?(o="function"==typeof t?t:oa(+t),c(),a):o},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),c(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},Ta=function(t){var n,e,r,i=oa(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vx+=(r[u]-i.x)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return"function"!=typeof t&&(t=oa(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i="function"==typeof t?t:oa(+t),o(),u):i},u.x=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),o(),u):t},u},Ca=function(t){var n,e,r,i=oa(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vy+=(r[u]-i.y)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return"function"!=typeof t&&(t=oa(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i="function"==typeof t?t:oa(+t),o(),u):i},u.y=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),o(),u):t},u},Pa=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},za=function(t){return(t=Pa(Math.abs(t)))?t[1]:NaN},Oa=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ra(t){return new La(t)}function La(t){if(!(n=Oa.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}Ra.prototype=La.prototype,La.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Da,qa,ja,Ia,Ua=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Fa=function(t,n){var e=Pa(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Ba={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Fa(100*t,n)},r:Fa,s:function(t,n){var e=Pa(t,n);if(!e)return t+"";var r=e[0],i=e[1],u=i-(Da=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join("0"):u>0?r.slice(0,u)+"."+r.slice(u):"0."+new Array(1-u).join("0")+Pa(t,Math.max(0,n+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Ya=function(t){return t},Ha=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Xa=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,u=[],o=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),u.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[o=(o+1)%n.length];return u.reverse().join(e)}):Ya,i=t.currency,u=t.decimal,o=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Ya,a=t.percent||"%";function c(t){var n=(t=Ra(t)).fill,e=t.align,c=t.sign,f=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.trim,v=t.type;"n"===v?(h=!0,v="g"):Ba[v]||(null==d&&(d=12),p=!0,v="g"),(s||"0"===n&&"="===e)&&(s=!0,n="0",e="=");var y="$"===f?i[0]:"#"===f&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",g="$"===f?i[1]:/[%p]/.test(v)?a:"",b=Ba[v],_=/[defgprs%]/.test(v);function m(t){var i,a,f,m=y,x=g;if("c"===v)x=b(t)+x,t="";else{var w=(t=+t)<0;if(t=b(Math.abs(t),d),p&&(t=Ua(t)),w&&0==+t&&(w=!1),m=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+m,x=("s"===v?Ha[8+Da/3]:"")+x+(w&&"("===c?")":""),_)for(i=-1,a=t.length;++i<a;)if(48>(f=t.charCodeAt(i))||f>57){x=(46===f?u+t.slice(i+1):t.slice(i))+x,t=t.slice(0,i);break}}h&&!s&&(t=r(t,1/0));var M=m.length+t.length+x.length,k=M<l?new Array(l-M+1).join(n):"";switch(h&&s&&(t=r(k+t,k.length?l-x.length:1/0),k=""),e){case"<":t=m+t+x+k;break;case"=":t=m+k+t+x;break;case"^":t=k.slice(0,M=k.length>>1)+m+t+x+k.slice(M);break;default:t=k+m+t+x}return o(t)}return d=null==d?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:c,formatPrefix:function(t,n){var e=c(((t=Ra(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(za(n)/3))),i=Math.pow(10,-r),u=Ha[8+r/3];return function(t){return e(i*t)+u}}}};function Ga(t){return qa=Xa(t),ja=qa.format,Ia=qa.formatPrefix,qa}Ga({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var Va=function(t){return Math.max(0,-za(Math.abs(t)))},Wa=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(za(n)/3)))-za(Math.abs(t)))},$a=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,za(n)-za(t))+1},Za=function(){return new Qa};function Qa(){this.reset()}Qa.prototype={constructor:Qa,reset:function(){this.s=this.t=0},add:function(t){Ka(Ja,t,this.t),Ka(this,Ja.s,this.s),this.s?this.t+=Ja.t:this.s=Ja.t},valueOf:function(){return this.s}};var Ja=new Qa;function Ka(t,n,e){var r=t.s=n+e,i=r-n,u=r-i;t.t=n-u+(e-i)}var tc=1e-6,nc=Math.PI,ec=nc/2,rc=nc/4,ic=2*nc,uc=180/nc,oc=nc/180,ac=Math.abs,cc=Math.atan,fc=Math.atan2,sc=Math.cos,lc=Math.ceil,hc=Math.exp,dc=(Math.floor,Math.log),pc=Math.pow,vc=Math.sin,yc=Math.sign||function(t){return t>0?1:t<0?-1:0},gc=Math.sqrt,bc=Math.tan;function _c(t){return t>1?0:t<-1?nc:Math.acos(t)}function mc(t){return t>1?ec:t<-1?-ec:Math.asin(t)}function xc(t){return(t=vc(t/2))*t}function wc(){}function Mc(t,n){t&&Sc.hasOwnProperty(t.type)&&Sc[t.type](t,n)}var kc={Feature:function(t,n){Mc(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Mc(e[r].geometry,n)}},Sc={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Nc(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Nc(e[r],n,0)},Polygon:function(t,n){Ac(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Ac(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Mc(e[r],n)}};function Nc(t,n,e){var r,i=-1,u=t.length-e;for(n.lineStart();++i<u;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Ac(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Nc(t[e],n,1);n.polygonEnd()}var Ec,Tc,Cc,Pc,zc,Oc=function(t,n){t&&kc.hasOwnProperty(t.type)?kc[t.type](t,n):Mc(t,n)},Rc=Za(),Lc=Za(),Dc={point:wc,lineStart:wc,lineEnd:wc,polygonStart:function(){Rc.reset(),Dc.lineStart=qc,Dc.lineEnd=jc},polygonEnd:function(){var t=+Rc;Lc.add(t<0?ic+t:t),this.lineStart=this.lineEnd=this.point=wc},sphere:function(){Lc.add(ic)}};function qc(){Dc.point=Ic}function jc(){Uc(Ec,Tc)}function Ic(t,n){Dc.point=Uc,Ec=t,Tc=n,Cc=t*=oc,Pc=sc(n=(n*=oc)/2+rc),zc=vc(n)}function Uc(t,n){var e=(t*=oc)-Cc,r=e>=0?1:-1,i=r*e,u=sc(n=(n*=oc)/2+rc),o=vc(n),a=zc*o,c=Pc*u+a*sc(i),f=a*r*vc(i);Rc.add(fc(f,c)),Cc=t,Pc=u,zc=o}var Fc=function(t){return Lc.reset(),Oc(t,Dc),2*Lc};function Bc(t){return[fc(t[1],t[0]),mc(t[2])]}function Yc(t){var n=t[0],e=t[1],r=sc(e);return[r*sc(n),r*vc(n),vc(e)]}function Hc(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Xc(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Gc(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Vc(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Wc(t){var n=gc(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var $c,Zc,Qc,Jc,Kc,tf,nf,ef,rf,uf,of=Za(),af={point:cf,lineStart:sf,lineEnd:lf,polygonStart:function(){af.point=hf,af.lineStart=df,af.lineEnd=pf,of.reset(),Dc.polygonStart()},polygonEnd:function(){Dc.polygonEnd(),af.point=cf,af.lineStart=sf,af.lineEnd=lf,Rc<0?($c=-(Qc=180),Zc=-(Jc=90)):of>tc?Jc=90:of<-tc&&(Zc=-90),uf[0]=$c,uf[1]=Qc}};function cf(t,n){rf.push(uf=[$c=t,Qc=t]),n<Zc&&(Zc=n),n>Jc&&(Jc=n)}function ff(t,n){var e=Yc([t*oc,n*oc]);if(ef){var r=Xc(ef,e),i=Xc([r[1],-r[0],0],r);Wc(i),i=Bc(i);var u,o=t-Kc,a=o>0?1:-1,c=i[0]*uc*a,f=ac(o)>180;f^(a*Kc<c&&c<a*t)?(u=i[1]*uc)>Jc&&(Jc=u):f^(a*Kc<(c=(c+360)%360-180)&&c<a*t)?(u=-i[1]*uc)<Zc&&(Zc=u):(n<Zc&&(Zc=n),n>Jc&&(Jc=n)),f?t<Kc?vf($c,t)>vf($c,Qc)&&(Qc=t):vf(t,Qc)>vf($c,Qc)&&($c=t):Qc>=$c?(t<$c&&($c=t),t>Qc&&(Qc=t)):t>Kc?vf($c,t)>vf($c,Qc)&&(Qc=t):vf(t,Qc)>vf($c,Qc)&&($c=t)}else rf.push(uf=[$c=t,Qc=t]);n<Zc&&(Zc=n),n>Jc&&(Jc=n),ef=e,Kc=t}function sf(){af.point=ff}function lf(){uf[0]=$c,uf[1]=Qc,af.point=cf,ef=null}function hf(t,n){if(ef){var e=t-Kc;of.add(ac(e)>180?e+(e>0?360:-360):e)}else tf=t,nf=n;Dc.point(t,n),ff(t,n)}function df(){Dc.lineStart()}function pf(){hf(tf,nf),Dc.lineEnd(),ac(of)>tc&&($c=-(Qc=180)),uf[0]=$c,uf[1]=Qc,ef=null}function vf(t,n){return(n-=t)<0?n+360:n}function yf(t,n){return t[0]-n[0]}function gf(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var bf,_f,mf,xf,wf,Mf,kf,Sf,Nf,Af,Ef,Tf,Cf,Pf,zf,Of,Rf=function(t){var n,e,r,i,u,o,a;if(Jc=Qc=-($c=Zc=1/0),rf=[],Oc(t,af),e=rf.length){for(rf.sort(yf),n=1,u=[r=rf[0]];n<e;++n)gf(r,(i=rf[n])[0])||gf(r,i[1])?(vf(r[0],i[1])>vf(r[0],r[1])&&(r[1]=i[1]),vf(i[0],r[1])>vf(r[0],r[1])&&(r[0]=i[0])):u.push(r=i);for(o=-1/0,n=0,r=u[e=u.length-1];n<=e;r=i,++n)i=u[n],(a=vf(r[1],i[0]))>o&&(o=a,$c=i[0],Qc=r[1])}return rf=uf=null,$c===1/0||Zc===1/0?[[NaN,NaN],[NaN,NaN]]:[[$c,Zc],[Qc,Jc]]},Lf={sphere:wc,point:Df,lineStart:jf,lineEnd:Ff,polygonStart:function(){Lf.lineStart=Bf,Lf.lineEnd=Yf},polygonEnd:function(){Lf.lineStart=jf,Lf.lineEnd=Ff}};function Df(t,n){t*=oc;var e=sc(n*=oc);qf(e*sc(t),e*vc(t),vc(n))}function qf(t,n,e){mf+=(t-mf)/++bf,xf+=(n-xf)/bf,wf+=(e-wf)/bf}function jf(){Lf.point=If}function If(t,n){t*=oc;var e=sc(n*=oc);Pf=e*sc(t),zf=e*vc(t),Of=vc(n),Lf.point=Uf,qf(Pf,zf,Of)}function Uf(t,n){t*=oc;var e=sc(n*=oc),r=e*sc(t),i=e*vc(t),u=vc(n),o=fc(gc((o=zf*u-Of*i)*o+(o=Of*r-Pf*u)*o+(o=Pf*i-zf*r)*o),Pf*r+zf*i+Of*u);_f+=o,Mf+=o*(Pf+(Pf=r)),kf+=o*(zf+(zf=i)),Sf+=o*(Of+(Of=u)),qf(Pf,zf,Of)}function Ff(){Lf.point=Df}function Bf(){Lf.point=Hf}function Yf(){Xf(Tf,Cf),Lf.point=Df}function Hf(t,n){Tf=t,Cf=n,t*=oc,n*=oc,Lf.point=Xf;var e=sc(n);Pf=e*sc(t),zf=e*vc(t),Of=vc(n),qf(Pf,zf,Of)}function Xf(t,n){t*=oc;var e=sc(n*=oc),r=e*sc(t),i=e*vc(t),u=vc(n),o=zf*u-Of*i,a=Of*r-Pf*u,c=Pf*i-zf*r,f=gc(o*o+a*a+c*c),s=mc(f),l=f&&-s/f;Nf+=l*o,Af+=l*a,Ef+=l*c,_f+=s,Mf+=s*(Pf+(Pf=r)),kf+=s*(zf+(zf=i)),Sf+=s*(Of+(Of=u)),qf(Pf,zf,Of)}var Gf=function(t){bf=_f=mf=xf=wf=Mf=kf=Sf=Nf=Af=Ef=0,Oc(t,Lf);var n=Nf,e=Af,r=Ef,i=n*n+e*e+r*r;return i<1e-12&&(n=Mf,e=kf,r=Sf,_f<tc&&(n=mf,e=xf,r=wf),(i=n*n+e*e+r*r)<1e-12)?[NaN,NaN]:[fc(e,n)*uc,mc(r/gc(i))*uc]},Vf=function(t){return function(){return t}},Wf=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function $f(t,n){return[ac(t)>nc?t+Math.round(-t/ic)*ic:t,n]}function Zf(t,n,e){return(t%=ic)?n||e?Wf(Jf(t),Kf(n,e)):Jf(t):n||e?Kf(n,e):$f}function Qf(t){return function(n,e){return[(n+=t)>nc?n-ic:n<-nc?n+ic:n,e]}}function Jf(t){var n=Qf(t);return n.invert=Qf(-t),n}function Kf(t,n){var e=sc(t),r=vc(t),i=sc(n),u=vc(n);function o(t,n){var o=sc(n),a=sc(t)*o,c=vc(t)*o,f=vc(n),s=f*e+a*r;return[fc(c*i-s*u,a*e-f*r),mc(s*i+c*u)]}return o.invert=function(t,n){var o=sc(n),a=sc(t)*o,c=vc(t)*o,f=vc(n),s=f*i-c*u;return[fc(c*i+f*u,a*e+s*r),mc(s*e-a*r)]},o}$f.invert=$f;var ts=function(t){function n(n){return(n=t(n[0]*oc,n[1]*oc))[0]*=uc,n[1]*=uc,n}return t=Zf(t[0]*oc,t[1]*oc,t.length>2?t[2]*oc:0),n.invert=function(n){return(n=t.invert(n[0]*oc,n[1]*oc))[0]*=uc,n[1]*=uc,n},n};function ns(t,n,e,r,i,u){if(e){var o=sc(n),a=vc(n),c=r*e;null==i?(i=n+r*ic,u=n-c/2):(i=es(o,i),u=es(o,u),(r>0?i<u:i>u)&&(i+=r*ic));for(var f,s=i;r>0?s>u:s<u;s-=c)f=Bc([o,-a*sc(s),-a*vc(s)]),t.point(f[0],f[1])}}function es(t,n){(n=Yc(n))[0]-=t,Wc(n);var e=_c(-n[1]);return((-n[2]<0?-e:e)+ic-tc)%ic}var rs=function(){var t,n,e=Vf([0,0]),r=Vf(90),i=Vf(6),u={point:function(e,r){t.push(e=n(e,r)),e[0]*=uc,e[1]*=uc}};function o(){var o=e.apply(this,arguments),a=r.apply(this,arguments)*oc,c=i.apply(this,arguments)*oc;return t=[],n=Zf(-o[0]*oc,-o[1]*oc,0).invert,ns(u,a,c,1),o={type:"Polygon",coordinates:[t]},t=n=null,o}return o.center=function(t){return arguments.length?(e="function"==typeof t?t:Vf([+t[0],+t[1]]),o):e},o.radius=function(t){return arguments.length?(r="function"==typeof t?t:Vf(+t),o):r},o.precision=function(t){return arguments.length?(i="function"==typeof t?t:Vf(+t),o):i},o},is=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:wc,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},us=function(t,n){return ac(t[0]-n[0])<tc&&ac(t[1]-n[1])<tc};function os(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var as=function(t,n,e,r,i){var u,o,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],o=t[n];if(us(r,o)){for(i.lineStart(),u=0;u<n;++u)i.point((r=t[u])[0],r[1]);i.lineEnd()}else a.push(e=new os(r,t,null,!0)),c.push(e.o=new os(r,null,e,!1)),a.push(e=new os(o,t,null,!1)),c.push(e.o=new os(o,null,e,!0))}}),a.length){for(c.sort(n),cs(a),cs(c),u=0,o=c.length;u<o;++u)c[u].e=e=!e;for(var f,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(u=0,o=f.length;u<o;++u)i.point((s=f[u])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,u=f.length-1;u>=0;--u)i.point((s=f[u])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function cs(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var fs=Za(),ss=function(t,n){var e=n[0],r=n[1],i=vc(r),u=[vc(e),-sc(e),0],o=0,a=0;fs.reset(),1===i?r=ec+tc:-1===i&&(r=-ec-tc);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+rc,v=vc(p),y=sc(p),g=0;g<l;++g,d=_,v=x,y=w,h=b){var b=s[g],_=b[0],m=b[1]/2+rc,x=vc(m),w=sc(m),M=_-d,k=M>=0?1:-1,S=k*M,N=S>nc,A=v*x;if(fs.add(fc(A*k*vc(S),y*w+A*sc(S))),o+=N?M+k*ic:M,N^d>=e^_>=e){var E=Xc(Yc(h),Yc(b));Wc(E);var T=Xc(u,E);Wc(T);var C=(N^M>=0?-1:1)*mc(T[2]);(r>C||r===C&&(E[0]||E[1]))&&(a+=N^M>=0?1:-1)}}return(o<-tc||o<tc&&fs<-tc)^1&a},ls=function(t,n,e,r){return function(i){var u,o,a,c=n(i),f=is(),s=n(f),l=!1,h={point:d,lineStart:v,lineEnd:y,polygonStart:function(){h.point=g,h.lineStart=b,h.lineEnd=_,o=[],u=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=y,o=q(o);var t=ss(u,r);o.length?(l||(i.polygonStart(),l=!0),as(o,ds,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),o=u=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function v(){h.point=p,c.lineStart()}function y(){h.point=d,c.lineEnd()}function g(t,n){a.push([t,n]),s.point(t,n)}function b(){s.lineStart(),a=[]}function _(){g(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(a.pop(),u.push(a),a=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),o.push(h.filter(hs))}return h}};function hs(t){return t.length>1}function ds(t,n){return((t=t.x)[0]<0?t[1]-ec-tc:ec-t[1])-((n=n.x)[0]<0?n[1]-ec-tc:ec-n[1])}var ps=ls(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(u,o){var a=u>0?nc:-nc,c=ac(u-e);ac(c-nc)<tc?(t.point(e,r=(r+o)/2>0?ec:-ec),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(u,r),n=0):i!==a&&c>=nc&&(ac(e-i)<tc&&(e-=i*tc),ac(u-a)<tc&&(u-=a*tc),r=function(t,n,e,r){var i,u,o=vc(t-e);return ac(o)>tc?cc((vc(n)*(u=sc(r))*vc(e)-vc(r)*(i=sc(n))*vc(t))/(i*u*o)):(n+r)/2}(e,r,u,o),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=u,r=o),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*ec,r.point(-nc,i),r.point(0,i),r.point(nc,i),r.point(nc,0),r.point(nc,-i),r.point(0,-i),r.point(-nc,-i),r.point(-nc,0),r.point(-nc,i);else if(ac(t[0]-n[0])>tc){var u=t[0]<n[0]?nc:-nc;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(n[0],n[1])},[-nc,-ec]);var vs=function(t){var n=sc(t),e=6*oc,r=n>0,i=ac(n)>tc;function u(t,e){return sc(t)*sc(e)>n}function o(t,e,r){var i=[1,0,0],u=Xc(Yc(t),Yc(e)),o=Hc(u,u),a=u[0],c=o-a*a;if(!c)return!r&&t;var f=n*o/c,s=-n*a/c,l=Xc(i,u),h=Vc(i,f);Gc(h,Vc(u,s));var d=l,p=Hc(h,d),v=Hc(d,d),y=p*p-v*(Hc(h,h)-1);if(!(y<0)){var g=gc(y),b=Vc(d,(-p-g)/v);if(Gc(b,h),b=Bc(b),!r)return b;var _,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(_=m,m=x,x=_);var k=x-m,S=ac(k-nc)<tc;if(!S&&M<w&&(_=w,w=M,M=_),S||k<tc?S?w+M>0^b[1]<(ac(b[0]-m)<tc?w:M):w<=b[1]&&b[1]<=M:k>nc^(m<=b[0]&&b[0]<=x)){var N=Vc(d,(-p+g)/v);return Gc(N,h),[b,Bc(N)]}}}function a(n,e){var i=r?t:nc-t,u=0;return n<-i?u|=1:n>i&&(u|=2),e<-i?u|=4:e>i&&(u|=8),u}return ls(u,function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=u(l,h),y=r?v?0:a(l,h):v?a(l+(l<0?nc:-nc),h):0;if(!n&&(f=c=v)&&t.lineStart(),v!==c&&(!(d=o(n,p))||us(n,d)||us(p,d))&&(p[0]+=tc,p[1]+=tc,v=u(p[0],p[1])),v!==c)s=0,v?(t.lineStart(),d=o(p,n),t.point(d[0],d[1])):(d=o(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var g;y&e||!(g=o(p,n,!0))||(s=0,r?(t.lineStart(),t.point(g[0][0],g[0][1]),t.point(g[1][0],g[1][1]),t.lineEnd()):(t.point(g[1][0],g[1][1]),t.lineEnd(),t.lineStart(),t.point(g[0][0],g[0][1])))}!v||n&&us(n,p)||t.point(p[0],p[1]),n=p,c=v,e=y},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}},function(n,r,i,u){ns(u,t,e,i,n,r)},r?[0,-t]:[-nc,t-nc])},ys=function(t,n,e,r,i,u){var o,a=t[0],c=t[1],f=0,s=1,l=n[0]-a,h=n[1]-c;if(o=e-a,l||!(o>0)){if(o/=l,l<0){if(o<f)return;o<s&&(s=o)}else if(l>0){if(o>s)return;o>f&&(f=o)}if(o=i-a,l||!(o<0)){if(o/=l,l<0){if(o>s)return;o>f&&(f=o)}else if(l>0){if(o<f)return;o<s&&(s=o)}if(o=r-c,h||!(o>0)){if(o/=h,h<0){if(o<f)return;o<s&&(s=o)}else if(h>0){if(o>s)return;o>f&&(f=o)}if(o=u-c,h||!(o<0)){if(o/=h,h<0){if(o>s)return;o>f&&(f=o)}else if(h>0){if(o<f)return;o<s&&(s=o)}return f>0&&(t[0]=a+f*l,t[1]=c+f*h),s<1&&(n[0]=a+s*l,n[1]=c+s*h),!0}}}}},gs=1e9,bs=-gs;function _s(t,n,e,r){function i(i,u){return t<=i&&i<=e&&n<=u&&u<=r}function u(i,u,a,f){var s=0,l=0;if(null==i||(s=o(i,a))!==(l=o(u,a))||c(i,u)<0^a>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else f.point(u[0],u[1])}function o(r,i){return ac(r[0]-t)<tc?i>0?0:3:ac(r[0]-e)<tc?i>0?2:1:ac(r[1]-n)<tc?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=o(t,1),r=o(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(o){var c,f,s,l,h,d,p,v,y,g,b,_=o,m=is(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);g=!0,y=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&y&&m.rejoin(),c.push(m.result()));x.point=w,y&&_.lineEnd()},polygonStart:function(){_=m,c=[],f=[],b=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var u,o,a=f[e],c=1,s=a.length,l=a[0],h=l[0],d=l[1];c<s;++c)u=h,o=d,l=a[c],h=l[0],d=l[1],o<=r?d>r&&(h-u)*(r-o)>(d-o)*(t-u)&&++n:d<=r&&(h-u)*(r-o)<(d-o)*(t-u)&&--n;return n}(),e=b&&n,i=(c=q(c)).length;(e||i)&&(o.polygonStart(),e&&(o.lineStart(),u(null,null,1,o),o.lineEnd()),i&&as(c,a,n,u,o),o.polygonEnd());_=o,c=f=s=null}};function w(t,n){i(t,n)&&_.point(t,n)}function M(u,o){var a=i(u,o);if(f&&s.push([u,o]),g)l=u,h=o,d=a,g=!1,a&&(_.lineStart(),_.point(u,o));else if(a&&y)_.point(u,o);else{var c=[p=Math.max(bs,Math.min(gs,p)),v=Math.max(bs,Math.min(gs,v))],m=[u=Math.max(bs,Math.min(gs,u)),o=Math.max(bs,Math.min(gs,o))];ys(c,m,t,n,e,r)?(y||(_.lineStart(),_.point(c[0],c[1])),_.point(m[0],m[1]),a||_.lineEnd(),b=!1):a&&(_.lineStart(),_.point(u,o),b=!1)}p=u,v=o,y=a}return x}}var ms,xs,ws,Ms=function(){var t,n,e,r=0,i=0,u=960,o=500;return e={stream:function(e){return t&&n===e?t:t=_s(r,i,u,o)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],u=+a[1][0],o=+a[1][1],t=n=null,e):[[r,i],[u,o]]}}},ks=Za(),Ss={sphere:wc,point:wc,lineStart:function(){Ss.point=As,Ss.lineEnd=Ns},lineEnd:wc,polygonStart:wc,polygonEnd:wc};function Ns(){Ss.point=Ss.lineEnd=wc}function As(t,n){ms=t*=oc,xs=vc(n*=oc),ws=sc(n),Ss.point=Es}function Es(t,n){t*=oc;var e=vc(n*=oc),r=sc(n),i=ac(t-ms),u=sc(i),o=r*vc(i),a=ws*e-xs*r*u,c=xs*e+ws*r*u;ks.add(fc(gc(o*o+a*a),c)),ms=t,xs=e,ws=r}var Ts=function(t){return ks.reset(),Oc(t,Ss),+ks},Cs=[null,null],Ps={type:"LineString",coordinates:Cs},zs=function(t,n){return Cs[0]=t,Cs[1]=n,Ts(Ps)},Os={Feature:function(t,n){return Ls(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(Ls(e[r].geometry,n))return!0;return!1}},Rs={Sphere:function(){return!0},Point:function(t,n){return Ds(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Ds(e[r],n))return!0;return!1},LineString:function(t,n){return qs(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(qs(e[r],n))return!0;return!1},Polygon:function(t,n){return js(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(js(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(Ls(e[r],n))return!0;return!1}};function Ls(t,n){return!(!t||!Rs.hasOwnProperty(t.type))&&Rs[t.type](t,n)}function Ds(t,n){return 0===zs(t,n)}function qs(t,n){var e=zs(t[0],t[1]);return zs(t[0],n)+zs(n,t[1])<=e+tc}function js(t,n){return!!ss(t.map(Is),Us(n))}function Is(t){return(t=t.map(Us)).pop(),t}function Us(t){return[t[0]*oc,t[1]*oc]}var Fs=function(t,n){return(t&&Os.hasOwnProperty(t.type)?Os[t.type]:Ls)(t,n)};function Bs(t,n,e){var r=w(t,n-tc,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Ys(t,n,e){var r=w(t,n-tc,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Hs(){var t,n,e,r,i,u,o,a,c,f,s,l,h=10,d=h,p=90,v=360,y=2.5;function g(){return{type:"MultiLineString",coordinates:b()}}function b(){return w(lc(r/p)*p,e,p).map(s).concat(w(lc(a/v)*v,o,v).map(l)).concat(w(lc(n/h)*h,t,h).filter(function(t){return ac(t%p)>tc}).map(c)).concat(w(lc(u/d)*d,i,d).filter(function(t){return ac(t%v)>tc}).map(f))}return g.lines=function(){return b().map(function(t){return{type:"LineString",coordinates:t}})},g.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(o).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},g.extent=function(t){return arguments.length?g.extentMajor(t).extentMinor(t):g.extentMinor()},g.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],o=+t[1][1],r>e&&(t=r,r=e,e=t),a>o&&(t=a,a=o,o=t),g.precision(y)):[[r,a],[e,o]]},g.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],u=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),u>i&&(e=u,u=i,i=e),g.precision(y)):[[n,u],[t,i]]},g.step=function(t){return arguments.length?g.stepMajor(t).stepMinor(t):g.stepMinor()},g.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],g):[p,v]},g.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],g):[h,d]},g.precision=function(h){return arguments.length?(y=+h,c=Bs(u,i,90),f=Ys(n,t,y),s=Bs(a,o,90),l=Ys(r,e,y),g):y},g.extentMajor([[-180,-90+tc],[180,90-tc]]).extentMinor([[-180,-80-tc],[180,80+tc]])}function Xs(){return Hs()()}var Gs,Vs,Ws,$s,Zs=function(t,n){var e=t[0]*oc,r=t[1]*oc,i=n[0]*oc,u=n[1]*oc,o=sc(r),a=vc(r),c=sc(u),f=vc(u),s=o*sc(e),l=o*vc(e),h=c*sc(i),d=c*vc(i),p=2*mc(gc(xc(u-r)+o*c*xc(i-e))),v=vc(p),y=p?function(t){var n=vc(t*=p)/v,e=vc(p-t)/v,r=e*s+n*h,i=e*l+n*d,u=e*a+n*f;return[fc(i,r)*uc,fc(u,gc(r*r+i*i))*uc]}:function(){return[e*uc,r*uc]};return y.distance=p,y},Qs=function(t){return t},Js=Za(),Ks=Za(),tl={point:wc,lineStart:wc,lineEnd:wc,polygonStart:function(){tl.lineStart=nl,tl.lineEnd=il},polygonEnd:function(){tl.lineStart=tl.lineEnd=tl.point=wc,Js.add(ac(Ks)),Ks.reset()},result:function(){var t=Js/2;return Js.reset(),t}};function nl(){tl.point=el}function el(t,n){tl.point=rl,Gs=Ws=t,Vs=$s=n}function rl(t,n){Ks.add($s*t-Ws*n),Ws=t,$s=n}function il(){rl(Gs,Vs)}var ul=tl,ol=1/0,al=ol,cl=-ol,fl=cl;var sl,ll,hl,dl,pl={point:function(t,n){t<ol&&(ol=t);t>cl&&(cl=t);n<al&&(al=n);n>fl&&(fl=n)},lineStart:wc,lineEnd:wc,polygonStart:wc,polygonEnd:wc,result:function(){var t=[[ol,al],[cl,fl]];return cl=fl=-(al=ol=1/0),t}},vl=0,yl=0,gl=0,bl=0,_l=0,ml=0,xl=0,wl=0,Ml=0,kl={point:Sl,lineStart:Nl,lineEnd:Tl,polygonStart:function(){kl.lineStart=Cl,kl.lineEnd=Pl},polygonEnd:function(){kl.point=Sl,kl.lineStart=Nl,kl.lineEnd=Tl},result:function(){var t=Ml?[xl/Ml,wl/Ml]:ml?[bl/ml,_l/ml]:gl?[vl/gl,yl/gl]:[NaN,NaN];return vl=yl=gl=bl=_l=ml=xl=wl=Ml=0,t}};function Sl(t,n){vl+=t,yl+=n,++gl}function Nl(){kl.point=Al}function Al(t,n){kl.point=El,Sl(hl=t,dl=n)}function El(t,n){var e=t-hl,r=n-dl,i=gc(e*e+r*r);bl+=i*(hl+t)/2,_l+=i*(dl+n)/2,ml+=i,Sl(hl=t,dl=n)}function Tl(){kl.point=Sl}function Cl(){kl.point=zl}function Pl(){Ol(sl,ll)}function zl(t,n){kl.point=Ol,Sl(sl=hl=t,ll=dl=n)}function Ol(t,n){var e=t-hl,r=n-dl,i=gc(e*e+r*r);bl+=i*(hl+t)/2,_l+=i*(dl+n)/2,ml+=i,xl+=(i=dl*t-hl*n)*(hl+t),wl+=i*(dl+n),Ml+=3*i,Sl(hl=t,dl=n)}var Rl=kl;function Ll(t){this._context=t}Ll.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,ic)}},result:wc};var Dl,ql,jl,Il,Ul,Fl=Za(),Bl={point:wc,lineStart:function(){Bl.point=Yl},lineEnd:function(){Dl&&Hl(ql,jl),Bl.point=wc},polygonStart:function(){Dl=!0},polygonEnd:function(){Dl=null},result:function(){var t=+Fl;return Fl.reset(),t}};function Yl(t,n){Bl.point=Hl,ql=Il=t,jl=Ul=n}function Hl(t,n){Il-=t,Ul-=n,Fl.add(gc(Il*Il+Ul*Ul)),Il=t,Ul=n}var Xl=Bl;function Gl(){this._string=[]}function Vl(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}Gl.prototype={_radius:4.5,_circle:Vl(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Vl(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var Wl=function(t,n){var e,r,i=4.5;function u(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Oc(t,e(r))),r.result()}return u.area=function(t){return Oc(t,e(ul)),ul.result()},u.measure=function(t){return Oc(t,e(Xl)),Xl.result()},u.bounds=function(t){return Oc(t,e(pl)),pl.result()},u.centroid=function(t){return Oc(t,e(Rl)),Rl.result()},u.projection=function(n){return arguments.length?(e=null==n?(t=null,Qs):(t=n).stream,u):t},u.context=function(t){return arguments.length?(r=null==t?(n=null,new Gl):new Ll(n=t),"function"!=typeof i&&r.pointRadius(i),u):n},u.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),u):i},u.projection(t).context(n)},$l=function(t){return{stream:Zl(t)}};function Zl(t){return function(n){var e=new Ql;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Ql(){}function Jl(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Oc(e,t.stream(pl)),n(pl.result()),null!=r&&t.clipExtent(r),t}function Kl(t,n,e){return Jl(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],u=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),o=+n[0][0]+(r-u*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-u*(e[1][1]+e[0][1]))/2;t.scale(150*u).translate([o,a])},e)}function th(t,n,e){return Kl(t,[[0,0],n],e)}function nh(t,n,e){return Jl(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),u=(r-i*(e[1][0]+e[0][0]))/2,o=-i*e[0][1];t.scale(150*i).translate([u,o])},e)}function eh(t,n,e){return Jl(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),u=-i*e[0][0],o=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([u,o])},e)}Ql.prototype={constructor:Ql,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var rh=16,ih=sc(30*oc),uh=function(t,n){return+n?function(t,n){function e(r,i,u,o,a,c,f,s,l,h,d,p,v,y){var g=f-r,b=s-i,_=g*g+b*b;if(_>4*n&&v--){var m=o+h,x=a+d,w=c+p,M=gc(m*m+x*x+w*w),k=mc(w/=M),S=ac(ac(w)-1)<tc||ac(u-l)<tc?(u+l)/2:fc(x,m),N=t(S,k),A=N[0],E=N[1],T=A-r,C=E-i,P=b*T-g*C;(P*P/_>n||ac((g*T+b*C)/_-.5)>.3||o*h+a*d+c*p<ih)&&(e(r,i,u,o,a,c,A,E,S,m/=M,x/=M,w,v,y),y.point(A,E),e(A,E,S,m,x,w,f,s,l,h,d,p,v,y))}}return function(n){var r,i,u,o,a,c,f,s,l,h,d,p,v={point:y,lineStart:g,lineEnd:_,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=g}};function y(e,r){e=t(e,r),n.point(e[0],e[1])}function g(){s=NaN,v.point=b,n.lineStart()}function b(r,i){var u=Yc([r,i]),o=t(r,i);e(s,l,f,h,d,p,s=o[0],l=o[1],f=r,h=u[0],d=u[1],p=u[2],rh,n),n.point(s,l)}function _(){v.point=y,n.lineEnd()}function m(){g(),v.point=x,v.lineEnd=w}function x(t,n){b(r=t,n),i=s,u=l,o=h,a=d,c=p,v.point=b}function w(){e(s,l,f,h,d,p,i,u,r,o,a,c,rh,n),v.lineEnd=_,_()}return v}}(t,n):function(t){return Zl({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var oh=Zl({point:function(t,n){this.stream.point(t*oc,n*oc)}});function ah(t,n,e,r){var i=sc(r),u=vc(r),o=i*t,a=u*t,c=i/t,f=u/t,s=(u*e-i*n)/t,l=(u*n+i*e)/t;function h(t,r){return[o*t-a*r+n,e-a*t-o*r]}return h.invert=function(t,n){return[c*t-f*n+s,l-f*t-c*n]},h}function ch(t){return fh(function(){return t})()}function fh(t){var n,e,r,i,u,o,a,c,f,s,l=150,h=480,d=250,p=0,v=0,y=0,g=0,b=0,_=0,m=null,x=ps,w=null,M=Qs,k=.5;function S(t){return c(t[0]*oc,t[1]*oc)}function N(t){return(t=c.invert(t[0],t[1]))&&[t[0]*uc,t[1]*uc]}function A(){var t=ah(l,0,0,_).apply(null,n(p,v)),r=(_?ah:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],_);return e=Zf(y,g,b),a=Wf(n,r),c=Wf(e,a),o=uh(a,k),E()}function E(){return f=s=null,S}return S.stream=function(t){return f&&s===t?f:f=oh(function(t){return Zl({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(o(M(s=t)))))},S.preclip=function(t){return arguments.length?(x=t,m=void 0,E()):x},S.postclip=function(t){return arguments.length?(M=t,w=r=i=u=null,E()):M},S.clipAngle=function(t){return arguments.length?(x=+t?vs(m=t*oc):(m=null,ps),E()):m*uc},S.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=u=null,Qs):_s(w=+t[0][0],r=+t[0][1],i=+t[1][0],u=+t[1][1]),E()):null==w?null:[[w,r],[i,u]]},S.scale=function(t){return arguments.length?(l=+t,A()):l},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],A()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*oc,v=t[1]%360*oc,A()):[p*uc,v*uc]},S.rotate=function(t){return arguments.length?(y=t[0]%360*oc,g=t[1]%360*oc,b=t.length>2?t[2]%360*oc:0,A()):[y*uc,g*uc,b*uc]},S.angle=function(t){return arguments.length?(_=t%360*oc,A()):_*uc},S.precision=function(t){return arguments.length?(o=uh(a,k=t*t),E()):gc(k)},S.fitExtent=function(t,n){return Kl(S,t,n)},S.fitSize=function(t,n){return th(S,t,n)},S.fitWidth=function(t,n){return nh(S,t,n)},S.fitHeight=function(t,n){return eh(S,t,n)},function(){return n=t.apply(this,arguments),S.invert=n.invert&&N,A()}}function sh(t){var n=0,e=nc/3,r=fh(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*oc,e=t[1]*oc):[n*uc,e*uc]},i}function lh(t,n){var e=vc(t),r=(e+vc(n))/2;if(ac(r)<tc)return function(t){var n=sc(t);function e(t,e){return[t*n,vc(e)/n]}return e.invert=function(t,e){return[t/n,mc(e*n)]},e}(t);var i=1+e*(2*r-e),u=gc(i)/r;function o(t,n){var e=gc(i-2*r*vc(n))/r;return[e*vc(t*=r),u-e*sc(t)]}return o.invert=function(t,n){var e=u-n;return[fc(t,ac(e))/r*yc(e),mc((i-(t*t+e*e)*r*r)/(2*r))]},o}var hh=function(){return sh(lh).scale(155.424).center([0,33.6442])},dh=function(){return hh().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var ph=function(){var t,n,e,r,i,u,o=dh(),a=hh().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=hh().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){u=[t,n]}};function s(t){var n=t[0],o=t[1];return u=null,e.point(n,o),u||(r.point(n,o),u)||(i.point(n,o),u)}function l(){return t=n=null,s}return s.invert=function(t){var n=o.scale(),e=o.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:o).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[o.stream(n=e),a.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(o.precision(t),a.precision(t),c.precision(t),l()):o.precision()},s.scale=function(t){return arguments.length?(o.scale(t),a.scale(.35*t),c.scale(t),s.translate(o.translate())):o.scale()},s.translate=function(t){if(!arguments.length)return o.translate();var n=o.scale(),u=+t[0],s=+t[1];return e=o.translate(t).clipExtent([[u-.455*n,s-.238*n],[u+.455*n,s+.238*n]]).stream(f),r=a.translate([u-.307*n,s+.201*n]).clipExtent([[u-.425*n+tc,s+.12*n+tc],[u-.214*n-tc,s+.234*n-tc]]).stream(f),i=c.translate([u-.205*n,s+.212*n]).clipExtent([[u-.214*n+tc,s+.166*n+tc],[u-.115*n-tc,s+.234*n-tc]]).stream(f),l()},s.fitExtent=function(t,n){return Kl(s,t,n)},s.fitSize=function(t,n){return th(s,t,n)},s.fitWidth=function(t,n){return nh(s,t,n)},s.fitHeight=function(t,n){return eh(s,t,n)},s.scale(1070)};function vh(t){return function(n,e){var r=sc(n),i=sc(e),u=t(r*i);return[u*i*vc(n),u*vc(e)]}}function yh(t){return function(n,e){var r=gc(n*n+e*e),i=t(r),u=vc(i),o=sc(i);return[fc(n*u,r*o),mc(r&&e*u/r)]}}var gh=vh(function(t){return gc(2/(1+t))});gh.invert=yh(function(t){return 2*mc(t/2)});var bh=function(){return ch(gh).scale(124.75).clipAngle(179.999)},_h=vh(function(t){return(t=_c(t))&&t/vc(t)});_h.invert=yh(function(t){return t});var mh=function(){return ch(_h).scale(79.4188).clipAngle(179.999)};function xh(t,n){return[t,dc(bc((ec+n)/2))]}xh.invert=function(t,n){return[t,2*cc(hc(n))-ec]};var wh=function(){return Mh(xh).scale(961/ic)};function Mh(t){var n,e,r,i=ch(t),u=i.center,o=i.scale,a=i.translate,c=i.clipExtent,f=null;function s(){var u=nc*o(),a=i(ts(i.rotate()).invert([0,0]));return c(null==f?[[a[0]-u,a[1]-u],[a[0]+u,a[1]+u]]:t===xh?[[Math.max(a[0]-u,f),n],[Math.min(a[0]+u,e),r]]:[[f,Math.max(a[1]-u,n)],[e,Math.min(a[1]+u,r)]])}return i.scale=function(t){return arguments.length?(o(t),s()):o()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(u(t),s()):u()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function kh(t){return bc((ec+t)/2)}function Sh(t,n){var e=sc(t),r=t===n?vc(t):dc(e/sc(n))/dc(kh(n)/kh(t)),i=e*pc(kh(t),r)/r;if(!r)return xh;function u(t,n){i>0?n<-ec+tc&&(n=-ec+tc):n>ec-tc&&(n=ec-tc);var e=i/pc(kh(n),r);return[e*vc(r*t),i-e*sc(r*t)]}return u.invert=function(t,n){var e=i-n,u=yc(r)*gc(t*t+e*e);return[fc(t,ac(e))/r*yc(e),2*cc(pc(i/u,1/r))-ec]},u}var Nh=function(){return sh(Sh).scale(109.5).parallels([30,30])};function Ah(t,n){return[t,n]}Ah.invert=Ah;var Eh=function(){return ch(Ah).scale(152.63)};function Th(t,n){var e=sc(t),r=t===n?vc(t):(e-sc(n))/(n-t),i=e/r+t;if(ac(r)<tc)return Ah;function u(t,n){var e=i-n,u=r*t;return[e*vc(u),i-e*sc(u)]}return u.invert=function(t,n){var e=i-n;return[fc(t,ac(e))/r*yc(e),i-yc(r)*gc(t*t+e*e)]},u}var Ch=function(){return sh(Th).scale(131.154).center([0,13.9389])},Ph=1.340264,zh=-.081106,Oh=893e-6,Rh=.003796,Lh=gc(3)/2;function Dh(t,n){var e=mc(Lh*vc(n)),r=e*e,i=r*r*r;return[t*sc(e)/(Lh*(Ph+3*zh*r+i*(7*Oh+9*Rh*r))),e*(Ph+zh*r+i*(Oh+Rh*r))]}Dh.invert=function(t,n){for(var e,r=n,i=r*r,u=i*i*i,o=0;o<12&&(u=(i=(r-=e=(r*(Ph+zh*i+u*(Oh+Rh*i))-n)/(Ph+3*zh*i+u*(7*Oh+9*Rh*i)))*r)*i*i,!(ac(e)<1e-12));++o);return[Lh*t*(Ph+3*zh*i+u*(7*Oh+9*Rh*i))/sc(r),mc(vc(r)/Lh)]};var qh=function(){return ch(Dh).scale(177.158)};function jh(t,n){var e=sc(n),r=sc(t)*e;return[e*vc(t)/r,vc(n)/r]}jh.invert=yh(cc);var Ih=function(){return ch(jh).scale(144.049).clipAngle(60)};function Uh(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Qs:Zl({point:function(i,u){this.stream.point(i*t+e,u*n+r)}})}var Fh=function(){var t,n,e,r,i,u,o=1,a=0,c=0,f=1,s=1,l=Qs,h=null,d=Qs;function p(){return r=i=null,u}return u={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Qs):_s(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Uh((o=+t)*f,o*s,a,c),p()):o},translate:function(t){return arguments.length?(l=Uh(o*f,o*s,a=+t[0],c=+t[1]),p()):[a,c]},reflectX:function(t){return arguments.length?(l=Uh(o*(f=t?-1:1),o*s,a,c),p()):f<0},reflectY:function(t){return arguments.length?(l=Uh(o*f,o*(s=t?-1:1),a,c),p()):s<0},fitExtent:function(t,n){return Kl(u,t,n)},fitSize:function(t,n){return th(u,t,n)},fitWidth:function(t,n){return nh(u,t,n)},fitHeight:function(t,n){return eh(u,t,n)}}};function Bh(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}Bh.invert=function(t,n){var e,r=n,i=25;do{var u=r*r,o=u*u;r-=e=(r*(1.007226+u*(.015085+o*(.028874*u-.044475-.005916*o)))-n)/(1.007226+u*(.045255+o*(.259866*u-.311325-.005916*11*o)))}while(ac(e)>tc&&--i>0);return[t/(.8707+(u=r*r)*(u*(u*u*u*(.003971-.001529*u)-.013791)-.131979)),r]};var Yh=function(){return ch(Bh).scale(175.295)};function Hh(t,n){return[sc(n)*vc(t),vc(n)]}Hh.invert=yh(mc);var Xh=function(){return ch(Hh).scale(249.5).clipAngle(90+tc)};function Gh(t,n){var e=sc(n),r=1+sc(t)*e;return[e*vc(t)/r,vc(n)/r]}Gh.invert=yh(function(t){return 2*cc(t)});var Vh=function(){return ch(Gh).scale(250).clipAngle(142)};function Wh(t,n){return[dc(bc((ec+n)/2)),-t]}Wh.invert=function(t,n){return[-n,2*cc(hc(t))-ec]};var $h=function(){var t=Mh(Wh),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function Zh(t,n){return t.parent===n.parent?1:2}function Qh(t,n){return t+n.x}function Jh(t,n){return Math.max(t,n.y)}var Kh=function(){var t=Zh,n=1,e=1,r=!1;function i(i){var u,o=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Qh,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Jh,0)}(e)):(n.x=u?o+=t(n,u):0,n.y=0,u=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=a.x-t(a,c)/2,s=c.x+t(c,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function td(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function nd(t,n){var e,r,i,u,o,a=new ud(t),c=+t.value&&(a.value=t.value),f=[a];for(null==n&&(n=ed);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(o=i.length))for(e.children=new Array(o),u=o-1;u>=0;--u)f.push(r=e.children[u]=new ud(i[u])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(id)}function ed(t){return t.children}function rd(t){t.data=t.data.data}function id(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function ud(t){this.data=t,this.depth=this.height=0,this.parent=null}ud.prototype=nd.prototype={constructor:ud,count:function(){return this.eachAfter(td)},each:function(t){var n,e,r,i,u=this,o=[u];do{for(n=o.reverse(),o=[];u=n.pop();)if(t(u),e=u.children)for(r=0,i=e.length;r<i;++r)o.push(e[r])}while(o.length);return this},eachAfter:function(t){for(var n,e,r,i=this,u=[i],o=[];i=u.pop();)if(o.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)u.push(n[e]);for(;i=o.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return nd(this).eachBefore(rd)}};var od=Array.prototype.slice;var ad=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(od.call(t))).length,u=[];r<i;)n=t[r],e&&sd(e,n)?++r:(e=hd(u=cd(u,n)),r=0);return e};function cd(t,n){var e,r;if(ld(n,t))return[n];for(e=0;e<t.length;++e)if(fd(n,t[e])&&ld(dd(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(fd(dd(t[e],t[r]),n)&&fd(dd(t[e],n),t[r])&&fd(dd(t[r],n),t[e])&&ld(pd(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function fd(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function sd(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function ld(t,n){for(var e=0;e<n.length;++e)if(!sd(t,n[e]))return!1;return!0}function hd(t){switch(t.length){case 1:return{x:(n=t[0]).x,y:n.y,r:n.r};case 2:return dd(t[0],t[1]);case 3:return pd(t[0],t[1],t[2])}var n}function dd(t,n){var e=t.x,r=t.y,i=t.r,u=n.x,o=n.y,a=n.r,c=u-e,f=o-r,s=a-i,l=Math.sqrt(c*c+f*f);return{x:(e+u+c/l*s)/2,y:(r+o+f/l*s)/2,r:(l+i+a)/2}}function pd(t,n,e){var r=t.x,i=t.y,u=t.r,o=n.x,a=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-o,d=r-f,p=i-a,v=i-s,y=c-u,g=l-u,b=r*r+i*i-u*u,_=b-o*o-a*a+c*c,m=b-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*_)/(2*x)-r,M=(v*y-p*g)/x,k=(d*_-h*m)/(2*x)-i,S=(h*g-d*y)/x,N=M*M+S*S-1,A=2*(u+w*M+k*S),E=w*w+k*k-u*u,T=-(N?(A+Math.sqrt(A*A-4*N*E))/(2*N):E/A);return{x:r+w+M*T,y:i+k+S*T,r:T}}function vd(t,n,e){var r,i,u,o,a=t.x-n.x,c=t.y-n.y,f=a*a+c*c;f?(i=n.r+e.r,i*=i,o=t.r+e.r,i>(o*=o)?(r=(f+o-i)/(2*f),u=Math.sqrt(Math.max(0,o/f-r*r)),e.x=t.x-r*a-u*c,e.y=t.y-r*c+u*a):(r=(f+i-o)/(2*f),u=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*a-u*c,e.y=n.y+r*c+u*a)):(e.x=n.x+e.r,e.y=n.y)}function yd(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function gd(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,u=(n.y*e.r+e.y*n.r)/r;return i*i+u*u}function bd(t){this._=t,this.next=null,this.previous=null}function _d(t){if(!(i=t.length))return 0;var n,e,r,i,u,o,a,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;vd(e,n,r=t[2]),n=new bd(n),e=new bd(e),r=new bd(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){vd(n._,e._,r=t[a]),r=new bd(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(yd(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}s+=c._.r,c=c.next}else{if(yd(f._,r._)){(n=f).next=e,e.previous=n,--a;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,u=gd(n);(r=r.next)!==e;)(o=gd(r))<u&&(n=r,u=o);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=ad(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var md=function(t){return _d(t),t};function xd(t){if("function"!=typeof t)throw new Error;return t}function wd(){return 0}var Md=function(t){return function(){return t}};function kd(t){return Math.sqrt(t.value)}var Sd=function(){var t=null,n=1,e=1,r=wd;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(Nd(t)).eachAfter(Ad(r,.5)).eachBefore(Ed(1)):i.eachBefore(Nd(kd)).eachAfter(Ad(wd,1)).eachAfter(Ad(r,i.r/Math.min(n,e))).eachBefore(Ed(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=null==(e=n)?null:xd(e),i):t;var e},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:Md(+t),i):r},i};function Nd(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function Ad(t,n){return function(e){if(r=e.children){var r,i,u,o=r.length,a=t(e)*n||0;if(a)for(i=0;i<o;++i)r[i].r+=a;if(u=_d(r),a)for(i=0;i<o;++i)r[i].r-=a;e.r=u+a}}}function Ed(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var Td=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},Cd=function(t,n,e,r,i){for(var u,o=t.children,a=-1,c=o.length,f=t.value&&(r-n)/t.value;++a<c;)(u=o[a]).y0=e,u.y1=i,u.x0=n,u.x1=n+=u.value*f},Pd=function(){var t=1,n=1,e=0,r=!1;function i(i){var u=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/u,i.eachBefore(function(t,n){return function(r){r.children&&Cd(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,u=r.y0,o=r.x1-e,a=r.y1-e;o<i&&(i=o=(i+o)/2),a<u&&(u=a=(u+a)/2),r.x0=i,r.y0=u,r.x1=o,r.y1=a}}(n,u)),r&&i.eachBefore(Td),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},zd="$",Od={depth:-1},Rd={};function Ld(t){return t.id}function Dd(t){return t.parentId}var qd=function(){var t=Ld,n=Dd;function e(e){var r,i,u,o,a,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new ud(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f=zd+(a.id=c)]=f in h?Rd:a);for(i=0;i<s;++i)if(a=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(o=h[zd+c]))throw new Error("missing: "+c);if(o===Rd)throw new Error("ambiguous: "+c);o.children?o.children.push(a):o.children=[a],a.parent=o}else{if(u)throw new Error("multiple roots");u=a}if(!u)throw new Error("no root");if(u.parent=Od,u.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(id),u.parent=null,s>0)throw new Error("cycle");return u}return e.id=function(n){return arguments.length?(t=xd(n),e):t},e.parentId=function(t){return arguments.length?(n=xd(t),e):n},e};function jd(t,n){return t.parent===n.parent?1:2}function Id(t){var n=t.children;return n?n[0]:t.t}function Ud(t){var n=t.children;return n?n[n.length-1]:t.t}function Fd(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function Bd(t,n,e){return t.a.parent===n.parent?t.a:e}function Yd(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Yd.prototype=Object.create(ud.prototype);var Hd=function(){var t=jd,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,u,o=new Yd(t,0),a=[o];n=a.pop();)if(r=n._.children)for(n.children=new Array(u=r.length),i=u-1;i>=0;--i)a.push(e=n.children[i]=new Yd(r[i],i)),e.parent=n;return(o.parent=new Yd(null,0)).children=[o],o}(i);if(c.eachAfter(u),c.parent.m=-c.z,c.eachBefore(o),r)i.eachBefore(a);else{var f=i,s=i,l=i;i.eachBefore(function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function u(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,u=i.length;--u>=0;)(n=i[u]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var u=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-u):n.z=u}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,u=n,o=n,a=e,c=u.parent.children[0],f=u.m,s=o.m,l=a.m,h=c.m;a=Ud(a),u=Id(u),a&&u;)c=Id(c),(o=Ud(o)).a=n,(i=a.z+l-u.z-f+t(a._,u._))>0&&(Fd(Bd(a,n,r),n,i),f+=i,s+=i),l+=a.m,f+=u.m,h+=c.m,s+=o.m;a&&!Ud(o)&&(o.t=a,o.m+=l-s),u&&!Id(c)&&(c.t=u,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function o(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},Xd=function(t,n,e,r,i){for(var u,o=t.children,a=-1,c=o.length,f=t.value&&(i-e)/t.value;++a<c;)(u=o[a]).x0=n,u.x1=r,u.y0=e,u.y1=e+=u.value*f},Gd=(1+Math.sqrt(5))/2;function Vd(t,n,e,r,i,u){for(var o,a,c,f,s,l,h,d,p,v,y,g=[],b=n.children,_=0,m=0,x=b.length,w=n.value;_<x;){c=i-e,f=u-r;do{s=b[m++].value}while(!s&&m<x);for(l=h=s,y=s*s*(v=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/y,y/l);m<x;++m){if(s+=a=b[m].value,a<l&&(l=a),a>h&&(h=a),y=s*s*v,(d=Math.max(h/y,y/l))>p){s-=a;break}p=d}g.push(o={value:s,dice:c<f,children:b.slice(_,m)}),o.dice?Cd(o,e,r,i,w?r+=f*s/w:u):Xd(o,e,r,w?e+=c*s/w:i,u),w-=s,_=m}return g}var Wd=function t(n){function e(t,e,r,i,u){Vd(n,t,e,r,i,u)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Gd),$d=function(){var t=Wd,n=!1,e=1,r=1,i=[0],u=wd,o=wd,a=wd,c=wd,f=wd;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(Td),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=u(n)/2,r+=f(n)-e,s+=o(n)-e,(l-=a(n)-e)<r&&(r=l=(r+l)/2),(h-=c(n)-e)<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=xd(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(u="function"==typeof t?t:Md(+t),s):u},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(o="function"==typeof t?t:Md(+t),s):o},s.paddingRight=function(t){return arguments.length?(a="function"==typeof t?t:Md(+t),s):a},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:Md(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:Md(+t),s):f},s},Zd=function(t,n,e,r,i){var u,o,a=t.children,c=a.length,f=new Array(c+1);for(f[0]=o=u=0;u<c;++u)f[u+1]=o+=a[u].value;!function t(n,e,r,i,u,o,c){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=u,s.x1=o,void(s.y1=c)}var l=f[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&n+1<d&&--d;var y=f[d]-l,g=r-y;if(o-i>c-u){var b=(i*g+o*y)/r;t(n,d,y,i,u,b,c),t(d,e,g,b,u,o,c)}else{var _=(u*g+c*y)/r;t(n,d,y,i,u,o,_),t(d,e,g,i,_,o,c)}}(0,c,t.value,n,e,r,i)},Qd=function(t,n,e,r,i){(1&t.depth?Xd:Cd)(t,n,e,r,i)},Jd=function t(n){function e(t,e,r,i,u){if((o=t._squarify)&&o.ratio===n)for(var o,a,c,f,s,l=-1,h=o.length,d=t.value;++l<h;){for(c=(a=o[l]).children,f=a.value=0,s=c.length;f<s;++f)a.value+=c[f].value;a.dice?Cd(a,e,r,i,r+=(u-r)*a.value/d):Xd(a,e,r,e+=(i-e)*a.value/d,u),d-=a.value}else t._squarify=o=Vd(n,t,e,r,i,u),o.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Gd),Kd=function(t){for(var n,e=-1,r=t.length,i=t[r-1],u=0;++e<r;)n=i,i=t[e],u+=n[1]*i[0]-n[0]*i[1];return u/2},tp=function(t){for(var n,e,r=-1,i=t.length,u=0,o=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],u+=(n[0]+a[0])*e,o+=(n[1]+a[1])*e;return[u/(c*=3),o/c]},np=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function ep(t,n){return t[0]-n[0]||t[1]-n[1]}function rp(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&np(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var ip=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(ep),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var u=rp(r),o=rp(i),a=o[0]===u[0],c=o[o.length-1]===u[u.length-1],f=[];for(n=u.length-1;n>=0;--n)f.push(t[r[u[n]][2]]);for(n=+a;n<o.length-c;++n)f.push(t[r[o[n]][2]]);return f},up=function(t,n){for(var e,r,i=t.length,u=t[i-1],o=n[0],a=n[1],c=u[0],f=u[1],s=!1,l=0;l<i;++l)e=(u=t[l])[0],(r=u[1])>a!=f>a&&o<(c-e)*(a-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},op=function(t){for(var n,e,r=-1,i=t.length,u=t[i-1],o=u[0],a=u[1],c=0;++r<i;)n=o,e=a,n-=o=(u=t[r])[0],e-=a=u[1],c+=Math.sqrt(n*n+e*e);return c},ap=function(){return Math.random()},cp=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(ap),fp=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var u;if(null!=r)u=r,r=null;else do{r=2*n()-1,u=2*n()-1,i=r*r+u*u}while(!i||i>1);return t+e*u*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(ap),sp=function t(n){function e(){var t=fp.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(ap),lp=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(ap),hp=function t(n){function e(t){var e=lp.source(n)(t);return function(){return e()/t}}return e.source=t,e}(ap),dp=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(ap);function pp(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function vp(t,n){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(n).domain(t)}return this}var yp=Array.prototype,gp=yp.map,bp=yp.slice,_p={name:"implicit"};function mp(){var t=$u(),n=[],e=[],r=_p;function i(i){var u=i+"",o=t.get(u);if(!o){if(r!==_p)return r;t.set(u,o=n.push(i))}return e[(o-1)%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=$u();for(var r,u,o=-1,a=e.length;++o<a;)t.has(u=(r=e[o])+"")||t.set(u,n.push(r));return i},i.range=function(t){return arguments.length?(e=bp.call(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return mp(n,e).unknown(r)},pp.apply(i,arguments),i}function xp(){var t,n,e=mp().unknown(void 0),r=e.domain,i=e.range,u=[0,1],o=!1,a=0,c=0,f=.5;function s(){var e=r().length,s=u[1]<u[0],l=u[s-0],h=u[1-s];t=(h-l)/Math.max(1,e-a+2*c),o&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*f,n=t*(1-a),o&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(u=[+t[0],+t[1]],s()):u.slice()},e.rangeRound=function(t){return u=[+t[0],+t[1]],o=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(o=!!t,s()):o},e.padding=function(t){return arguments.length?(a=Math.min(1,c=+t),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.min(1,t),s()):a},e.paddingOuter=function(t){return arguments.length?(c=+t,s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return xp(r(),u).round(o).paddingInner(a).paddingOuter(c).align(f)},pp.apply(s(),arguments)}function wp(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(xp.apply(null,arguments).paddingInner(1))}var Mp=function(t){return function(){return t}},kp=function(t){return+t},Sp=[0,1];function Np(t){return t}function Ap(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Mp(isNaN(n)?NaN:.5)}function Ep(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function Tp(t,n,e){var r=t[0],i=t[1],u=n[0],o=n[1];return i<r?(r=Ap(i,r),u=e(o,u)):(r=Ap(r,i),u=e(u,o)),function(t){return u(r(t))}}function Cp(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),u=new Array(r),o=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++o<r;)i[o]=Ap(t[o],t[o+1]),u[o]=e(n[o],n[o+1]);return function(n){var e=c(t,n,1,r)-1;return u[e](i[e](n))}}function Pp(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function zp(){var t,n,e,r,i,u,o=Sp,a=Sp,c=We,f=Np;function s(){return r=Math.min(o.length,a.length)>2?Cp:Tp,i=u=null,l}function l(n){return isNaN(n=+n)?e:(i||(i=r(o.map(t),a,c)))(t(f(n)))}return l.invert=function(e){return f(n((u||(u=r(a,o.map(t),Ie)))(e)))},l.domain=function(t){return arguments.length?(o=gp.call(t,kp),f===Np||(f=Ep(o)),s()):o.slice()},l.range=function(t){return arguments.length?(a=bp.call(t),s()):a.slice()},l.rangeRound=function(t){return a=bp.call(t),c=Qe,s()},l.clamp=function(t){return arguments.length?(f=t?Ep(o):Np,l):f!==Np},l.interpolate=function(t){return arguments.length?(c=t,s()):c},l.unknown=function(t){return arguments.length?(e=t,l):e},function(e,r){return t=e,n=r,s()}}function Op(t,n){return zp()(t,n)}var Rp=function(t,n,e,r){var i,u=E(t,n,e);switch((r=Ra(null==r?",f":r)).type){case"s":var o=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(i=Wa(u,o))||(r.precision=i),Ia(r,o);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=$a(u,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=Va(u))||(r.precision=i-2*("%"===r.type))}return ja(r)};function Lp(t){var n=t.domain;return t.ticks=function(t){var e=n();return N(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return Rp(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),u=0,o=i.length-1,a=i[u],c=i[o];return c<a&&(r=a,a=c,c=r,r=u,u=o,o=r),(r=A(a,c,e))>0?r=A(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=A(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[u]=Math.floor(a/r)*r,i[o]=Math.ceil(c/r)*r,n(i)):r<0&&(i[u]=Math.ceil(a*r)/r,i[o]=Math.floor(c*r)/r,n(i)),t},t}function Dp(){var t=Op(Np,Np);return t.copy=function(){return Pp(t,Dp())},pp.apply(t,arguments),Lp(t)}function qp(t){var n;function e(t){return isNaN(t=+t)?n:t}return e.invert=e,e.domain=e.range=function(n){return arguments.length?(t=gp.call(n,kp),e):t.slice()},e.unknown=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return qp(t).unknown(n)},t=arguments.length?gp.call(t,kp):[0,1],Lp(e)}var jp=function(t,n){var e,r=0,i=(t=t.slice()).length-1,u=t[r],o=t[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),t[r]=n.floor(u),t[i]=n.ceil(o),t};function Ip(t){return Math.log(t)}function Up(t){return Math.exp(t)}function Fp(t){return-Math.log(-t)}function Bp(t){return-Math.exp(-t)}function Yp(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Hp(t){return function(n){return-t(-n)}}function Xp(t){var n,e,r=t(Ip,Up),i=r.domain,u=10;function o(){return n=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}(u),e=function(t){return 10===t?Yp:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}(u),i()[0]<0?(n=Hp(n),e=Hp(e),t(Fp,Bp)):t(Ip,Up),r}return r.base=function(t){return arguments.length?(u=+t,o()):u},r.domain=function(t){return arguments.length?(i(t),o()):i()},r.ticks=function(t){var r,o=i(),a=o[0],c=o[o.length-1];(r=c<a)&&(h=a,a=c,c=h);var f,s,l,h=n(a),d=n(c),p=null==t?10:+t,v=[];if(!(u%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,f=e(h);s<u;++s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=u-1,f=e(h);s>=1;--s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else v=N(h,d,Math.min(d-h,p)).map(e);return r?v.reverse():v},r.tickFormat=function(t,i){if(null==i&&(i=10===u?".0e":","),"function"!=typeof i&&(i=ja(i)),t===1/0)return i;null==t&&(t=10);var o=Math.max(1,u*t/r.ticks().length);return function(t){var r=t/e(Math.round(n(t)));return r*u<u-.5&&(r*=u),r<=o?i(t):""}},r.nice=function(){return i(jp(i(),{floor:function(t){return e(Math.floor(n(t)))},ceil:function(t){return e(Math.ceil(n(t)))}}))},r}function Gp(){var t=Xp(zp()).domain([1,10]);return t.copy=function(){return Pp(t,Gp()).base(t.base())},pp.apply(t,arguments),t}function Vp(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function Wp(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function $p(t){var n=1,e=t(Vp(n),Wp(n));return e.constant=function(e){return arguments.length?t(Vp(n=+e),Wp(n)):n},Lp(e)}function Zp(){var t=$p(zp());return t.copy=function(){return Pp(t,Zp()).constant(t.constant())},pp.apply(t,arguments)}function Qp(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function Jp(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function Kp(t){return t<0?-t*t:t*t}function tv(t){var n=t(Np,Np),e=1;return n.exponent=function(n){return arguments.length?1===(e=+n)?t(Np,Np):.5===e?t(Jp,Kp):t(Qp(e),Qp(1/e)):e},Lp(n)}function nv(){var t=tv(zp());return t.copy=function(){return Pp(t,nv()).exponent(t.exponent())},pp.apply(t,arguments),t}function ev(){return nv.apply(null,arguments).exponent(.5)}function rv(){var t,n=[],e=[],i=[];function u(){var t=0,r=Math.max(1,e.length);for(i=new Array(r-1);++t<r;)i[t-1]=P(n,t/r);return o}function o(n){return isNaN(n=+n)?t:e[c(i,n)]}return o.invertExtent=function(t){var r=e.indexOf(t);return r<0?[NaN,NaN]:[r>0?i[r-1]:n[0],r<i.length?i[r]:n[n.length-1]]},o.domain=function(t){if(!arguments.length)return n.slice();n=[];for(var e,i=0,o=t.length;i<o;++i)null==(e=t[i])||isNaN(e=+e)||n.push(e);return n.sort(r),u()},o.range=function(t){return arguments.length?(e=bp.call(t),u()):e.slice()},o.unknown=function(n){return arguments.length?(t=n,o):t},o.quantiles=function(){return i.slice()},o.copy=function(){return rv().domain(n).range(e).unknown(t)},pp.apply(o,arguments)}function iv(){var t,n=0,e=1,r=1,i=[.5],u=[0,1];function o(n){return n<=n?u[c(i,n,0,r)]:t}function a(){var t=-1;for(i=new Array(r);++t<r;)i[t]=((t+1)*e-(t-r)*n)/(r+1);return o}return o.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],a()):[n,e]},o.range=function(t){return arguments.length?(r=(u=bp.call(t)).length-1,a()):u.slice()},o.invertExtent=function(t){var o=u.indexOf(t);return o<0?[NaN,NaN]:o<1?[n,i[0]]:o>=r?[i[r-1],e]:[i[o-1],i[o]]},o.unknown=function(n){return arguments.length?(t=n,o):o},o.thresholds=function(){return i.slice()},o.copy=function(){return iv().domain([n,e]).range(u).unknown(t)},pp.apply(Lp(o),arguments)}function uv(){var t,n=[.5],e=[0,1],r=1;function i(i){return i<=i?e[c(n,i,0,r)]:t}return i.domain=function(t){return arguments.length?(n=bp.call(t),r=Math.min(n.length,e.length-1),i):n.slice()},i.range=function(t){return arguments.length?(e=bp.call(t),r=Math.min(n.length,e.length-1),i):e.slice()},i.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},i.unknown=function(n){return arguments.length?(t=n,i):t},i.copy=function(){return uv().domain(n).range(e).unknown(t)},pp.apply(i,arguments)}var ov=new Date,av=new Date;function cv(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,u){var o,a=[];if(e=i.ceil(e),u=null==u?1:Math.floor(u),!(e<r&&u>0))return a;do{a.push(o=new Date(+e)),n(e,u),t(e)}while(o<e&&e<r);return a},i.filter=function(e){return cv(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return ov.setTime(+n),av.setTime(+r),t(ov),t(av),Math.floor(e(ov,av))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var fv=cv(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});fv.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?cv(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):fv:null};var sv=fv,lv=fv.range,hv=6e4,dv=6048e5,pv=cv(function(t){t.setTime(t-t.getMilliseconds())},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),vv=pv,yv=pv.range,gv=cv(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())},function(t,n){t.setTime(+t+n*hv)},function(t,n){return(n-t)/hv},function(t){return t.getMinutes()}),bv=gv,_v=gv.range,mv=cv(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-t.getMinutes()*hv)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),xv=mv,wv=mv.range,Mv=cv(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*hv)/864e5},function(t){return t.getDate()-1}),kv=Mv,Sv=Mv.range;function Nv(t){return cv(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*hv)/dv})}var Av=Nv(0),Ev=Nv(1),Tv=Nv(2),Cv=Nv(3),Pv=Nv(4),zv=Nv(5),Ov=Nv(6),Rv=Av.range,Lv=Ev.range,Dv=Tv.range,qv=Cv.range,jv=Pv.range,Iv=zv.range,Uv=Ov.range,Fv=cv(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Bv=Fv,Yv=Fv.range,Hv=cv(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Hv.every=function(t){return isFinite(t=Math.floor(t))&&t>0?cv(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Xv=Hv,Gv=Hv.range,Vv=cv(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*hv)},function(t,n){return(n-t)/hv},function(t){return t.getUTCMinutes()}),Wv=Vv,$v=Vv.range,Zv=cv(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Qv=Zv,Jv=Zv.range,Kv=cv(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),ty=Kv,ny=Kv.range;function ey(t){return cv(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/dv})}var ry=ey(0),iy=ey(1),uy=ey(2),oy=ey(3),ay=ey(4),cy=ey(5),fy=ey(6),sy=ry.range,ly=iy.range,hy=uy.range,dy=oy.range,py=ay.range,vy=cy.range,yy=fy.range,gy=cv(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),by=gy,_y=gy.range,my=cv(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});my.every=function(t){return isFinite(t=Math.floor(t))&&t>0?cv(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var xy=my,wy=my.range;function My(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function ky(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Sy(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function Ny(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,u=t.days,o=t.shortDays,a=t.months,c=t.shortMonths,f=jy(i),s=Iy(i),l=jy(u),h=Iy(u),d=jy(o),p=Iy(o),v=jy(a),y=Iy(a),g=jy(c),b=Iy(c),_={a:function(t){return o[t.getDay()]},A:function(t){return u[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:ug,e:ug,f:sg,H:og,I:ag,j:cg,L:fg,m:lg,M:hg,p:function(t){return i[+(t.getHours()>=12)]},Q:Ug,s:Fg,S:dg,u:pg,U:vg,V:yg,w:gg,W:bg,x:null,X:null,y:_g,Y:mg,Z:xg,"%":Ig},m={a:function(t){return o[t.getUTCDay()]},A:function(t){return u[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:wg,e:wg,f:Ag,H:Mg,I:kg,j:Sg,L:Ng,m:Eg,M:Tg,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:Ug,s:Fg,S:Cg,u:Pg,U:zg,V:Og,w:Rg,W:Lg,x:null,X:null,y:Dg,Y:qg,Z:jg,"%":Ig},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=b[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=y[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return k(t,n,e,r)},d:$y,e:$y,f:ng,H:Qy,I:Qy,j:Zy,L:tg,m:Wy,M:Jy,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:rg,s:ig,S:Ky,u:Fy,U:By,V:Yy,w:Uy,W:Hy,x:function(t,n,r){return k(t,e,n,r)},X:function(t,n,e){return k(t,r,n,e)},y:Gy,Y:Xy,Z:Vy,"%":eg};function w(t,n){return function(e){var r,i,u,o=[],a=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===t.charCodeAt(a)&&(o.push(t.slice(c,a)),null!=(i=zy[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(u=n[r])&&(r=u(e,i)),o.push(r),c=a+1);return o.push(t.slice(c,a)),o.join("")}}function M(t,n){return function(e){var r,i,u=Sy(1900);if(k(u,t,e+="",0)!=e.length)return null;if("Q"in u)return new Date(u.Q);if("p"in u&&(u.H=u.H%12+12*u.p),"V"in u){if(u.V<1||u.V>53)return null;"w"in u||(u.w=1),"Z"in u?(i=(r=ky(Sy(u.y))).getUTCDay(),r=i>4||0===i?iy.ceil(r):iy(r),r=ty.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(i=(r=n(Sy(u.y))).getDay(),r=i>4||0===i?Ev.ceil(r):Ev(r),r=kv.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else("W"in u||"U"in u)&&("w"in u||(u.w="u"in u?u.u%7:"W"in u?1:0),i="Z"in u?ky(Sy(u.y)).getUTCDay():n(Sy(u.y)).getDay(),u.m=0,u.d="W"in u?(u.w+6)%7+7*u.W-(i+5)%7:u.w+7*u.U-(i+6)%7);return"Z"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,ky(u)):n(u)}}function k(t,n,e,r){for(var i,u,o=0,a=n.length,c=e.length;o<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(u=x[i in zy?n.charAt(o++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return _.x=w(e,_),_.X=w(r,_),_.c=w(n,_),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",_);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",My);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,ky);return n.toString=function(){return t},n}}}var Ay,Ey,Ty,Cy,Py,zy={"-":"",_:" ",0:"0"},Oy=/^\s*\d+/,Ry=/^%/,Ly=/[\\^$*+?|[\]().{}]/g;function Dy(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function qy(t){return t.replace(Ly,"\\$&")}function jy(t){return new RegExp("^(?:"+t.map(qy).join("|")+")","i")}function Iy(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Uy(t,n,e){var r=Oy.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Fy(t,n,e){var r=Oy.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function By(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Yy(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Hy(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Xy(t,n,e){var r=Oy.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Gy(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Vy(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Wy(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function $y(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Zy(t,n,e){var r=Oy.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Qy(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Jy(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Ky(t,n,e){var r=Oy.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function tg(t,n,e){var r=Oy.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function ng(t,n,e){var r=Oy.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function eg(t,n,e){var r=Ry.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function rg(t,n,e){var r=Oy.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function ig(t,n,e){var r=Oy.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function ug(t,n){return Dy(t.getDate(),n,2)}function og(t,n){return Dy(t.getHours(),n,2)}function ag(t,n){return Dy(t.getHours()%12||12,n,2)}function cg(t,n){return Dy(1+kv.count(Xv(t),t),n,3)}function fg(t,n){return Dy(t.getMilliseconds(),n,3)}function sg(t,n){return fg(t,n)+"000"}function lg(t,n){return Dy(t.getMonth()+1,n,2)}function hg(t,n){return Dy(t.getMinutes(),n,2)}function dg(t,n){return Dy(t.getSeconds(),n,2)}function pg(t){var n=t.getDay();return 0===n?7:n}function vg(t,n){return Dy(Av.count(Xv(t),t),n,2)}function yg(t,n){var e=t.getDay();return t=e>=4||0===e?Pv(t):Pv.ceil(t),Dy(Pv.count(Xv(t),t)+(4===Xv(t).getDay()),n,2)}function gg(t){return t.getDay()}function bg(t,n){return Dy(Ev.count(Xv(t),t),n,2)}function _g(t,n){return Dy(t.getFullYear()%100,n,2)}function mg(t,n){return Dy(t.getFullYear()%1e4,n,4)}function xg(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Dy(n/60|0,"0",2)+Dy(n%60,"0",2)}function wg(t,n){return Dy(t.getUTCDate(),n,2)}function Mg(t,n){return Dy(t.getUTCHours(),n,2)}function kg(t,n){return Dy(t.getUTCHours()%12||12,n,2)}function Sg(t,n){return Dy(1+ty.count(xy(t),t),n,3)}function Ng(t,n){return Dy(t.getUTCMilliseconds(),n,3)}function Ag(t,n){return Ng(t,n)+"000"}function Eg(t,n){return Dy(t.getUTCMonth()+1,n,2)}function Tg(t,n){return Dy(t.getUTCMinutes(),n,2)}function Cg(t,n){return Dy(t.getUTCSeconds(),n,2)}function Pg(t){var n=t.getUTCDay();return 0===n?7:n}function zg(t,n){return Dy(ry.count(xy(t),t),n,2)}function Og(t,n){var e=t.getUTCDay();return t=e>=4||0===e?ay(t):ay.ceil(t),Dy(ay.count(xy(t),t)+(4===xy(t).getUTCDay()),n,2)}function Rg(t){return t.getUTCDay()}function Lg(t,n){return Dy(iy.count(xy(t),t),n,2)}function Dg(t,n){return Dy(t.getUTCFullYear()%100,n,2)}function qg(t,n){return Dy(t.getUTCFullYear()%1e4,n,4)}function jg(){return"+0000"}function Ig(){return"%"}function Ug(t){return+t}function Fg(t){return Math.floor(+t/1e3)}function Bg(t){return Ay=Ny(t),Ey=Ay.format,Ty=Ay.parse,Cy=Ay.utcFormat,Py=Ay.utcParse,Ay}Bg({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Yg=Date.prototype.toISOString?function(t){return t.toISOString()}:Cy("%Y-%m-%dT%H:%M:%S.%LZ");var Hg=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:Py("%Y-%m-%dT%H:%M:%S.%LZ"),Xg=1e3,Gg=60*Xg,Vg=60*Gg,Wg=24*Vg,$g=7*Wg,Zg=30*Wg,Qg=365*Wg;function Jg(t){return new Date(t)}function Kg(t){return t instanceof Date?+t:+new Date(+t)}function tb(t,n,e,r,u,o,a,c,f){var s=Op(Np,Np),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),v=f("%I:%M"),y=f("%I %p"),g=f("%a %d"),b=f("%b %d"),_=f("%B"),m=f("%Y"),x=[[a,1,Xg],[a,5,5*Xg],[a,15,15*Xg],[a,30,30*Xg],[o,1,Gg],[o,5,5*Gg],[o,15,15*Gg],[o,30,30*Gg],[u,1,Vg],[u,3,3*Vg],[u,6,6*Vg],[u,12,12*Vg],[r,1,Wg],[r,2,2*Wg],[e,1,$g],[n,1,Zg],[n,3,3*Zg],[t,1,Qg]];function w(i){return(a(i)<i?d:o(i)<i?p:u(i)<i?v:r(i)<i?y:n(i)<i?e(i)<i?g:b:t(i)<i?_:m)(i)}function M(n,e,r,u){if(null==n&&(n=10),"number"==typeof n){var o=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,o);a===x.length?(u=E(e/Qg,r/Qg,n),n=t):a?(u=(a=x[o/x[a-1][2]<x[a][2]/o?a-1:a])[1],n=a[0]):(u=Math.max(E(e,r,n),1),n=c)}return null==u?n:n.every(u)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(gp.call(t,Kg)):h().map(Jg)},s.ticks=function(t,n){var e,r=h(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=M(t,i,u,n))?e.range(i,u+1):[],o?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:f(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(jp(e,t)):s},s.copy=function(){return Pp(s,tb(t,n,e,r,u,o,a,c,f))},s}var nb=function(){return pp.apply(tb(Xv,Bv,Av,kv,xv,bv,vv,sv,Ey).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},eb=function(){return pp.apply(tb(xy,by,ry,ty,Qv,Wv,vv,sv,Cy).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function rb(){var t,n,e,r,i,u=0,o=1,a=Np,c=!1;function f(n){return isNaN(n=+n)?i:a(0===e?.5:(n=(r(n)-t)*e,c?Math.max(0,Math.min(1,n)):n))}return f.domain=function(i){return arguments.length?(t=r(u=+i[0]),n=r(o=+i[1]),e=t===n?0:1/(n-t),f):[u,o]},f.clamp=function(t){return arguments.length?(c=!!t,f):c},f.interpolator=function(t){return arguments.length?(a=t,f):a},f.unknown=function(t){return arguments.length?(i=t,f):i},function(i){return r=i,t=i(u),n=i(o),e=t===n?0:1/(n-t),f}}function ib(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function ub(){var t=Lp(rb()(Np));return t.copy=function(){return ib(t,ub())},vp.apply(t,arguments)}function ob(){var t=Xp(rb()).domain([1,10]);return t.copy=function(){return ib(t,ob()).base(t.base())},vp.apply(t,arguments)}function ab(){var t=$p(rb());return t.copy=function(){return ib(t,ab()).constant(t.constant())},vp.apply(t,arguments)}function cb(){var t=tv(rb());return t.copy=function(){return ib(t,cb()).exponent(t.exponent())},vp.apply(t,arguments)}function fb(){return cb.apply(null,arguments).exponent(.5)}function sb(){var t=[],n=Np;function e(e){if(!isNaN(e=+e))return n((c(t,e)-1)/(t.length-1))}return e.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var i,u=0,o=n.length;u<o;++u)null==(i=n[u])||isNaN(i=+i)||t.push(i);return t.sort(r),e},e.interpolator=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return sb(n).domain(t)},vp.apply(e,arguments)}function lb(){var t,n,e,r,i,u,o,a=0,c=.5,f=1,s=Np,l=!1;function h(t){return isNaN(t=+t)?o:(t=.5+((t=+u(t))-n)*(t<n?r:i),s(l?Math.max(0,Math.min(1,t)):t))}return h.domain=function(o){return arguments.length?(t=u(a=+o[0]),n=u(c=+o[1]),e=u(f=+o[2]),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h):[a,c,f]},h.clamp=function(t){return arguments.length?(l=!!t,h):l},h.interpolator=function(t){return arguments.length?(s=t,h):s},h.unknown=function(t){return arguments.length?(o=t,h):o},function(o){return u=o,t=o(a),n=o(c),e=o(f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h}}function hb(){var t=Lp(lb()(Np));return t.copy=function(){return ib(t,hb())},vp.apply(t,arguments)}function db(){var t=Xp(lb()).domain([.1,1,10]);return t.copy=function(){return ib(t,db()).base(t.base())},vp.apply(t,arguments)}function pb(){var t=$p(lb());return t.copy=function(){return ib(t,pb()).constant(t.constant())},vp.apply(t,arguments)}function vb(){var t=tv(lb());return t.copy=function(){return ib(t,vb()).exponent(t.exponent())},vp.apply(t,arguments)}function yb(){return vb.apply(null,arguments).exponent(.5)}var gb=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e},bb=gb("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),_b=gb("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),mb=gb("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),xb=gb("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),wb=gb("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Mb=gb("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),kb=gb("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Sb=gb("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Nb=gb("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),Ab=function(t){return Le(t[t.length-1])},Eb=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(gb),Tb=Ab(Eb),Cb=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(gb),Pb=Ab(Cb),zb=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(gb),Ob=Ab(zb),Rb=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(gb),Lb=Ab(Rb),Db=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(gb),qb=Ab(Db),jb=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(gb),Ib=Ab(jb),Ub=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(gb),Fb=Ab(Ub),Bb=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(gb),Yb=Ab(Bb),Hb=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(gb),Xb=Ab(Hb),Gb=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(gb),Vb=Ab(Gb),Wb=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(gb),$b=Ab(Wb),Zb=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(gb),Qb=Ab(Zb),Jb=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(gb),Kb=Ab(Jb),t_=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(gb),n_=Ab(t_),e_=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(gb),r_=Ab(e_),i_=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(gb),u_=Ab(i_),o_=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(gb),a_=Ab(o_),c_=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(gb),f_=Ab(c_),s_=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(gb),l_=Ab(s_),h_=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(gb),d_=Ab(h_),p_=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(gb),v_=Ab(p_),y_=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(gb),g_=Ab(y_),b_=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(gb),__=Ab(b_),m_=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(gb),x_=Ab(m_),w_=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(gb),M_=Ab(w_),k_=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(gb),S_=Ab(k_),N_=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(gb),A_=Ab(N_),E_=yr(Me(300,.5,0),Me(-240,.5,1)),T_=yr(Me(-100,.75,.35),Me(80,1.5,.8)),C_=yr(Me(260,.75,.35),Me(80,1.5,.8)),P_=Me(),z_=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return P_.h=360*t-100,P_.s=1.5-1.5*n,P_.l=.8-.9*n,P_+""},O_=Yn(),R_=Math.PI/3,L_=2*Math.PI/3,D_=function(t){var n;return t=(.5-t)*Math.PI,O_.r=255*(n=Math.sin(t))*n,O_.g=255*(n=Math.sin(t+R_))*n,O_.b=255*(n=Math.sin(t+L_))*n,O_+""};function q_(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var j_=q_(gb("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),I_=q_(gb("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),U_=q_(gb("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),F_=q_(gb("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),B_=function(t){return function(){return t}},Y_=Math.abs,H_=Math.atan2,X_=Math.cos,G_=Math.max,V_=Math.min,W_=Math.sin,$_=Math.sqrt,Z_=1e-12,Q_=Math.PI,J_=Q_/2,K_=2*Q_;function tm(t){return t>=1?J_:t<=-1?-J_:Math.asin(t)}function nm(t){return t.innerRadius}function em(t){return t.outerRadius}function rm(t){return t.startAngle}function im(t){return t.endAngle}function um(t){return t&&t.padAngle}function om(t,n,e,r,i,u,o){var a=t-e,c=n-r,f=(o?u:-u)/$_(a*a+c*c),s=f*c,l=-f*a,h=t+s,d=n+l,p=e+s,v=r+l,y=(h+p)/2,g=(d+v)/2,b=p-h,_=v-d,m=b*b+_*_,x=i-u,w=h*v-p*d,M=(_<0?-1:1)*$_(G_(0,x*x*m-w*w)),k=(w*_-b*M)/m,S=(-w*b-_*M)/m,N=(w*_+b*M)/m,A=(-w*b+_*M)/m,E=k-y,T=S-g,C=N-y,P=A-g;return E*E+T*T>C*C+P*P&&(k=N,S=A),{cx:k,cy:S,x01:-s,y01:-l,x11:k*(i/x-1),y11:S*(i/x-1)}}var am=function(){var t=nm,n=em,e=B_(0),r=null,i=rm,u=im,o=um,a=null;function c(){var c,f,s,l=+t.apply(this,arguments),h=+n.apply(this,arguments),d=i.apply(this,arguments)-J_,p=u.apply(this,arguments)-J_,v=Y_(p-d),y=p>d;if(a||(a=c=Uu()),h<l&&(f=h,h=l,l=f),h>Z_)if(v>K_-Z_)a.moveTo(h*X_(d),h*W_(d)),a.arc(0,0,h,d,p,!y),l>Z_&&(a.moveTo(l*X_(p),l*W_(p)),a.arc(0,0,l,p,d,y));else{var g,b,_=d,m=p,x=d,w=p,M=v,k=v,S=o.apply(this,arguments)/2,N=S>Z_&&(r?+r.apply(this,arguments):$_(l*l+h*h)),A=V_(Y_(h-l)/2,+e.apply(this,arguments)),E=A,T=A;if(N>Z_){var C=tm(N/l*W_(S)),P=tm(N/h*W_(S));(M-=2*C)>Z_?(x+=C*=y?1:-1,w-=C):(M=0,x=w=(d+p)/2),(k-=2*P)>Z_?(_+=P*=y?1:-1,m-=P):(k=0,_=m=(d+p)/2)}var z=h*X_(_),O=h*W_(_),R=l*X_(w),L=l*W_(w);if(A>Z_){var D,q=h*X_(m),j=h*W_(m),I=l*X_(x),U=l*W_(x);if(v<Q_&&(D=function(t,n,e,r,i,u,o,a){var c=e-t,f=r-n,s=o-i,l=a-u,h=l*c-s*f;if(!(h*h<Z_))return[t+(h=(s*(n-u)-l*(t-i))/h)*c,n+h*f]}(z,O,I,U,q,j,R,L))){var F=z-D[0],B=O-D[1],Y=q-D[0],H=j-D[1],X=1/W_(((s=(F*Y+B*H)/($_(F*F+B*B)*$_(Y*Y+H*H)))>1?0:s<-1?Q_:Math.acos(s))/2),G=$_(D[0]*D[0]+D[1]*D[1]);E=V_(A,(l-G)/(X-1)),T=V_(A,(h-G)/(X+1))}}k>Z_?T>Z_?(g=om(I,U,z,O,h,T,y),b=om(q,j,R,L,h,T,y),a.moveTo(g.cx+g.x01,g.cy+g.y01),T<A?a.arc(g.cx,g.cy,T,H_(g.y01,g.x01),H_(b.y01,b.x01),!y):(a.arc(g.cx,g.cy,T,H_(g.y01,g.x01),H_(g.y11,g.x11),!y),a.arc(0,0,h,H_(g.cy+g.y11,g.cx+g.x11),H_(b.cy+b.y11,b.cx+b.x11),!y),a.arc(b.cx,b.cy,T,H_(b.y11,b.x11),H_(b.y01,b.x01),!y))):(a.moveTo(z,O),a.arc(0,0,h,_,m,!y)):a.moveTo(z,O),l>Z_&&M>Z_?E>Z_?(g=om(R,L,q,j,l,-E,y),b=om(z,O,I,U,l,-E,y),a.lineTo(g.cx+g.x01,g.cy+g.y01),E<A?a.arc(g.cx,g.cy,E,H_(g.y01,g.x01),H_(b.y01,b.x01),!y):(a.arc(g.cx,g.cy,E,H_(g.y01,g.x01),H_(g.y11,g.x11),!y),a.arc(0,0,l,H_(g.cy+g.y11,g.cx+g.x11),H_(b.cy+b.y11,b.cx+b.x11),y),a.arc(b.cx,b.cy,E,H_(b.y11,b.x11),H_(b.y01,b.x01),!y))):a.arc(0,0,l,w,x,y):a.lineTo(R,L)}else a.moveTo(0,0);if(a.closePath(),c)return a=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +u.apply(this,arguments))/2-Q_/2;return[X_(r)*e,W_(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:B_(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:B_(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:B_(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:B_(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:B_(+t),c):i},c.endAngle=function(t){return arguments.length?(u="function"==typeof t?t:B_(+t),c):u},c.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:B_(+t),c):o},c.context=function(t){return arguments.length?(a=null==t?null:t,c):a},c};function cm(t){this._context=t}cm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var fm=function(t){return new cm(t)};function sm(t){return t[0]}function lm(t){return t[1]}var hm=function(){var t=sm,n=lm,e=B_(!0),r=null,i=fm,u=null;function o(o){var a,c,f,s=o.length,l=!1;for(null==r&&(u=i(f=Uu())),a=0;a<=s;++a)!(a<s&&e(c=o[a],a,o))===l&&((l=!l)?u.lineStart():u.lineEnd()),l&&u.point(+t(c,a,o),+n(c,a,o));if(f)return u=null,f+""||null}return o.x=function(n){return arguments.length?(t="function"==typeof n?n:B_(+n),o):t},o.y=function(t){return arguments.length?(n="function"==typeof t?t:B_(+t),o):n},o.defined=function(t){return arguments.length?(e="function"==typeof t?t:B_(!!t),o):e},o.curve=function(t){return arguments.length?(i=t,null!=r&&(u=i(r)),o):i},o.context=function(t){return arguments.length?(null==t?r=u=null:u=i(r=t),o):r},o},dm=function(){var t=sm,n=null,e=B_(0),r=lm,i=B_(!0),u=null,o=fm,a=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,y=new Array(p),g=new Array(p);for(null==u&&(a=o(d=Uu())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=f-1;l>=s;--l)a.point(y[l],g[l]);a.lineEnd(),a.areaEnd()}v&&(y[f]=+t(h,f,c),g[f]=+e(h,f,c),a.point(n?+n(h,f,c):y[f],r?+r(h,f,c):g[f]))}if(d)return a=null,d+""||null}function f(){return hm().defined(i).curve(o).context(u)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:B_(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:B_(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:B_(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:B_(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:B_(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:B_(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:B_(!!t),c):i},c.curve=function(t){return arguments.length?(o=t,null!=u&&(a=o(u)),c):o},c.context=function(t){return arguments.length?(null==t?u=a=null:a=o(u=t),c):u},c},pm=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},vm=function(t){return t},ym=function(){var t=vm,n=pm,e=null,r=B_(0),i=B_(K_),u=B_(0);function o(o){var a,c,f,s,l,h=o.length,d=0,p=new Array(h),v=new Array(h),y=+r.apply(this,arguments),g=Math.min(K_,Math.max(-K_,i.apply(this,arguments)-y)),b=Math.min(Math.abs(g)/h,u.apply(this,arguments)),_=b*(g<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+t(o[a],a,o))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(o[t],o[n])}),a=0,f=d?(g-h*_)/d:0;a<h;++a,y=s)c=p[a],s=y+((l=v[c])>0?l*f:0)+_,v[c]={data:o[c],index:a,value:l,startAngle:y,endAngle:s,padAngle:b};return v}return o.value=function(n){return arguments.length?(t="function"==typeof n?n:B_(+n),o):t},o.sortValues=function(t){return arguments.length?(n=t,e=null,o):n},o.sort=function(t){return arguments.length?(e=t,n=null,o):e},o.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:B_(+t),o):r},o.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:B_(+t),o):i},o.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:B_(+t),o):u},o},gm=_m(fm);function bm(t){this._curve=t}function _m(t){function n(n){return new bm(t(n))}return n._curve=t,n}function mm(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(_m(t)):n()._curve},t}bm.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var xm=function(){return mm(hm().curve(gm))},wm=function(){var t=dm().curve(gm),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,u=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return mm(e())},delete t.lineX0,t.lineEndAngle=function(){return mm(r())},delete t.lineX1,t.lineInnerRadius=function(){return mm(i())},delete t.lineY0,t.lineOuterRadius=function(){return mm(u())},delete t.lineY1,t.curve=function(t){return arguments.length?n(_m(t)):n()._curve},t},Mm=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},km=Array.prototype.slice;function Sm(t){return t.source}function Nm(t){return t.target}function Am(t){var n=Sm,e=Nm,r=sm,i=lm,u=null;function o(){var o,a=km.call(arguments),c=n.apply(this,a),f=e.apply(this,a);if(u||(u=o=Uu()),t(u,+r.apply(this,(a[0]=c,a)),+i.apply(this,a),+r.apply(this,(a[0]=f,a)),+i.apply(this,a)),o)return u=null,o+""||null}return o.source=function(t){return arguments.length?(n=t,o):n},o.target=function(t){return arguments.length?(e=t,o):e},o.x=function(t){return arguments.length?(r="function"==typeof t?t:B_(+t),o):r},o.y=function(t){return arguments.length?(i="function"==typeof t?t:B_(+t),o):i},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o}function Em(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function Tm(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function Cm(t,n,e,r,i){var u=Mm(n,e),o=Mm(n,e=(e+i)/2),a=Mm(r,e),c=Mm(r,i);t.moveTo(u[0],u[1]),t.bezierCurveTo(o[0],o[1],a[0],a[1],c[0],c[1])}function Pm(){return Am(Em)}function zm(){return Am(Tm)}function Om(){var t=Am(Cm);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var Rm={draw:function(t,n){var e=Math.sqrt(n/Q_);t.moveTo(e,0),t.arc(0,0,e,0,K_)}},Lm={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},Dm=Math.sqrt(1/3),qm=2*Dm,jm={draw:function(t,n){var e=Math.sqrt(n/qm),r=e*Dm;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},Im=Math.sin(Q_/10)/Math.sin(7*Q_/10),Um=Math.sin(K_/10)*Im,Fm=-Math.cos(K_/10)*Im,Bm={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=Um*e,i=Fm*e;t.moveTo(0,-e),t.lineTo(r,i);for(var u=1;u<5;++u){var o=K_*u/5,a=Math.cos(o),c=Math.sin(o);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},Ym={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},Hm=Math.sqrt(3),Xm={draw:function(t,n){var e=-Math.sqrt(n/(3*Hm));t.moveTo(0,2*e),t.lineTo(-Hm*e,-e),t.lineTo(Hm*e,-e),t.closePath()}},Gm=Math.sqrt(3)/2,Vm=1/Math.sqrt(12),Wm=3*(Vm/2+1),$m={draw:function(t,n){var e=Math.sqrt(n/Wm),r=e/2,i=e*Vm,u=r,o=e*Vm+e,a=-u,c=o;t.moveTo(r,i),t.lineTo(u,o),t.lineTo(a,c),t.lineTo(-.5*r-Gm*i,Gm*r+-.5*i),t.lineTo(-.5*u-Gm*o,Gm*u+-.5*o),t.lineTo(-.5*a-Gm*c,Gm*a+-.5*c),t.lineTo(-.5*r+Gm*i,-.5*i-Gm*r),t.lineTo(-.5*u+Gm*o,-.5*o-Gm*u),t.lineTo(-.5*a+Gm*c,-.5*c-Gm*a),t.closePath()}},Zm=[Rm,Lm,jm,Ym,Bm,Xm,$m],Qm=function(){var t=B_(Rm),n=B_(64),e=null;function r(){var r;if(e||(e=r=Uu()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:B_(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:B_(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},Jm=function(){};function Km(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function tx(t){this._context=t}tx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Km(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Km(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var nx=function(t){return new tx(t)};function ex(t){this._context=t}ex.prototype={areaStart:Jm,areaEnd:Jm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Km(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var rx=function(t){return new ex(t)};function ix(t){this._context=t}ix.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Km(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var ux=function(t){return new ix(t)};function ox(t,n){this._basis=new tx(t),this._beta=n}ox.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],u=n[0],o=t[e]-i,a=n[e]-u,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*o),this._beta*n[c]+(1-this._beta)*(u+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var ax=function t(n){function e(t){return 1===n?new tx(t):new ox(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function cx(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function fx(t,n){this._context=t,this._k=(1-n)/6}fx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:cx(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:cx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var sx=function t(n){function e(t){return new fx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function lx(t,n){this._context=t,this._k=(1-n)/6}lx.prototype={areaStart:Jm,areaEnd:Jm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:cx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var hx=function t(n){function e(t){return new lx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function dx(t,n){this._context=t,this._k=(1-n)/6}dx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:cx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var px=function t(n){function e(t){return new dx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function vx(t,n,e){var r=t._x1,i=t._y1,u=t._x2,o=t._y2;if(t._l01_a>Z_){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>Z_){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);u=(u*f+t._x1*t._l23_2a-n*t._l12_2a)/s,o=(o*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,u,o,t._x2,t._y2)}function yx(t,n){this._context=t,this._alpha=n}yx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:vx(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var gx=function t(n){function e(t){return n?new yx(t,n):new fx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function bx(t,n){this._context=t,this._alpha=n}bx.prototype={areaStart:Jm,areaEnd:Jm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:vx(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var _x=function t(n){function e(t){return n?new bx(t,n):new lx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function mx(t,n){this._context=t,this._alpha=n}mx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:vx(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var xx=function t(n){function e(t){return n?new mx(t,n):new dx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function wx(t){this._context=t}wx.prototype={areaStart:Jm,areaEnd:Jm,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var Mx=function(t){return new wx(t)};function kx(t){return t<0?-1:1}function Sx(t,n,e){var r=t._x1-t._x0,i=n-t._x1,u=(t._y1-t._y0)/(r||i<0&&-0),o=(e-t._y1)/(i||r<0&&-0),a=(u*i+o*r)/(r+i);return(kx(u)+kx(o))*Math.min(Math.abs(u),Math.abs(o),.5*Math.abs(a))||0}function Nx(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Ax(t,n,e){var r=t._x0,i=t._y0,u=t._x1,o=t._y1,a=(u-r)/3;t._context.bezierCurveTo(r+a,i+a*n,u-a,o-a*e,u,o)}function Ex(t){this._context=t}function Tx(t){this._context=new Cx(t)}function Cx(t){this._context=t}function Px(t){return new Ex(t)}function zx(t){return new Tx(t)}function Ox(t){this._context=t}function Rx(t){var n,e,r=t.length-1,i=new Array(r),u=new Array(r),o=new Array(r);for(i[0]=0,u[0]=2,o[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,u[n]=4,o[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,u[r-1]=7,o[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/u[n-1],u[n]-=e,o[n]-=e*o[n-1];for(i[r-1]=o[r-1]/u[r-1],n=r-2;n>=0;--n)i[n]=(o[n]-i[n+1])/u[n];for(u[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)u[n]=2*t[n+1]-i[n+1];return[i,u]}Ex.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Ax(this,this._t0,Nx(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Ax(this,Nx(this,e=Sx(this,t,n)),e);break;default:Ax(this,this._t0,e=Sx(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Tx.prototype=Object.create(Ex.prototype)).point=function(t,n){Ex.prototype.point.call(this,n,t)},Cx.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,u){this._context.bezierCurveTo(n,t,r,e,u,i)}},Ox.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=Rx(t),i=Rx(n),u=0,o=1;o<e;++u,++o)this._context.bezierCurveTo(r[0][u],i[0][u],r[1][u],i[1][u],t[o],n[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Lx=function(t){return new Ox(t)};function Dx(t,n){this._context=t,this._t=n}Dx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var qx=function(t){return new Dx(t,.5)};function jx(t){return new Dx(t,0)}function Ix(t){return new Dx(t,1)}var Ux=function(t,n){if((i=t.length)>1)for(var e,r,i,u=1,o=t[n[0]],a=o.length;u<i;++u)for(r=o,o=t[n[u]],e=0;e<a;++e)o[e][1]+=o[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},Fx=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function Bx(t,n){return t[n]}var Yx=function(){var t=B_([]),n=Fx,e=Ux,r=Bx;function i(i){var u,o,a=t.apply(this,arguments),c=i.length,f=a.length,s=new Array(f);for(u=0;u<f;++u){for(var l,h=a[u],d=s[u]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(u=0,o=n(s);u<f;++u)s[o[u]].index=u;return e(s,o),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:B_(km.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:B_(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?Fx:"function"==typeof t?t:B_(km.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?Ux:t,i):e},i},Hx=function(t,n){if((r=t.length)>0){for(var e,r,i,u=0,o=t[0].length;u<o;++u){for(i=e=0;e<r;++e)i+=t[e][u][1]||0;if(i)for(e=0;e<r;++e)t[e][u][1]/=i}Ux(t,n)}},Xx=function(t,n){if((a=t.length)>1)for(var e,r,i,u,o,a,c=0,f=t[n[0]].length;c<f;++c)for(u=o=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=u,r[1]=u+=i):i<0?(r[1]=o,r[0]=o+=i):r[0]=u},Gx=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],u=i.length;r<u;++r){for(var o=0,a=0;o<e;++o)a+=t[o][r][1]||0;i[r][1]+=i[r][0]=-a/2}Ux(t,n)}},Vx=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,u=0,o=1;o<r;++o){for(var a=0,c=0,f=0;a<i;++a){for(var s=t[n[a]],l=s[o][1]||0,h=(l-(s[o-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[o][1]||0)-(p[o-1][1]||0)}c+=l,f+=h*l}e[o-1][1]+=e[o-1][0]=u,c&&(u-=f/c)}e[o-1][1]+=e[o-1][0]=u,Ux(t,n)}},Wx=function(t){var n=t.map($x);return Fx(t).sort(function(t,e){return n[t]-n[e]})};function $x(t){for(var n,e=-1,r=0,i=t.length,u=-1/0;++e<i;)(n=+t[e][1])>u&&(u=n,r=e);return r}var Zx=function(t){var n=t.map(Qx);return Fx(t).sort(function(t,e){return n[t]-n[e]})};function Qx(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var Jx=function(t){return Zx(t).reverse()},Kx=function(t){var n,e,r=t.length,i=t.map(Qx),u=Wx(t),o=0,a=0,c=[],f=[];for(n=0;n<r;++n)e=u[n],o<a?(o+=i[e],c.push(e)):(a+=i[e],f.push(e));return f.reverse().concat(c)},tw=function(t){return Fx(t).reverse()},nw=function(t){return function(){return t}};function ew(t){return t[0]}function rw(t){return t[1]}function iw(){this._=null}function uw(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function ow(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function aw(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function cw(t){for(;t.L;)t=t.L;return t}iw.prototype={constructor:iw,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=cw(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(ow(this,e),e=(t=e).U),e.C=!1,r.C=!0,aw(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(aw(this,e),e=(t=e).U),e.C=!1,r.C=!0,ow(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,u=t.L,o=t.R;if(e=u?o?cw(o):u:o,i?i.L===t?i.L=e:i.R=e:this._=e,u&&o?(r=e.C,e.C=t.C,e.L=u,u.U=e,e!==o?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=o,o.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,ow(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,aw(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,ow(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,aw(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,ow(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,aw(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var fw=iw;function sw(t,n,e,r){var i=[null,null],u=Rw.push(i)-1;return i.left=t,i.right=n,e&&hw(i,t,n,e),r&&hw(i,n,t,r),zw[t.index].halfedges.push(u),zw[n.index].halfedges.push(u),i}function lw(t,n,e){var r=[n,e];return r.left=t,r}function hw(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function dw(t,n,e,r,i){var u,o=t[0],a=t[1],c=o[0],f=o[1],s=0,l=1,h=a[0]-c,d=a[1]-f;if(u=n-c,h||!(u>0)){if(u/=h,h<0){if(u<s)return;u<l&&(l=u)}else if(h>0){if(u>l)return;u>s&&(s=u)}if(u=r-c,h||!(u<0)){if(u/=h,h<0){if(u>l)return;u>s&&(s=u)}else if(h>0){if(u<s)return;u<l&&(l=u)}if(u=e-f,d||!(u>0)){if(u/=d,d<0){if(u<s)return;u<l&&(l=u)}else if(d>0){if(u>l)return;u>s&&(s=u)}if(u=i-f,d||!(u<0)){if(u/=d,d<0){if(u>l)return;u>s&&(s=u)}else if(d>0){if(u<s)return;u<l&&(l=u)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function pw(t,n,e,r,i){var u=t[1];if(u)return!0;var o,a,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,y=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];u=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];u=[v,e]}}else if(a=y-(o=(l-d)/(p-h))*v,o<-1||o>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-a)/o,e];u=[(i-a)/o,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/o,i];u=[(e-a)/o,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,o*n+a];u=[r,o*r+a]}else{if(c){if(c[0]<n)return}else c=[r,o*r+a];u=[n,o*n+a]}return t[0]=c,t[1]=u,!0}function vw(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function yw(t,n){return n[+(n.left!==t.site)]}function gw(t,n){return n[+(n.left===t.site)]}var bw,_w=[];function mw(){uw(this),this.x=this.y=this.arc=this.site=this.cy=null}function xw(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,u=e.site;if(r!==u){var o=i[0],a=i[1],c=r[0]-o,f=r[1]-a,s=u[0]-o,l=u[1]-a,h=2*(c*l-f*s);if(!(h>=-Dw)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,y=(c*p-s*d)/h,g=_w.pop()||new mw;g.arc=t,g.site=i,g.x=v+o,g.y=(g.cy=y+a)+Math.sqrt(v*v+y*y),t.circle=g;for(var b=null,_=Ow._;_;)if(g.y<_.y||g.y===_.y&&g.x<=_.x){if(!_.L){b=_.P;break}_=_.L}else{if(!_.R){b=_;break}_=_.R}Ow.insert(b,g),b||(bw=g)}}}}function ww(t){var n=t.circle;n&&(n.P||(bw=n.N),Ow.remove(n),_w.push(n),uw(n),t.circle=null)}var Mw=[];function kw(){uw(this),this.edge=this.site=this.circle=null}function Sw(t){var n=Mw.pop()||new kw;return n.site=t,n}function Nw(t){ww(t),Pw.remove(t),Mw.push(t),uw(t)}function Aw(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],u=t.P,o=t.N,a=[t];Nw(t);for(var c=u;c.circle&&Math.abs(e-c.circle.x)<Lw&&Math.abs(r-c.circle.cy)<Lw;)u=c.P,a.unshift(c),Nw(c),c=u;a.unshift(c),ww(c);for(var f=o;f.circle&&Math.abs(e-f.circle.x)<Lw&&Math.abs(r-f.circle.cy)<Lw;)o=f.N,a.push(f),Nw(f),f=o;a.push(f),ww(f);var s,l=a.length;for(s=1;s<l;++s)f=a[s],c=a[s-1],hw(f.edge,c.site,f.site,i);c=a[0],(f=a[l-1]).edge=sw(c.site,f.site,null,i),xw(c),xw(f)}function Ew(t){for(var n,e,r,i,u=t[0],o=t[1],a=Pw._;a;)if((r=Tw(a,o)-u)>Lw)a=a.L;else{if(!((i=u-Cw(a,o))>Lw)){r>-Lw?(n=a.P,e=a):i>-Lw?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){zw[t.index]={site:t,halfedges:[]}}(t);var c=Sw(t);if(Pw.insert(n,c),n||e){if(n===e)return ww(n),e=Sw(n.site),Pw.insert(c,e),c.edge=e.edge=sw(n.site,c.site),xw(n),void xw(e);if(e){ww(n),ww(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,y=p[1]-l,g=2*(h*y-d*v),b=h*h+d*d,_=v*v+y*y,m=[(y*b-d*_)/g+s,(h*_-v*b)/g+l];hw(e.edge,f,p,m),c.edge=sw(f,t,null,m),e.edge=sw(t,p,null,m),xw(n),xw(e)}else c.edge=sw(n.site,c.site)}}function Tw(t,n){var e=t.site,r=e[0],i=e[1],u=i-n;if(!u)return r;var o=t.P;if(!o)return-1/0;var a=(e=o.site)[0],c=e[1],f=c-n;if(!f)return a;var s=a-r,l=1/u-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-u/2)))/l+r:(r+a)/2}function Cw(t,n){var e=t.N;if(e)return Tw(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var Pw,zw,Ow,Rw,Lw=1e-6,Dw=1e-12;function qw(t,n){return n[1]-t[1]||n[0]-t[0]}function jw(t,n){var e,r,i,u=t.sort(qw).pop();for(Rw=[],zw=new Array(t.length),Pw=new fw,Ow=new fw;;)if(i=bw,u&&(!i||u[1]<i.y||u[1]===i.y&&u[0]<i.x))u[0]===e&&u[1]===r||(Ew(u),e=u[0],r=u[1]),u=t.pop();else{if(!i)break;Aw(i.arc)}if(function(){for(var t,n,e,r,i=0,u=zw.length;i<u;++i)if((t=zw[i])&&(r=(n=t.halfedges).length)){var o=new Array(r),a=new Array(r);for(e=0;e<r;++e)o[e]=e,a[e]=vw(t,Rw[n[e]]);for(o.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[o[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var o=+n[0][0],a=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,u=Rw.length;u--;)pw(i=Rw[u],t,n,e,r)&&dw(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>Lw||Math.abs(i[0][1]-i[1][1])>Lw)||delete Rw[u]}(o,a,c,f),function(t,n,e,r){var i,u,o,a,c,f,s,l,h,d,p,v,y=zw.length,g=!0;for(i=0;i<y;++i)if(u=zw[i]){for(o=u.site,a=(c=u.halfedges).length;a--;)Rw[c[a]]||c.splice(a,1);for(a=0,f=c.length;a<f;)p=(d=gw(u,Rw[c[a]]))[0],v=d[1],l=(s=yw(u,Rw[c[++a%f]]))[0],h=s[1],(Math.abs(p-l)>Lw||Math.abs(v-h)>Lw)&&(c.splice(a,0,Rw.push(lw(o,d,Math.abs(p-t)<Lw&&r-v>Lw?[t,Math.abs(l-t)<Lw?h:r]:Math.abs(v-r)<Lw&&e-p>Lw?[Math.abs(h-r)<Lw?l:e,r]:Math.abs(p-e)<Lw&&v-n>Lw?[e,Math.abs(l-e)<Lw?h:n]:Math.abs(v-n)<Lw&&p-t>Lw?[Math.abs(h-n)<Lw?l:t,n]:null))-1),++f);f&&(g=!1)}if(g){var b,_,m,x=1/0;for(i=0,g=null;i<y;++i)(u=zw[i])&&(m=(b=(o=u.site)[0]-t)*b+(_=o[1]-n)*_)<x&&(x=m,g=u);if(g){var w=[t,n],M=[t,r],k=[e,r],S=[e,n];g.halfedges.push(Rw.push(lw(o=g.site,w,M))-1,Rw.push(lw(o,M,k))-1,Rw.push(lw(o,k,S))-1,Rw.push(lw(o,S,w))-1)}}for(i=0;i<y;++i)(u=zw[i])&&(u.halfedges.length||delete zw[i])}(o,a,c,f)}this.edges=Rw,this.cells=zw,Pw=Ow=Rw=zw=null}jw.prototype={constructor:jw,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return yw(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(u=(i=e.halfedges).length)for(var i,u,o,a,c,f,s=e.site,l=-1,h=n[i[u-1]],d=h.left===s?h.right:h.left;++l<u;)o=d,d=(h=n[i[l]]).left===s?h.right:h.left,o&&d&&r<o.index&&r<d.index&&(c=o,f=d,((a=s)[0]-f[0])*(c[1]-a[1])-(a[0]-c[0])*(f[1]-a[1])<0)&&t.push([s.data,o.data,d.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,u=this,o=u._found||0,a=u.cells.length;!(i=u.cells[o]);)if(++o>=a)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=u.cells[r=o],o=null,i.halfedges.forEach(function(e){var r=u.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=t-a[0],f=n-a[1],l=c*c+f*f;l<s&&(s=l,o=a.index)}})}while(null!==o);return u._found=r,null==e||s<=e*e?i.site:null}};var Iw=function(){var t=ew,n=rw,e=null;function r(r){return new jw(r.map(function(e,i){var u=[Math.round(t(e,i,r)/Lw)*Lw,Math.round(n(e,i,r)/Lw)*Lw];return u.index=i,u.data=e,u}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:nw(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:nw(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},Uw=function(t){return function(){return t}};function Fw(t,n,e){this.target=t,this.type=n,this.transform=e}function Bw(t,n,e){this.k=t,this.x=n,this.y=e}Bw.prototype={constructor:Bw,scale:function(t){return 1===t?this:new Bw(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new Bw(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Yw=new Bw(1,0,0);function Hw(t){return t.__zoom||Yw}function Xw(){Ht.stopImmediatePropagation()}Hw.prototype=Bw.prototype;var Gw=function(){Ht.preventDefault(),Ht.stopImmediatePropagation()};function Vw(){return!Ht.button}function Ww(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function $w(){return this.__zoom||Yw}function Zw(){return-Ht.deltaY*(Ht.deltaMode?120:1)/500}function Qw(){return"ontouchstart"in this}function Jw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],u=t.invertY(n[0][1])-e[0][1],o=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),o>u?(u+o)/2:Math.min(0,u)||Math.max(0,o))}var Kw=function(){var t,n,e=Vw,r=Ww,i=Jw,u=Zw,o=Qw,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],f=250,s=or,l=[],h=ht("start","zoom","end"),d=500,p=150,v=0;function y(t){t.property("__zoom",$w).on("wheel.zoom",M).on("mousedown.zoom",k).on("dblclick.zoom",S).filter(o).on("touchstart.zoom",N).on("touchmove.zoom",A).on("touchend.zoom touchcancel.zoom",E).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function g(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new Bw(n,t.x,t.y)}function b(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new Bw(t.k,r,i)}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=arguments,i=x(this,t),u=r.apply(this,t),o=e||_(u),a=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),c=this.__zoom,f="function"==typeof n?n.apply(this,t):n,l=s(c.invert(o).concat(a/c.k),f.invert(o).concat(a/f.k));return function(t){if(1===t)t=f;else{var n=l(t),e=a/n[2];t=new Bw(e,o[0]-n[0]*e,o[1]-n[1]*e)}i.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,u.apply(this,arguments)))),o=fn(this);if(t.wheel)t.mouse[0][0]===o[0]&&t.mouse[0][1]===o[1]||(t.mouse[1]=n.invert(t.mouse[0]=o)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[o,n.invert(o)],Kr(this),t.start()}Gw(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",i(b(g(n,r),t.mouse[0],t.mouse[1]),t.extent,c))}}function k(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=nn(Ht.view).on("mousemove.zoom",function(){if(Gw(),!t.moved){var n=Ht.clientX-o,e=Ht.clientY-a;t.moved=n*n+e*e>v}t.zoom("mouse",i(b(t.that.__zoom,t.mouse[0]=fn(t.that),t.mouse[1]),t.extent,c))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),yn(Ht.view,t.moved),Gw(),t.end()},!0),u=fn(this),o=Ht.clientX,a=Ht.clientY;vn(Ht.view),Xw(),t.mouse=[u,this.__zoom.invert(u)],Kr(this),t.start()}}function S(){if(e.apply(this,arguments)){var t=this.__zoom,n=fn(this),u=t.invert(n),o=t.k*(Ht.shiftKey?.5:2),a=i(b(g(t,o),n,u),r.apply(this,arguments),c);Gw(),f>0?nn(this).transition().duration(f).call(m,a,n):nn(this).call(y.transform,a)}}function N(){if(e.apply(this,arguments)){var n,r,i,u,o=x(this,arguments),a=Ht.changedTouches,c=a.length;for(Xw(),r=0;r<c;++r)i=a[r],u=[u=ln(this,a,i.identifier),this.__zoom.invert(u),i.identifier],o.touch0?o.touch1||(o.touch1=u):(o.touch0=u,n=!0);if(t&&(t=clearTimeout(t),!o.touch1))return o.end(),void((u=nn(this).on("dblclick.zoom"))&&u.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),Kr(this),o.start())}}function A(){var n,e,r,u,o=x(this,arguments),a=Ht.changedTouches,f=a.length;for(Gw(),t&&(t=clearTimeout(t)),n=0;n<f;++n)e=a[n],r=ln(this,a,e.identifier),o.touch0&&o.touch0[2]===e.identifier?o.touch0[0]=r:o.touch1&&o.touch1[2]===e.identifier&&(o.touch1[0]=r);if(e=o.that.__zoom,o.touch1){var s=o.touch0[0],l=o.touch0[1],h=o.touch1[0],d=o.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=g(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],u=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!o.touch0)return;r=o.touch0[0],u=o.touch0[1]}o.zoom("touch",i(b(e,r,u),o.extent,c))}function E(){var t,e,r=x(this,arguments),i=Ht.changedTouches,u=i.length;for(Xw(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<u;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return y.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",$w),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},y.scaleBy=function(t,n){y.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},y.scaleTo=function(t,n){y.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,u=_(t),o=e.invert(u),a="function"==typeof n?n.apply(this,arguments):n;return i(b(g(e,a),u,o),t,c)})},y.translateBy=function(t,n,e){y.transform(t,function(){return i(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),c)})},y.translateTo=function(t,n,e){y.transform(t,function(){var t=r.apply(this,arguments),u=this.__zoom,o=_(t);return i(Yw.translate(o[0],o[1]).scale(u.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,c)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){$t(new Fw(y,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},y.wheelDelta=function(t){return arguments.length?(u="function"==typeof t?t:Uw(+t),y):u},y.filter=function(t){return arguments.length?(e="function"==typeof t?t:Uw(!!t),y):e},y.touchable=function(t){return arguments.length?(o="function"==typeof t?t:Uw(!!t),y):o},y.extent=function(t){return arguments.length?(r="function"==typeof t?t:Uw([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),y):r},y.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],y):[a[0],a[1]]},y.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],y):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},y.constrain=function(t){return arguments.length?(i=t,y):i},y.duration=function(t){return arguments.length?(f=+t,y):f},y.interpolate=function(t){return arguments.length?(s=t,y):s},y.on=function(){var t=h.on.apply(h,arguments);return t===h?y:t},y.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,y):Math.sqrt(v)},y};e.d(n,"version",function(){return"5.8.2"}),e.d(n,"bisect",function(){return c}),e.d(n,"bisectRight",function(){return o}),e.d(n,"bisectLeft",function(){return a}),e.d(n,"ascending",function(){return r}),e.d(n,"bisector",function(){return i}),e.d(n,"cross",function(){return l}),e.d(n,"descending",function(){return h}),e.d(n,"deviation",function(){return v}),e.d(n,"extent",function(){return y}),e.d(n,"histogram",function(){return C}),e.d(n,"thresholdFreedmanDiaconis",function(){return z}),e.d(n,"thresholdScott",function(){return O}),e.d(n,"thresholdSturges",function(){return T}),e.d(n,"max",function(){return R}),e.d(n,"mean",function(){return L}),e.d(n,"median",function(){return D}),e.d(n,"merge",function(){return q}),e.d(n,"min",function(){return j}),e.d(n,"pairs",function(){return f}),e.d(n,"permute",function(){return I}),e.d(n,"quantile",function(){return P}),e.d(n,"range",function(){return w}),e.d(n,"scan",function(){return U}),e.d(n,"shuffle",function(){return F}),e.d(n,"sum",function(){return B}),e.d(n,"ticks",function(){return N}),e.d(n,"tickIncrement",function(){return A}),e.d(n,"tickStep",function(){return E}),e.d(n,"transpose",function(){return Y}),e.d(n,"variance",function(){return p}),e.d(n,"zip",function(){return X}),e.d(n,"axisTop",function(){return rt}),e.d(n,"axisRight",function(){return it}),e.d(n,"axisBottom",function(){return ut}),e.d(n,"axisLeft",function(){return ot}),e.d(n,"brush",function(){return ku}),e.d(n,"brushX",function(){return wu}),e.d(n,"brushY",function(){return Mu}),e.d(n,"brushSelection",function(){return xu}),e.d(n,"chord",function(){return zu}),e.d(n,"ribbon",function(){return Gu}),e.d(n,"nest",function(){return Zu}),e.d(n,"set",function(){return io}),e.d(n,"map",function(){return $u}),e.d(n,"keys",function(){return uo}),e.d(n,"values",function(){return oo}),e.d(n,"entries",function(){return ao}),e.d(n,"color",function(){return In}),e.d(n,"rgb",function(){return Yn}),e.d(n,"hsl",function(){return Vn}),e.d(n,"lab",function(){return ae}),e.d(n,"hcl",function(){return ve}),e.d(n,"lch",function(){return pe}),e.d(n,"gray",function(){return oe}),e.d(n,"cubehelix",function(){return Me}),e.d(n,"contours",function(){return bo}),e.d(n,"contourDensity",function(){return ko}),e.d(n,"dispatch",function(){return ht}),e.d(n,"drag",function(){return Mn}),e.d(n,"dragDisable",function(){return vn}),e.d(n,"dragEnable",function(){return yn}),e.d(n,"dsvFormat",function(){return Po}),e.d(n,"csvParse",function(){return Oo}),e.d(n,"csvParseRows",function(){return Ro}),e.d(n,"csvFormat",function(){return Lo}),e.d(n,"csvFormatRows",function(){return Do}),e.d(n,"tsvParse",function(){return jo}),e.d(n,"tsvParseRows",function(){return Io}),e.d(n,"tsvFormat",function(){return Uo}),e.d(n,"tsvFormatRows",function(){return Fo}),e.d(n,"easeLinear",function(){return fi}),e.d(n,"easeQuad",function(){return hi}),e.d(n,"easeQuadIn",function(){return si}),e.d(n,"easeQuadOut",function(){return li}),e.d(n,"easeQuadInOut",function(){return hi}),e.d(n,"easeCubic",function(){return vi}),e.d(n,"easeCubicIn",function(){return di}),e.d(n,"easeCubicOut",function(){return pi}),e.d(n,"easeCubicInOut",function(){return vi}),e.d(n,"easePoly",function(){return bi}),e.d(n,"easePolyIn",function(){return yi}),e.d(n,"easePolyOut",function(){return gi}),e.d(n,"easePolyInOut",function(){return bi}),e.d(n,"easeSin",function(){return Mi}),e.d(n,"easeSinIn",function(){return xi}),e.d(n,"easeSinOut",function(){return wi}),e.d(n,"easeSinInOut",function(){return Mi}),e.d(n,"easeExp",function(){return Ni}),e.d(n,"easeExpIn",function(){return ki}),e.d(n,"easeExpOut",function(){return Si}),e.d(n,"easeExpInOut",function(){return Ni}),e.d(n,"easeCircle",function(){return Ti}),e.d(n,"easeCircleIn",function(){return Ai}),e.d(n,"easeCircleOut",function(){return Ei}),e.d(n,"easeCircleInOut",function(){return Ti}),e.d(n,"easeBounce",function(){return Fi}),e.d(n,"easeBounceIn",function(){return Ui}),e.d(n,"easeBounceOut",function(){return Fi}),e.d(n,"easeBounceInOut",function(){return Bi}),e.d(n,"easeBack",function(){return Xi}),e.d(n,"easeBackIn",function(){return Yi}),e.d(n,"easeBackOut",function(){return Hi}),e.d(n,"easeBackInOut",function(){return Xi}),e.d(n,"easeElastic",function(){return Wi}),e.d(n,"easeElasticIn",function(){return Vi}),e.d(n,"easeElasticOut",function(){return Wi}),e.d(n,"easeElasticInOut",function(){return $i}),e.d(n,"blob",function(){return Yo}),e.d(n,"buffer",function(){return Xo}),e.d(n,"dsv",function(){return $o}),e.d(n,"csv",function(){return Zo}),e.d(n,"tsv",function(){return Qo}),e.d(n,"image",function(){return Jo}),e.d(n,"json",function(){return ta}),e.d(n,"text",function(){return Vo}),e.d(n,"xml",function(){return ea}),e.d(n,"html",function(){return ra}),e.d(n,"svg",function(){return ia}),e.d(n,"forceCenter",function(){return ua}),e.d(n,"forceCollide",function(){return ba}),e.d(n,"forceLink",function(){return xa}),e.d(n,"forceManyBody",function(){return Aa}),e.d(n,"forceRadial",function(){return Ea}),e.d(n,"forceSimulation",function(){return Na}),e.d(n,"forceX",function(){return Ta}),e.d(n,"forceY",function(){return Ca}),e.d(n,"formatDefaultLocale",function(){return Ga}),e.d(n,"format",function(){return ja}),e.d(n,"formatPrefix",function(){return Ia}),e.d(n,"formatLocale",function(){return Xa}),e.d(n,"formatSpecifier",function(){return Ra}),e.d(n,"precisionFixed",function(){return Va}),e.d(n,"precisionPrefix",function(){return Wa}),e.d(n,"precisionRound",function(){return $a}),e.d(n,"geoArea",function(){return Fc}),e.d(n,"geoBounds",function(){return Rf}),e.d(n,"geoCentroid",function(){return Gf}),e.d(n,"geoCircle",function(){return rs}),e.d(n,"geoClipAntimeridian",function(){return ps}),e.d(n,"geoClipCircle",function(){return vs}),e.d(n,"geoClipExtent",function(){return Ms}),e.d(n,"geoClipRectangle",function(){return _s}),e.d(n,"geoContains",function(){return Fs}),e.d(n,"geoDistance",function(){return zs}),e.d(n,"geoGraticule",function(){return Hs}),e.d(n,"geoGraticule10",function(){return Xs}),e.d(n,"geoInterpolate",function(){return Zs}),e.d(n,"geoLength",function(){return Ts}),e.d(n,"geoPath",function(){return Wl}),e.d(n,"geoAlbers",function(){return dh}),e.d(n,"geoAlbersUsa",function(){return ph}),e.d(n,"geoAzimuthalEqualArea",function(){return bh}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return gh}),e.d(n,"geoAzimuthalEquidistant",function(){return mh}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return _h}),e.d(n,"geoConicConformal",function(){return Nh}),e.d(n,"geoConicConformalRaw",function(){return Sh}),e.d(n,"geoConicEqualArea",function(){return hh}),e.d(n,"geoConicEqualAreaRaw",function(){return lh}),e.d(n,"geoConicEquidistant",function(){return Ch}),e.d(n,"geoConicEquidistantRaw",function(){return Th}),e.d(n,"geoEqualEarth",function(){return qh}),e.d(n,"geoEqualEarthRaw",function(){return Dh}),e.d(n,"geoEquirectangular",function(){return Eh}),e.d(n,"geoEquirectangularRaw",function(){return Ah}),e.d(n,"geoGnomonic",function(){return Ih}),e.d(n,"geoGnomonicRaw",function(){return jh}),e.d(n,"geoIdentity",function(){return Fh}),e.d(n,"geoProjection",function(){return ch}),e.d(n,"geoProjectionMutator",function(){return fh}),e.d(n,"geoMercator",function(){return wh}),e.d(n,"geoMercatorRaw",function(){return xh}),e.d(n,"geoNaturalEarth1",function(){return Yh}),e.d(n,"geoNaturalEarth1Raw",function(){return Bh}),e.d(n,"geoOrthographic",function(){return Xh}),e.d(n,"geoOrthographicRaw",function(){return Hh}),e.d(n,"geoStereographic",function(){return Vh}),e.d(n,"geoStereographicRaw",function(){return Gh}),e.d(n,"geoTransverseMercator",function(){return $h}),e.d(n,"geoTransverseMercatorRaw",function(){return Wh}),e.d(n,"geoRotation",function(){return ts}),e.d(n,"geoStream",function(){return Oc}),e.d(n,"geoTransform",function(){return $l}),e.d(n,"cluster",function(){return Kh}),e.d(n,"hierarchy",function(){return nd}),e.d(n,"pack",function(){return Sd}),e.d(n,"packSiblings",function(){return md}),e.d(n,"packEnclose",function(){return ad}),e.d(n,"partition",function(){return Pd}),e.d(n,"stratify",function(){return qd}),e.d(n,"tree",function(){return Hd}),e.d(n,"treemap",function(){return $d}),e.d(n,"treemapBinary",function(){return Zd}),e.d(n,"treemapDice",function(){return Cd}),e.d(n,"treemapSlice",function(){return Xd}),e.d(n,"treemapSliceDice",function(){return Qd}),e.d(n,"treemapSquarify",function(){return Wd}),e.d(n,"treemapResquarify",function(){return Jd}),e.d(n,"interpolate",function(){return We}),e.d(n,"interpolateArray",function(){return qe}),e.d(n,"interpolateBasis",function(){return Ne}),e.d(n,"interpolateBasisClosed",function(){return Ae}),e.d(n,"interpolateDate",function(){return je}),e.d(n,"interpolateDiscrete",function(){return $e}),e.d(n,"interpolateHue",function(){return Ze}),e.d(n,"interpolateNumber",function(){return Ie}),e.d(n,"interpolateObject",function(){return Ue}),e.d(n,"interpolateRound",function(){return Qe}),e.d(n,"interpolateString",function(){return Ve}),e.d(n,"interpolateTransformCss",function(){return er}),e.d(n,"interpolateTransformSvg",function(){return rr}),e.d(n,"interpolateZoom",function(){return or}),e.d(n,"interpolateRgb",function(){return Oe}),e.d(n,"interpolateRgbBasis",function(){return Le}),e.d(n,"interpolateRgbBasisClosed",function(){return De}),e.d(n,"interpolateHsl",function(){return cr}),e.d(n,"interpolateHslLong",function(){return fr}),e.d(n,"interpolateLab",function(){return sr}),e.d(n,"interpolateHcl",function(){return hr}),e.d(n,"interpolateHclLong",function(){return dr}),e.d(n,"interpolateCubehelix",function(){return vr}),e.d(n,"interpolateCubehelixLong",function(){return yr}),e.d(n,"piecewise",function(){return gr}),e.d(n,"quantize",function(){return mr}),e.d(n,"path",function(){return Uu}),e.d(n,"polygonArea",function(){return Kd}),e.d(n,"polygonCentroid",function(){return tp}),e.d(n,"polygonHull",function(){return ip}),e.d(n,"polygonContains",function(){return up}),e.d(n,"polygonLength",function(){return op}),e.d(n,"quadtree",function(){return ha}),e.d(n,"randomUniform",function(){return cp}),e.d(n,"randomNormal",function(){return fp}),e.d(n,"randomLogNormal",function(){return sp}),e.d(n,"randomBates",function(){return hp}),e.d(n,"randomIrwinHall",function(){return lp}),e.d(n,"randomExponential",function(){return dp}),e.d(n,"scaleBand",function(){return xp}),e.d(n,"scalePoint",function(){return wp}),e.d(n,"scaleIdentity",function(){return qp}),e.d(n,"scaleLinear",function(){return Dp}),e.d(n,"scaleLog",function(){return Gp}),e.d(n,"scaleSymlog",function(){return Zp}),e.d(n,"scaleOrdinal",function(){return mp}),e.d(n,"scaleImplicit",function(){return _p}),e.d(n,"scalePow",function(){return nv}),e.d(n,"scaleSqrt",function(){return ev}),e.d(n,"scaleQuantile",function(){return rv}),e.d(n,"scaleQuantize",function(){return iv}),e.d(n,"scaleThreshold",function(){return uv}),e.d(n,"scaleTime",function(){return nb}),e.d(n,"scaleUtc",function(){return eb}),e.d(n,"scaleSequential",function(){return ub}),e.d(n,"scaleSequentialLog",function(){return ob}),e.d(n,"scaleSequentialPow",function(){return cb}),e.d(n,"scaleSequentialSqrt",function(){return fb}),e.d(n,"scaleSequentialSymlog",function(){return ab}),e.d(n,"scaleSequentialQuantile",function(){return sb}),e.d(n,"scaleDiverging",function(){return hb}),e.d(n,"scaleDivergingLog",function(){return db}),e.d(n,"scaleDivergingPow",function(){return vb}),e.d(n,"scaleDivergingSqrt",function(){return yb}),e.d(n,"scaleDivergingSymlog",function(){return pb}),e.d(n,"tickFormat",function(){return Rp}),e.d(n,"schemeCategory10",function(){return bb}),e.d(n,"schemeAccent",function(){return _b}),e.d(n,"schemeDark2",function(){return mb}),e.d(n,"schemePaired",function(){return xb}),e.d(n,"schemePastel1",function(){return wb}),e.d(n,"schemePastel2",function(){return Mb}),e.d(n,"schemeSet1",function(){return kb}),e.d(n,"schemeSet2",function(){return Sb}),e.d(n,"schemeSet3",function(){return Nb}),e.d(n,"interpolateBrBG",function(){return Tb}),e.d(n,"schemeBrBG",function(){return Eb}),e.d(n,"interpolatePRGn",function(){return Pb}),e.d(n,"schemePRGn",function(){return Cb}),e.d(n,"interpolatePiYG",function(){return Ob}),e.d(n,"schemePiYG",function(){return zb}),e.d(n,"interpolatePuOr",function(){return Lb}),e.d(n,"schemePuOr",function(){return Rb}),e.d(n,"interpolateRdBu",function(){return qb}),e.d(n,"schemeRdBu",function(){return Db}),e.d(n,"interpolateRdGy",function(){return Ib}),e.d(n,"schemeRdGy",function(){return jb}),e.d(n,"interpolateRdYlBu",function(){return Fb}),e.d(n,"schemeRdYlBu",function(){return Ub}),e.d(n,"interpolateRdYlGn",function(){return Yb}),e.d(n,"schemeRdYlGn",function(){return Bb}),e.d(n,"interpolateSpectral",function(){return Xb}),e.d(n,"schemeSpectral",function(){return Hb}),e.d(n,"interpolateBuGn",function(){return Vb}),e.d(n,"schemeBuGn",function(){return Gb}),e.d(n,"interpolateBuPu",function(){return $b}),e.d(n,"schemeBuPu",function(){return Wb}),e.d(n,"interpolateGnBu",function(){return Qb}),e.d(n,"schemeGnBu",function(){return Zb}),e.d(n,"interpolateOrRd",function(){return Kb}),e.d(n,"schemeOrRd",function(){return Jb}),e.d(n,"interpolatePuBuGn",function(){return n_}),e.d(n,"schemePuBuGn",function(){return t_}),e.d(n,"interpolatePuBu",function(){return r_}),e.d(n,"schemePuBu",function(){return e_}),e.d(n,"interpolatePuRd",function(){return u_}),e.d(n,"schemePuRd",function(){return i_}),e.d(n,"interpolateRdPu",function(){return a_}),e.d(n,"schemeRdPu",function(){return o_}),e.d(n,"interpolateYlGnBu",function(){return f_}),e.d(n,"schemeYlGnBu",function(){return c_}),e.d(n,"interpolateYlGn",function(){return l_}),e.d(n,"schemeYlGn",function(){return s_}),e.d(n,"interpolateYlOrBr",function(){return d_}),e.d(n,"schemeYlOrBr",function(){return h_}),e.d(n,"interpolateYlOrRd",function(){return v_}),e.d(n,"schemeYlOrRd",function(){return p_}),e.d(n,"interpolateBlues",function(){return g_}),e.d(n,"schemeBlues",function(){return y_}),e.d(n,"interpolateGreens",function(){return __}),e.d(n,"schemeGreens",function(){return b_}),e.d(n,"interpolateGreys",function(){return x_}),e.d(n,"schemeGreys",function(){return m_}),e.d(n,"interpolatePurples",function(){return M_}),e.d(n,"schemePurples",function(){return w_}),e.d(n,"interpolateReds",function(){return S_}),e.d(n,"schemeReds",function(){return k_}),e.d(n,"interpolateOranges",function(){return A_}),e.d(n,"schemeOranges",function(){return N_}),e.d(n,"interpolateCubehelixDefault",function(){return E_}),e.d(n,"interpolateRainbow",function(){return z_}),e.d(n,"interpolateWarm",function(){return T_}),e.d(n,"interpolateCool",function(){return C_}),e.d(n,"interpolateSinebow",function(){return D_}),e.d(n,"interpolateViridis",function(){return j_}),e.d(n,"interpolateMagma",function(){return I_}),e.d(n,"interpolateInferno",function(){return U_}),e.d(n,"interpolatePlasma",function(){return F_}),e.d(n,"create",function(){return en}),e.d(n,"creator",function(){return yt}),e.d(n,"local",function(){return un}),e.d(n,"matcher",function(){return xt}),e.d(n,"mouse",function(){return fn}),e.d(n,"namespace",function(){return vt}),e.d(n,"namespaces",function(){return pt}),e.d(n,"clientPoint",function(){return cn}),e.d(n,"select",function(){return nn}),e.d(n,"selectAll",function(){return sn}),e.d(n,"selection",function(){return tn}),e.d(n,"selector",function(){return bt}),e.d(n,"selectorAll",function(){return mt}),e.d(n,"style",function(){return Tt}),e.d(n,"touch",function(){return ln}),e.d(n,"touches",function(){return hn}),e.d(n,"window",function(){return Et}),e.d(n,"event",function(){return Ht}),e.d(n,"customEvent",function(){return $t}),e.d(n,"arc",function(){return am}),e.d(n,"area",function(){return dm}),e.d(n,"line",function(){return hm}),e.d(n,"pie",function(){return ym}),e.d(n,"areaRadial",function(){return wm}),e.d(n,"radialArea",function(){return wm}),e.d(n,"lineRadial",function(){return xm}),e.d(n,"radialLine",function(){return xm}),e.d(n,"pointRadial",function(){return Mm}),e.d(n,"linkHorizontal",function(){return Pm}),e.d(n,"linkVertical",function(){return zm}),e.d(n,"linkRadial",function(){return Om}),e.d(n,"symbol",function(){return Qm}),e.d(n,"symbols",function(){return Zm}),e.d(n,"symbolCircle",function(){return Rm}),e.d(n,"symbolCross",function(){return Lm}),e.d(n,"symbolDiamond",function(){return jm}),e.d(n,"symbolSquare",function(){return Ym}),e.d(n,"symbolStar",function(){return Bm}),e.d(n,"symbolTriangle",function(){return Xm}),e.d(n,"symbolWye",function(){return $m}),e.d(n,"curveBasisClosed",function(){return rx}),e.d(n,"curveBasisOpen",function(){return ux}),e.d(n,"curveBasis",function(){return nx}),e.d(n,"curveBundle",function(){return ax}),e.d(n,"curveCardinalClosed",function(){return hx}),e.d(n,"curveCardinalOpen",function(){return px}),e.d(n,"curveCardinal",function(){return sx}),e.d(n,"curveCatmullRomClosed",function(){return _x}),e.d(n,"curveCatmullRomOpen",function(){return xx}),e.d(n,"curveCatmullRom",function(){return gx}),e.d(n,"curveLinearClosed",function(){return Mx}),e.d(n,"curveLinear",function(){return fm}),e.d(n,"curveMonotoneX",function(){return Px}),e.d(n,"curveMonotoneY",function(){return zx}),e.d(n,"curveNatural",function(){return Lx}),e.d(n,"curveStep",function(){return qx}),e.d(n,"curveStepAfter",function(){return Ix}),e.d(n,"curveStepBefore",function(){return jx}),e.d(n,"stack",function(){return Yx}),e.d(n,"stackOffsetExpand",function(){return Hx}),e.d(n,"stackOffsetDiverging",function(){return Xx}),e.d(n,"stackOffsetNone",function(){return Ux}),e.d(n,"stackOffsetSilhouette",function(){return Gx}),e.d(n,"stackOffsetWiggle",function(){return Vx}),e.d(n,"stackOrderAppearance",function(){return Wx}),e.d(n,"stackOrderAscending",function(){return Zx}),e.d(n,"stackOrderDescending",function(){return Jx}),e.d(n,"stackOrderInsideOut",function(){return Kx}),e.d(n,"stackOrderNone",function(){return Fx}),e.d(n,"stackOrderReverse",function(){return tw}),e.d(n,"timeInterval",function(){return cv}),e.d(n,"timeMillisecond",function(){return sv}),e.d(n,"timeMilliseconds",function(){return lv}),e.d(n,"utcMillisecond",function(){return sv}),e.d(n,"utcMilliseconds",function(){return lv}),e.d(n,"timeSecond",function(){return vv}),e.d(n,"timeSeconds",function(){return yv}),e.d(n,"utcSecond",function(){return vv}),e.d(n,"utcSeconds",function(){return yv}),e.d(n,"timeMinute",function(){return bv}),e.d(n,"timeMinutes",function(){return _v}),e.d(n,"timeHour",function(){return xv}),e.d(n,"timeHours",function(){return wv}),e.d(n,"timeDay",function(){return kv}),e.d(n,"timeDays",function(){return Sv}),e.d(n,"timeWeek",function(){return Av}),e.d(n,"timeWeeks",function(){return Rv}),e.d(n,"timeSunday",function(){return Av}),e.d(n,"timeSundays",function(){return Rv}),e.d(n,"timeMonday",function(){return Ev}),e.d(n,"timeMondays",function(){return Lv}),e.d(n,"timeTuesday",function(){return Tv}),e.d(n,"timeTuesdays",function(){return Dv}),e.d(n,"timeWednesday",function(){return Cv}),e.d(n,"timeWednesdays",function(){return qv}),e.d(n,"timeThursday",function(){return Pv}),e.d(n,"timeThursdays",function(){return jv}),e.d(n,"timeFriday",function(){return zv}),e.d(n,"timeFridays",function(){return Iv}),e.d(n,"timeSaturday",function(){return Ov}),e.d(n,"timeSaturdays",function(){return Uv}),e.d(n,"timeMonth",function(){return Bv}),e.d(n,"timeMonths",function(){return Yv}),e.d(n,"timeYear",function(){return Xv}),e.d(n,"timeYears",function(){return Gv}),e.d(n,"utcMinute",function(){return Wv}),e.d(n,"utcMinutes",function(){return $v}),e.d(n,"utcHour",function(){return Qv}),e.d(n,"utcHours",function(){return Jv}),e.d(n,"utcDay",function(){return ty}),e.d(n,"utcDays",function(){return ny}),e.d(n,"utcWeek",function(){return ry}),e.d(n,"utcWeeks",function(){return sy}),e.d(n,"utcSunday",function(){return ry}),e.d(n,"utcSundays",function(){return sy}),e.d(n,"utcMonday",function(){return iy}),e.d(n,"utcMondays",function(){return ly}),e.d(n,"utcTuesday",function(){return uy}),e.d(n,"utcTuesdays",function(){return hy}),e.d(n,"utcWednesday",function(){return oy}),e.d(n,"utcWednesdays",function(){return dy}),e.d(n,"utcThursday",function(){return ay}),e.d(n,"utcThursdays",function(){return py}),e.d(n,"utcFriday",function(){return cy}),e.d(n,"utcFridays",function(){return vy}),e.d(n,"utcSaturday",function(){return fy}),e.d(n,"utcSaturdays",function(){return yy}),e.d(n,"utcMonth",function(){return by}),e.d(n,"utcMonths",function(){return _y}),e.d(n,"utcYear",function(){return xy}),e.d(n,"utcYears",function(){return wy}),e.d(n,"timeFormatDefaultLocale",function(){return Bg}),e.d(n,"timeFormat",function(){return Ey}),e.d(n,"timeParse",function(){return Ty}),e.d(n,"utcFormat",function(){return Cy}),e.d(n,"utcParse",function(){return Py}),e.d(n,"timeFormatLocale",function(){return Ny}),e.d(n,"isoFormat",function(){return Yg}),e.d(n,"isoParse",function(){return Hg}),e.d(n,"now",function(){return Cr}),e.d(n,"timer",function(){return Or}),e.d(n,"timerFlush",function(){return Rr}),e.d(n,"timeout",function(){return jr}),e.d(n,"interval",function(){return Ir}),e.d(n,"transition",function(){return oi}),e.d(n,"active",function(){return Ki}),e.d(n,"interrupt",function(){return Kr}),e.d(n,"voronoi",function(){return Iw}),e.d(n,"zoom",function(){return Kw}),e.d(n,"zoomTransform",function(){return Hw}),e.d(n,"zoomIdentity",function(){return Yw})},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},i=function(){function t(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(n,e,r){return e&&t(n.prototype,e),r&&t(n,r),n}}(),u=c(e(3)),o=c(e(4)),a=c(e(5));function c(t){return t&&t.__esModule?t:{default:t}}var f={d3:o.default,canvas:a.default},s={renderer:"canvas",width:900,height:600,tag:"div"},l=function(){function t(n,e){var i=this;if(function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,t),!n)throw new Error("please provide a tensorflow.js model");var o=r({},s,e);this.config=o;var a,c=f[o.renderer];if(!c)throw new Error("Missing renderer: "+o.renderer+". Options: [d3]");this.element=document.createElement(o.tag),document.body.appendChild(this.element),this.test=document.createElement("p"),this.test.innerText="test",this.element.appendChild(this.test),this.renderer=new c(this.element,o),o.predictCallback=function(){i.renderer.update(i.model)},o.hookCallback=function(t){i.renderer.layerUpdate(t)},(a=regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,(0,u.default)(n,o);case 2:i.model=t.sent,i.renderer.initialize(i.model);case 4:case"end":return t.stop()}},t,i)}),function(){var t=a.apply(this,arguments);return new Promise(function(n,e){return function r(i,u){try{var o=t[i](u),a=o.value}catch(t){return void e(t)}if(!o.done)return Promise.resolve(a).then(function(t){r("next",t)},function(t){r("throw",t)});n(a)}("next")})})()}return i(t,[{key:"getDOMElement",value:function(){return this.element}}]),t}();n.default=l,t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,i=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},u=(r=o(regeneratorRuntime.mark(function t(n,e){var r,u,c,f;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return c=function t(n,e){var i,c=this,f=n.name,s=n.input,l=n.inputs,h=n.shape,d=n.sourceLayer,p=d||{},v=p.getWeights,y=p.setCallHook,g=p.activation,b={previousColumn:[],name:f,shape:h,weights:{},getWeights:a,mapPosition:Object.keys(r.layerMap).length};if(r.layerMap[f]=b,g){var _=g.getClassName();b.activation={name:_}}return y&&d.setCallHook((i=o(regeneratorRuntime.mark(function t(n){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return b.getWeights(),t.next=3,n[0].dataSync();case 3:b.activations=t.sent,u.hookCallback(b);case 5:case"end":return t.stop()}},t,c)})),function(t){return i.apply(this,arguments)})),v&&(b.getWeights=o(regeneratorRuntime.mark(function t(){var n,e,r,i,u;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,d.getWeights();case 2:n=t.sent,e=0;case 4:if(!(e<n.length)){t.next=16;break}return r=n[e],i=r.rankType,u=r.name,b.hasWeights=!0,t.t0=u,t.next=11,n[e].dataSync();case 11:t.t1=t.sent,b.weights[i]={name:t.t0,values:t.t1};case 13:e++,t.next=4;break;case 16:case"end":return t.stop()}},t,c)})),b.getWeights()),l?l.forEach(function(n){t(n,b.previousColumn)}):t(s,b.previousColumn),e&&e.push(b),b},r={layerMap:{}},u=i({predictCallback:a,hookCallback:a},e),f=n.predict,n.predict=function(){for(var t=arguments.length,e=Array(t),i=0;i<t;i++)e[i]=arguments[i];var o=f.apply(n,e);return r.output=o.dataSync(),u.predictCallback(r),o},t.next=7,c(n.layers[n.layers.length-1].output);case 7:return r.model=t.sent,t.abrupt("return",r);case 9:case"end":return t.stop()}},t,this)})),function(t,n){return r.apply(this,arguments)});function o(t){return function(){var n=t.apply(this,arguments);return new Promise(function(t,e){return function r(i,u){try{var o=n[i](u),a=o.value}catch(t){return void e(t)}if(!o.done)return Promise.resolve(a).then(function(t){r("next",t)},function(t){r("throw",t)});t(a)}("next")})}}function a(){}n.default=u,t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,i=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},u=function(){function t(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(n,e,r){return e&&t(n.prototype,e),r&&t(n,r),n}}(),o=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n.default=t,n}(e(1)),a=e(0),c=(r=a)&&r.__esModule?r:{default:r};var f={radius:15,renderLinks:!0,layer:{}},s=function(t){function n(t,e){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);var r=function(t,n){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?t:n}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t,e));r.parentDom=t;var u=document.createElementNS("http://www.w3.org/2000/svg","svg");r.parentDom.appendChild(u),r.svg=r.root=o.select(u).attr("width",e.width).attr("height",e.height);var a=r.svg.append("g");return r.zoom=o.zoom().on("zoom",function(){r.svg.attr("transform",o.event.transform)}),r.svg.append("rect").attr("width",e.width).attr("height",e.height).style("fill","transparent").style("pointer-events","all").call(r.zoom),r.svg=a,r.config=i({},f,e),r}return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(t,n):t.__proto__=n)}(n,c.default),u(n,[{key:"updateNode",value:function(t,n){t.valueTextElement.innerHTML=n?n.toFixed(2):"N/A"}},{key:"updateLink",value:function(t,n){o.select(t.dom).attr("stroke-width",Math.abs(n)).attr("stroke",n<0?"#FF0000":"#000000")}},{key:"updateBias",value:function(t){t.biasTextElement.innerHTML=t.bias.toFixed(2)}},{key:"initialize",value:function(t){var e=this;(function t(n,e,r){null===n&&(n=Function.prototype);var i=Object.getOwnPropertyDescriptor(n,e);if(void 0===i){var u=Object.getPrototypeOf(n);return null===u?void 0:t(u,e,r)}if("value"in i)return i.value;var o=i.get;return void 0!==o?o.call(r):void 0})(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"initialize",this).call(this,t);var r=o.scaleOrdinal(o.schemePastel1),u=Object.values(this.nodesMap).sort(function(t,n){return t.layerIndex-n.layerIndex}),a=0,c=0,f=0;u.forEach(function(t){var n=i({columns:1},e.config.layer[t.layerName]);f!==t.layerIndex&&(f=t.layerIndex,a=c+100);var r=Math.floor(e.columnSizes[t.layerIndex]/n.columns);t.y=e.config.height/2-r*e.config.radius*1.5+Math.floor(t.indexInColumn/n.columns)*e.config.radius*3,t.x=a+t.indexInLayer%n.columns*e.config.radius*4,c<t.x&&(c=t.x)});var s=this.simulation=o.forceSimulation(u),l=this.svg.append("g").attr("stroke","#000").selectAll("line").data(this.links).join("line").call(function(t){t.each(function(t,n,e){return t.dom=e[n]})}),h=this.svg.append("g").selectAll(".node").data(u).enter().append("g").attr("class","node").join(".node");h.append("circle").attr("r",this.config.radius).attr("fill",function(t){return r(t.groupIndex)}).attr("stroke","#000").attr("stroke-width","1px"),h.append("text").attr("stroke","#000").attr("stroke-width",.5).attr("font-size",6).attr("transform","translate(0, -"+1.2*this.config.radius+")").attr("text-anchor","middle").text(function(t){return t.biasTextElement=this,t.bias}),h.append("text").attr("stroke","#000").attr("stroke-width",.5).attr("font-size",6).attr("text-anchor","middle").attr("alignment-baseline","middle").text(function(t){return t.valueTextElement=this,t.value?t.value.toFixed(2):""}),s.on("tick",function(){l.attr("x1",function(t){return t.source.x}).attr("y1",function(t){return t.source.y}).attr("x2",function(t){return t.target.x}).attr("y2",function(t){return t.target.y}).attr("stroke-width",function(t){return t.weight}),h.attr("transform",function(t){return"translate("+t.x+", "+t.y+")"})})}}]),n}();n.default=s,t.exports=n.default},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,i=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},u=function(){function t(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(n,e,r){return e&&t(n.prototype,e),r&&t(n,r),n}}(),o=(function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);n.default=t}(e(1)),e(0)),a=(r=o)&&r.__esModule?r:{default:r};var c={radius:1,layerPadding:20,layer:{}},f=function(t){function n(t,e){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);var r=function(t,n){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?t:n}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t,e)),u=e.width,o=e.height,a=document.createElement("canvas");t.appendChild(a),a.setAttribute("width",u),a.setAttribute("height",o);var f=r.ctx=a.getContext("2d");return f.beginPath(),f.rect(0,0,u,o),f.fillStyle="#000",f.fill(),r.config=i({},c,e),r}return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(t,n):t.__proto__=n)}(n,a.default),u(n,[{key:"updateNode",value:function(t,n){t.render(n)}},{key:"updateBias",value:function(t){}},{key:"initialize",value:function(t){var e=this;(function t(n,e,r){null===n&&(n=Function.prototype);var i=Object.getOwnPropertyDescriptor(n,e);if(void 0===i){var u=Object.getPrototypeOf(n);return null===u?void 0:t(u,e,r)}if("value"in i)return i.value;var o=i.get;return void 0!==o?o.call(r):void 0})(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"initialize",this).call(this,t);var r=Object.values(this.nodesMap).sort(function(t,n){return t.layerIndex-n.layerIndex}),u=0,o=0,a=0;r.forEach(function(t){var n=i({columns:1,getFillStyle:function(t){return"rgba(255, 255, 255, "+t/255+")"},radius:e.config.radius},e.config.layer[t.layerName]),r=n.radius;t.render=function(n){e.ctx.fillStyle="#000",e.ctx.beginPath(),e.ctx.arc(t.x,t.y,r,0,2*Math.PI),e.ctx.fill(),e.ctx.fillStyle=t.getFillStyle(n),e.ctx.beginPath(),e.ctx.arc(t.x,t.y,r,0,2*Math.PI),e.ctx.fill()},a!==t.layerIndex&&(a=t.layerIndex,u=o+e.config.layerPadding);var c=Math.floor(e.columnSizes[t.layerIndex]/n.columns);t.y=Math.floor(e.config.height/2-c*r*1.5+Math.floor(t.indexInColumn/n.columns)*r*3),t.x=Math.floor(u+t.indexInLayer%n.columns*r*3),t.radius=r,t.getFillStyle=n.getFillStyle,o<t.x&&(o=t.x)}),this.ctx.strokeStyle="rgba(255,255,255,1)",r.forEach(function(t){var n=t.x,r=t.y;e.ctx.beginPath(),e.ctx.arc(n,r,t.radius,0,2*Math.PI),e.ctx.stroke()}),console.log(r)}}]),n}();n.default=f,t.exports=n.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,